{"id":"d72e705eed0891e91f76bf9a580c3def","_format":"hh-sol-build-info-1","solcVersion":"0.8.28","solcLongVersion":"0.8.28+commit.7893614a","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"./IERC721.sol\";\nimport {IERC721Metadata} from \"./extensions/IERC721Metadata.sol\";\nimport {ERC721Utils} from \"./utils/ERC721Utils.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {Strings} from \"../../utils/Strings.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {IERC721Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\nabstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Errors {\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    mapping(uint256 tokenId => address) private _owners;\n\n    mapping(address owner => uint256) private _balances;\n\n    mapping(uint256 tokenId => address) private _tokenApprovals;\n\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual returns (uint256) {\n        if (owner == address(0)) {\n            revert ERC721InvalidOwner(address(0));\n        }\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\n        return _requireOwned(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual {\n        _approve(to, tokenId, _msgSender());\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\n        _requireOwned(tokenId);\n\n        return _getApproved(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\n        address previousOwner = _update(to, tokenId, _msgSender());\n        if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\n        transferFrom(from, to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     *\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n     * core ERC-721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\n     */\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n     * particular (ignoring whether it is owned by `owner`).\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\n        return\n            spender != address(0) &&\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n     * Reverts if:\n     * - `spender` does not have approval from `owner` for `tokenId`.\n     * - `spender` does not have approval to manage all of `owner`'s assets.\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\n        if (!_isAuthorized(owner, spender, tokenId)) {\n            if (owner == address(0)) {\n                revert ERC721NonexistentToken(tokenId);\n            } else {\n                revert ERC721InsufficientApproval(spender, tokenId);\n            }\n        }\n    }\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n     *\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n     * remain consistent with one another.\n     */\n    function _increaseBalance(address account, uint128 value) internal virtual {\n        unchecked {\n            _balances[account] += value;\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\n     */\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\n        address from = _ownerOf(tokenId);\n\n        // Perform (optional) operator check\n        if (auth != address(0)) {\n            _checkAuthorized(from, auth, tokenId);\n        }\n\n        // Execute the update\n        if (from != address(0)) {\n            // Clear approval. No need to re-authorize or emit the Approval event\n            _approve(address(0), tokenId, address(0), false);\n\n            unchecked {\n                _balances[from] -= 1;\n            }\n        }\n\n        if (to != address(0)) {\n            unchecked {\n                _balances[to] += 1;\n            }\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        return from;\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner != address(0)) {\n            revert ERC721InvalidSender(address(0));\n        }\n    }\n\n    /**\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), address(0), to, tokenId, data);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal {\n        address previousOwner = _update(address(0), tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        } else if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n     * are aware of the ERC-721 standard to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `tokenId` token must exist and be owned by `from`.\n     * - `to` cannot be the zero address.\n     * - `from` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\n        _safeTransfer(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\n     *\n     * Emits an {Approval} event.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address to, uint256 tokenId, address auth) internal {\n        _approve(to, tokenId, auth, true);\n    }\n\n    /**\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n     * emitted in the context of transfers.\n     */\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\n        // Avoid reading the owner unless necessary\n        if (emitEvent || auth != address(0)) {\n            address owner = _requireOwned(tokenId);\n\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\n                revert ERC721InvalidApprover(auth);\n            }\n\n            if (emitEvent) {\n                emit Approval(owner, to, tokenId);\n            }\n        }\n\n        _tokenApprovals[tokenId] = to;\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Requirements:\n     * - operator can't be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC721InvalidOperator(operator);\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n     * Returns the owner.\n     *\n     * Overrides to ownership logic should be done to {_ownerOf}.\n     */\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\n        address owner = _ownerOf(tokenId);\n        if (owner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n        return owner;\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC-721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @title ERC-721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC-721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n     * reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC721/utils/ERC721Utils.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721Receiver} from \"../IERC721Receiver.sol\";\nimport {IERC721Errors} from \"../../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Library that provide common ERC-721 utility functions.\n *\n * See https://eips.ethereum.org/EIPS/eip-721[ERC-721].\n *\n * _Available since v5.1._\n */\nlibrary ERC721Utils {\n    /**\n     * @dev Performs an acceptance check for the provided `operator` by calling {IERC721Receiver-onERC721Received}\n     * on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n     *\n     * The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n     * Otherwise, the recipient must implement {IERC721Receiver-onERC721Received} and return the acceptance magic value to accept\n     * the transfer.\n     */\n    function checkOnERC721Received(\n        address operator,\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) internal {\n        if (to.code.length > 0) {\n            try IERC721Receiver(to).onERC721Received(operator, from, tokenId, data) returns (bytes4 retval) {\n                if (retval != IERC721Receiver.onERC721Received.selector) {\n                    // Token rejected\n                    revert IERC721Errors.ERC721InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-IERC721Receiver implementer\n                    revert IERC721Errors.ERC721InvalidReceiver(to);\n                } else {\n                    assembly (\"memory-safe\") {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Base64.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Base64.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides a set of functions to operate with Base64 strings.\n */\nlibrary Base64 {\n    /**\n     * @dev Base64 Encoding/Decoding Table\n     * See sections 4 and 5 of https://datatracker.ietf.org/doc/html/rfc4648\n     */\n    string internal constant _TABLE = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n    string internal constant _TABLE_URL = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_\";\n\n    /**\n     * @dev Converts a `bytes` to its Bytes64 `string` representation.\n     */\n    function encode(bytes memory data) internal pure returns (string memory) {\n        return _encode(data, _TABLE, true);\n    }\n\n    /**\n     * @dev Converts a `bytes` to its Bytes64Url `string` representation.\n     * Output is not padded with `=` as specified in https://www.rfc-editor.org/rfc/rfc4648[rfc4648].\n     */\n    function encodeURL(bytes memory data) internal pure returns (string memory) {\n        return _encode(data, _TABLE_URL, false);\n    }\n\n    /**\n     * @dev Internal table-agnostic conversion\n     */\n    function _encode(bytes memory data, string memory table, bool withPadding) private pure returns (string memory) {\n        /**\n         * Inspired by Brecht Devos (Brechtpd) implementation - MIT licence\n         * https://github.com/Brechtpd/base64/blob/e78d9fd951e7b0977ddca77d92dc85183770daf4/base64.sol\n         */\n        if (data.length == 0) return \"\";\n\n        // If padding is enabled, the final length should be `bytes` data length divided by 3 rounded up and then\n        // multiplied by 4 so that it leaves room for padding the last chunk\n        // - `data.length + 2`  -> Prepare for division rounding up\n        // - `/ 3`              -> Number of 3-bytes chunks (rounded up)\n        // - `4 *`              -> 4 characters for each chunk\n        // This is equivalent to: 4 * Math.ceil(data.length / 3)\n        //\n        // If padding is disabled, the final length should be `bytes` data length multiplied by 4/3 rounded up as\n        // opposed to when padding is required to fill the last chunk.\n        // - `4 * data.length`  -> 4 characters for each chunk\n        // - ` + 2`             -> Prepare for division rounding up\n        // - `/ 3`              -> Number of 3-bytes chunks (rounded up)\n        // This is equivalent to: Math.ceil((4 * data.length) / 3)\n        uint256 resultLength = withPadding ? 4 * ((data.length + 2) / 3) : (4 * data.length + 2) / 3;\n\n        string memory result = new string(resultLength);\n\n        assembly (\"memory-safe\") {\n            // Prepare the lookup table (skip the first \"length\" byte)\n            let tablePtr := add(table, 1)\n\n            // Prepare result pointer, jump over length\n            let resultPtr := add(result, 0x20)\n            let dataPtr := data\n            let endPtr := add(data, mload(data))\n\n            // In some cases, the last iteration will read bytes after the end of the data. We cache the value, and\n            // set it to zero to make sure no dirty bytes are read in that section.\n            let afterPtr := add(endPtr, 0x20)\n            let afterCache := mload(afterPtr)\n            mstore(afterPtr, 0x00)\n\n            // Run over the input, 3 bytes at a time\n            for {\n\n            } lt(dataPtr, endPtr) {\n\n            } {\n                // Advance 3 bytes\n                dataPtr := add(dataPtr, 3)\n                let input := mload(dataPtr)\n\n                // To write each character, shift the 3 byte (24 bits) chunk\n                // 4 times in blocks of 6 bits for each character (18, 12, 6, 0)\n                // and apply logical AND with 0x3F to bitmask the least significant 6 bits.\n                // Use this as an index into the lookup table, mload an entire word\n                // so the desired character is in the least significant byte, and\n                // mstore8 this least significant byte into the result and continue.\n\n                mstore8(resultPtr, mload(add(tablePtr, and(shr(18, input), 0x3F))))\n                resultPtr := add(resultPtr, 1) // Advance\n\n                mstore8(resultPtr, mload(add(tablePtr, and(shr(12, input), 0x3F))))\n                resultPtr := add(resultPtr, 1) // Advance\n\n                mstore8(resultPtr, mload(add(tablePtr, and(shr(6, input), 0x3F))))\n                resultPtr := add(resultPtr, 1) // Advance\n\n                mstore8(resultPtr, mload(add(tablePtr, and(input, 0x3F))))\n                resultPtr := add(resultPtr, 1) // Advance\n            }\n\n            // Reset the value that was cached\n            mstore(afterPtr, afterCache)\n\n            if withPadding {\n                // When data `bytes` is not exactly 3 bytes long\n                // it is padded with `=` characters at the end\n                switch mod(mload(data), 3)\n                case 1 {\n                    mstore8(sub(resultPtr, 1), 0x3d)\n                    mstore8(sub(resultPtr, 2), 0x3d)\n                }\n                case 2 {\n                    mstore8(sub(resultPtr, 1), 0x3d)\n                }\n            }\n        }\n\n        return result;\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Return the 512-bit addition of two uint256.\n     *\n     * The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low.\n     */\n    function add512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        assembly (\"memory-safe\") {\n            low := add(a, b)\n            high := lt(low, a)\n        }\n    }\n\n    /**\n     * @dev Return the 512-bit multiplication of two uint256.\n     *\n     * The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low.\n     */\n    function mul512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        // 512-bit multiply [high low] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n        // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n        // variables such that product = high * 2²⁵⁶ + low.\n        assembly (\"memory-safe\") {\n            let mm := mulmod(a, b, not(0))\n            low := mul(a, b)\n            high := sub(sub(mm, low), lt(mm, low))\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            success = c >= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a - b;\n            success = c <= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a * b;\n            assembly (\"memory-safe\") {\n                // Only true when the multiplication doesn't overflow\n                // (c / a == b) || (a == 0)\n                success := or(eq(div(c, a), b), iszero(a))\n            }\n            // equivalent to: success ? c : 0\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `DIV` opcode returns zero when the denominator is 0.\n                result := div(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `MOD` opcode returns zero when the denominator is 0.\n                result := mod(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingAdd(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryAdd(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Unsigned saturating subtraction, bounds to zero instead of overflowing.\n     */\n    function saturatingSub(uint256 a, uint256 b) internal pure returns (uint256) {\n        (, uint256 result) = trySub(a, b);\n        return result;\n    }\n\n    /**\n     * @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingMul(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryMul(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (high == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return low / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= high) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [high low].\n            uint256 remainder;\n            assembly (\"memory-safe\") {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                high := sub(high, gt(remainder, low))\n                low := sub(low, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly (\"memory-safe\") {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [high low] by twos.\n                low := div(low, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from high into low.\n            low |= high * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and high\n            // is no longer required.\n            result = low * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n            if (high >= 1 << n) {\n                Panic.panic(Panic.UNDER_OVERFLOW);\n            }\n            return (high << (256 - n)) | (low >> n);\n        }\n    }\n\n    /**\n     * @dev Calculates x * y >> n with full precision, following the selected rounding direction.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n, Rounding rounding) internal pure returns (uint256) {\n        return mulShr(x, y, n) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, 1 << n) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n     *\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n     *\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\n     */\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\n        unchecked {\n            return Math.modExp(a, p - 2, p);\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        assembly (\"memory-safe\") {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // If upper 8 bits of 16-bit half set, add 8 to result\n        r |= SafeCast.toUint((x >> r) > 0xff) << 3;\n        // If upper 4 bits of 8-bit half set, add 4 to result\n        r |= SafeCast.toUint((x >> r) > 0xf) << 2;\n\n        // Shifts value right by the current result and use it as an index into this lookup table:\n        //\n        // | x (4 bits) |  index  | table[index] = MSB position |\n        // |------------|---------|-----------------------------|\n        // |    0000    |    0    |        table[0] = 0         |\n        // |    0001    |    1    |        table[1] = 0         |\n        // |    0010    |    2    |        table[2] = 1         |\n        // |    0011    |    3    |        table[3] = 1         |\n        // |    0100    |    4    |        table[4] = 2         |\n        // |    0101    |    5    |        table[5] = 2         |\n        // |    0110    |    6    |        table[6] = 2         |\n        // |    0111    |    7    |        table[7] = 2         |\n        // |    1000    |    8    |        table[8] = 3         |\n        // |    1001    |    9    |        table[9] = 3         |\n        // |    1010    |   10    |        table[10] = 3        |\n        // |    1011    |   11    |        table[11] = 3        |\n        // |    1100    |   12    |        table[12] = 3        |\n        // |    1101    |   13    |        table[13] = 3        |\n        // |    1110    |   14    |        table[14] = 3        |\n        // |    1111    |   15    |        table[15] = 3        |\n        //\n        // The lookup table is represented as a 32-byte value with the MSB positions for 0-15 in the last 16 bytes.\n        assembly (\"memory-safe\") {\n            r := or(r, byte(shr(r, x), 0x0000010102020202030303030303030300000000000000000000000000000000))\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // Add 1 if upper 8 bits of 16-bit half set, and divide accumulated result by 8\n        return (r >> 3) | SafeCast.toUint((x >> r) > 0xff);\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, int256 a, int256 b) internal pure returns (int256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * int256(SafeCast.toUint(condition)));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // Formula from the \"Bit Twiddling Hacks\" by Sean Eron Anderson.\n            // Since `n` is a signed integer, the generated bytecode will use the SAR opcode to perform the right shift,\n            // taking advantage of the most significant (or \"sign\" bit) in two's complement representation.\n            // This opcode adds new most significant bits set to the value of the previous most significant bit. As a result,\n            // the mask will either be `bytes32(0)` (if n is positive) or `~bytes32(0)` (if n is negative).\n            int256 mask = n >> 255;\n\n            // A `bytes32(0)` mask leaves the input unchanged, while a `~bytes32(0)` mask complements it.\n            return uint256((n + mask) ^ mask);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Panic.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n *\n * _Available since v5.1._\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n * consider using {ReentrancyGuardTransient} instead.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    uint256 private _status;\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    constructor() {\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if (_status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        _status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == ENTERED;\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SafeCast} from \"./math/SafeCast.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    using SafeCast for *;\n\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n    uint256 private constant SPECIAL_CHARS_LOOKUP =\n        (1 << 0x08) | // backspace\n            (1 << 0x09) | // tab\n            (1 << 0x0a) | // newline\n            (1 << 0x0c) | // form feed\n            (1 << 0x0d) | // carriage return\n            (1 << 0x22) | // double quote\n            (1 << 0x5c); // backslash\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev The string being parsed contains characters that are not in scope of the given base.\n     */\n    error StringsInvalidChar();\n\n    /**\n     * @dev The string being parsed is not a properly formatted address.\n     */\n    error StringsInvalidAddressFormat();\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            assembly (\"memory-safe\") {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                assembly (\"memory-safe\") {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n     * representation, according to EIP-55.\n     */\n    function toChecksumHexString(address addr) internal pure returns (string memory) {\n        bytes memory buffer = bytes(toHexString(addr));\n\n        // hash the hex part of buffer (skip length + 2 bytes, length 40)\n        uint256 hashValue;\n        assembly (\"memory-safe\") {\n            hashValue := shr(96, keccak256(add(buffer, 0x22), 40))\n        }\n\n        for (uint256 i = 41; i > 1; --i) {\n            // possible values for buffer[i] are 48 (0) to 57 (9) and 97 (a) to 102 (f)\n            if (hashValue & 0xf > 7 && uint8(buffer[i]) > 96) {\n                // case shift by xoring with 0x20\n                buffer[i] ^= 0x20;\n            }\n            hashValue >>= 4;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input) internal pure returns (uint256) {\n        return parseUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        uint256 result = 0;\n        for (uint256 i = begin; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 9) return (false, 0);\n            result *= 10;\n            result += chr;\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `int256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input) internal pure returns (int256) {\n        return parseInt(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input, uint256 begin, uint256 end) internal pure returns (int256) {\n        (bool success, int256 value) = tryParseInt(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n     * the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(string memory input) internal pure returns (bool success, int256 value) {\n        return _tryParseIntUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    uint256 private constant ABS_MIN_INT256 = 2 ** 255;\n\n    /**\n     * @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character or if the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, int256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseIntUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseInt-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseIntUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, int256 value) {\n        bytes memory buffer = bytes(input);\n\n        // Check presence of a negative sign.\n        bytes1 sign = begin == end ? bytes1(0) : bytes1(_unsafeReadBytesOffset(buffer, begin)); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        bool positiveSign = sign == bytes1(\"+\");\n        bool negativeSign = sign == bytes1(\"-\");\n        uint256 offset = (positiveSign || negativeSign).toUint();\n\n        (bool absSuccess, uint256 absValue) = tryParseUint(input, begin + offset, end);\n\n        if (absSuccess && absValue < ABS_MIN_INT256) {\n            return (true, negativeSign ? -int256(absValue) : int256(absValue));\n        } else if (absSuccess && negativeSign && absValue == ABS_MIN_INT256) {\n            return (true, type(int256).min);\n        } else return (false, 0);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input) internal pure returns (uint256) {\n        return parseHexUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseHexUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseHexUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n     * invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseHexUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseHexUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseHexUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        // skip 0x prefix if present\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(buffer, begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 offset = hasPrefix.toUint() * 2;\n\n        uint256 result = 0;\n        for (uint256 i = begin + offset; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 15) return (false, 0);\n            result *= 16;\n            unchecked {\n                // Multiplying by 16 is equivalent to a shift of 4 bits (with additional overflow check).\n                // This guarantees that adding a value < 16 will not cause an overflow, hence the unchecked.\n                result += chr;\n            }\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input) internal pure returns (address) {\n        return parseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input, uint256 begin, uint256 end) internal pure returns (address) {\n        (bool success, address value) = tryParseAddress(input, begin, end);\n        if (!success) revert StringsInvalidAddressFormat();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n     * formatted address. See {parseAddress-string} requirements.\n     */\n    function tryParseAddress(string memory input) internal pure returns (bool success, address value) {\n        return tryParseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n     * formatted address. See {parseAddress-string-uint256-uint256} requirements.\n     */\n    function tryParseAddress(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, address value) {\n        if (end > bytes(input).length || begin > end) return (false, address(0));\n\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(bytes(input), begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 expectedLength = 40 + hasPrefix.toUint() * 2;\n\n        // check that input is the correct length\n        if (end - begin == expectedLength) {\n            // length guarantees that this does not overflow, and value is at most type(uint160).max\n            (bool s, uint256 v) = _tryParseHexUintUncheckedBounds(input, begin, end);\n            return (s, address(uint160(v)));\n        } else {\n            return (false, address(0));\n        }\n    }\n\n    function _tryParseChr(bytes1 chr) private pure returns (uint8) {\n        uint8 value = uint8(chr);\n\n        // Try to parse `chr`:\n        // - Case 1: [0-9]\n        // - Case 2: [a-f]\n        // - Case 3: [A-F]\n        // - otherwise not supported\n        unchecked {\n            if (value > 47 && value < 58) value -= 48;\n            else if (value > 96 && value < 103) value -= 87;\n            else if (value > 64 && value < 71) value -= 55;\n            else return type(uint8).max;\n        }\n\n        return value;\n    }\n\n    /**\n     * @dev Escape special characters in JSON strings. This can be useful to prevent JSON injection in NFT metadata.\n     *\n     * WARNING: This function should only be used in double quoted JSON strings. Single quotes are not escaped.\n     *\n     * NOTE: This function escapes all unicode characters, and not just the ones in ranges defined in section 2.5 of\n     * RFC-4627 (U+0000 to U+001F, U+0022 and U+005C). ECMAScript's `JSON.parse` does recover escaped unicode\n     * characters that are not in this range, but other tooling may provide different results.\n     */\n    function escapeJSON(string memory input) internal pure returns (string memory) {\n        bytes memory buffer = bytes(input);\n        bytes memory output = new bytes(2 * buffer.length); // worst case scenario\n        uint256 outputLength = 0;\n\n        for (uint256 i; i < buffer.length; ++i) {\n            bytes1 char = bytes1(_unsafeReadBytesOffset(buffer, i));\n            if (((SPECIAL_CHARS_LOOKUP & (1 << uint8(char))) != 0)) {\n                output[outputLength++] = \"\\\\\";\n                if (char == 0x08) output[outputLength++] = \"b\";\n                else if (char == 0x09) output[outputLength++] = \"t\";\n                else if (char == 0x0a) output[outputLength++] = \"n\";\n                else if (char == 0x0c) output[outputLength++] = \"f\";\n                else if (char == 0x0d) output[outputLength++] = \"r\";\n                else if (char == 0x5c) output[outputLength++] = \"\\\\\";\n                else if (char == 0x22) {\n                    // solhint-disable-next-line quotes\n                    output[outputLength++] = '\"';\n                }\n            } else {\n                output[outputLength++] = char;\n            }\n        }\n        // write the actual length and deallocate unused memory\n        assembly (\"memory-safe\") {\n            mstore(output, outputLength)\n            mstore(0x40, add(output, shl(5, shr(5, add(outputLength, 63)))))\n        }\n\n        return string(output);\n    }\n\n    /**\n     * @dev Reads a bytes32 from a bytes array without bounds checking.\n     *\n     * NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n     * assembly block as such would prevent some optimizations.\n     */\n    function _unsafeReadBytesOffset(bytes memory buffer, uint256 offset) private pure returns (bytes32 value) {\n        // This is not memory safe in the general case, but all calls to this private function are within bounds.\n        assembly (\"memory-safe\") {\n            value := mload(add(buffer, add(0x20, offset)))\n        }\n    }\n}\n"},"contracts/MetadataEncoding.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\ncontract MetadataEncoding {\r\n    uint256 private constant MAX_WEARABLE_ID = 1000;\r\n    uint256 private constant MAX_WEARABLES = 10;\r\n    uint256 private constant BITS_PER_WEARABLE = 10; // 2^10 = 1024 > 1000\r\n    \r\n    // For 2 decimal places (0.00 to 1.00), we need 7 bits (2^7 = 128 > 101 values)\r\n    uint256 private constant DECIMAL_PRECISION = 100; // For 2 decimal places\r\n    uint256 private constant BITS_PER_DECIMAL = 7;\r\n    \r\n    // Positions in the uint256\r\n    uint256 private constant POSITION_WEARABLES = 0;\r\n    uint256 private constant POSITION_TALKATIVE = BITS_PER_WEARABLE * MAX_WEARABLES;\r\n    uint256 private constant POSITION_SPEED = POSITION_TALKATIVE + 1;\r\n    uint256 private constant POSITION_LAZINESS = POSITION_SPEED + BITS_PER_DECIMAL;\r\n    \r\n    // Masks for extracting values\r\n    uint256 private constant MASK_WEARABLE = (1 << BITS_PER_WEARABLE) - 1;\r\n    uint256 private constant MASK_TALKATIVE = 1;\r\n    uint256 private constant MASK_DECIMAL = (1 << BITS_PER_DECIMAL) - 1;\r\n    \r\n    function encodeMetadata(\r\n        uint256[] memory wearableIds,\r\n        bool isTalkative,\r\n        uint256 speed,\r\n        uint256 laziness\r\n    ) internal pure returns (uint256) {\r\n        require(wearableIds.length <= MAX_WEARABLES, \"Too many wearables\");\r\n        \r\n        // Validate all wearable IDs are within range\r\n        for (uint256 i = 0; i < wearableIds.length; i++) {\r\n            require(wearableIds[i] <= MAX_WEARABLE_ID, \"Wearable ID out of range\");\r\n        }\r\n        \r\n        // Validate speed and laziness are within range (0 to 1 with 2 decimal precision)\r\n        require(speed <= 100, \"Speed out of range\"); // 100 = 1.00\r\n        require(laziness <= 100, \"Laziness out of range\"); // 100 = 1.00\r\n        \r\n        uint256 metadata = 0;\r\n        \r\n        // Encode wearable IDs\r\n        for (uint256 i = 0; i < wearableIds.length; i++) {\r\n            metadata |= wearableIds[i] << (POSITION_WEARABLES + i * BITS_PER_WEARABLE);\r\n        }\r\n        \r\n        // Encode isTalkative\r\n        if (isTalkative) {\r\n            metadata |= uint256(1) << POSITION_TALKATIVE;\r\n        }\r\n        \r\n        // Encode speed (0 to 100 representing 0.00 to 1.00)\r\n        metadata |= speed << POSITION_SPEED;\r\n        \r\n        // Encode laziness (0 to 100 representing 0.00 to 1.00)\r\n        metadata |= laziness << POSITION_LAZINESS;\r\n        \r\n        return metadata;\r\n    }\r\n    \r\n    function decodeMetadata(uint256 metadata) internal pure returns (\r\n        uint256[] memory wearableIds,\r\n        bool isTalkative,\r\n        uint256 speed,\r\n        uint256 laziness\r\n    ) {\r\n        wearableIds = new uint256[](MAX_WEARABLES);\r\n        \r\n        // Decode wearable IDs\r\n        for (uint256 i = 0; i < MAX_WEARABLES; i++) {\r\n            wearableIds[i] = (metadata >> (POSITION_WEARABLES + i * BITS_PER_WEARABLE)) & MASK_WEARABLE;\r\n        }\r\n        \r\n        // Decode isTalkative\r\n        isTalkative = ((metadata >> POSITION_TALKATIVE) & MASK_TALKATIVE) == 1;\r\n        \r\n        // Decode speed (0-100 representing 0.00-1.00)\r\n        speed = (metadata >> POSITION_SPEED) & MASK_DECIMAL;\r\n        \r\n        // Decode laziness (0-100 representing 0.00-1.00)\r\n        laziness = (metadata >> POSITION_LAZINESS) & MASK_DECIMAL;\r\n    }\r\n    \r\n    // Helper functions to convert between decimal representation and human-readable format\r\n    function toDecimalValue(uint256 value) internal pure returns (string memory) {\r\n        // Convert a value like 42 to \"0.42\"\r\n        uint256 integerPart = value / DECIMAL_PRECISION;\r\n        uint256 fractionalPart = value % DECIMAL_PRECISION;\r\n        \r\n        // Format with leading zeros for fractional part\r\n        string memory fractionalStr;\r\n        if (fractionalPart < 10) {\r\n            fractionalStr = string(abi.encodePacked(\"0\", uint2str(fractionalPart)));\r\n        } else {\r\n            fractionalStr = uint2str(fractionalPart);\r\n        }\r\n        \r\n        return string(abi.encodePacked(uint2str(integerPart), \".\", fractionalStr));\r\n    }\r\n    \r\n    // Helper function to convert uint to string\r\n    function uint2str(uint256 _i) internal pure returns (string memory) {\r\n        if (_i == 0) {\r\n            return \"0\";\r\n        }\r\n        \r\n        uint256 j = _i;\r\n        uint256 len;\r\n        \r\n        while (j != 0) {\r\n            len++;\r\n            j /= 10;\r\n        }\r\n        \r\n        bytes memory bstr = new bytes(len);\r\n        uint256 k = len;\r\n        \r\n        while (_i != 0) {\r\n            k = k-1;\r\n            uint8 temp = (48 + uint8(_i % 10));\r\n            bytes1 b1 = bytes1(temp);\r\n            bstr[k] = b1;\r\n            _i /= 10;\r\n        }\r\n        \r\n        return string(bstr);\r\n    }\r\n    \r\n    // Helper functions for individual field access\r\n    function _hasWearable(uint256 metadata, uint256 wearableId) internal pure returns (bool) {\r\n        require(wearableId <= MAX_WEARABLE_ID, \"Wearable ID out of range\");\r\n        \r\n        for (uint256 i = 0; i < MAX_WEARABLES; i++) {\r\n            uint256 id = (metadata >> (POSITION_WEARABLES + i * BITS_PER_WEARABLE)) & MASK_WEARABLE;\r\n            if (id == wearableId) {\r\n                return true;\r\n            }\r\n        }\r\n        \r\n        return false;\r\n    }\r\n    \r\n    function getWearableAt(uint256 metadata, uint256 index) public pure returns (uint256) {\r\n        require(index < MAX_WEARABLES, \"Index out of range\");\r\n        \r\n        return (metadata >> (POSITION_WEARABLES + index * BITS_PER_WEARABLE)) & MASK_WEARABLE;\r\n    }\r\n    \r\n    function _getIsTalkative(uint256 metadata) internal pure returns (bool) {\r\n        return ((metadata >> POSITION_TALKATIVE) & MASK_TALKATIVE) == 1;\r\n    }\r\n    \r\n    function _getSpeed(uint256 metadata) public pure returns (uint256) {\r\n        return (metadata >> POSITION_SPEED) & MASK_DECIMAL;\r\n    }\r\n    \r\n\r\n    function _getLaziness(uint256 metadata) public pure returns (uint256) {\r\n        return (metadata >> POSITION_LAZINESS) & MASK_DECIMAL;\r\n    }\r\n    \r\n\r\n}"},"contracts/SkyBuds.sol":{"content":"// contracts/SkyBuds.sol\r\n// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\nimport {ERC721} from \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\r\nimport {Ownable} from \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport {Base64} from \"@openzeppelin/contracts/utils/Base64.sol\";\r\nimport {Strings} from \"@openzeppelin/contracts/utils/Strings.sol\";\r\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\r\nimport \"./SkybudsMetadata.sol\";\r\n\r\ncontract SkyBuds is ReentrancyGuard,ERC721, Ownable {\r\n    uint256 private _nextTokenId = 1;\r\n\r\n    SkyBudsMetadata public contractSkybudsMetadata;\r\n\r\n    uint256 public constant MAX_TOKENS = 2000;\r\n\r\n\r\n    constructor(address _addressContractMetadata) Ownable(msg.sender) ReentrancyGuard() ERC721(\"SkyBuds\", \"SKB\") {\r\n        setMetadataContractAddress(_addressContractMetadata);\r\n\r\n    }\r\n\r\n    function setMetadataContractAddress(address _addressContractMetadata) public onlyOwner {\r\n\t\tcontractSkybudsMetadata = SkyBudsMetadata(_addressContractMetadata);\r\n\t}\r\n\r\n    function tokenURI(\r\n        uint256 tokenId\r\n    ) public view override returns (string memory) {\r\n\r\n        require(tokenId <=_nextTokenId-1, \"URI query for nonexistent token\");\r\n\r\n        return contractSkybudsMetadata.generateTokenURI(tokenId);\r\n    }\r\n\r\n\r\n    function totalSupply() public view returns (uint256) {\r\n        return _nextTokenId - 1;\r\n    }\r\n\r\n        // Allows minting of a new NFT \r\n    function mint( uint256[] calldata wearables, uint256  laziness, uint256  speed,  uint256  isTalkative, string calldata base64uri) public returns (uint256) {\r\n        uint256 tokenId = _nextTokenId++;\r\n        require(tokenId <= MAX_TOKENS, \"Max tokens minted\");\r\n        \r\n        require(bytes(base64uri).length > 0, \"Base64 URI cannot be empty\");\r\n\r\n        \r\n        contractSkybudsMetadata.setMetadata(\r\n            tokenId,\r\n            wearables,\r\n            isTalkative==1,\r\n            speed,\r\n            laziness,\r\n            base64uri\r\n        );\r\n\r\n        _safeMint(msg.sender, tokenId);\r\n\r\n\r\n        return tokenId;\r\n    }\r\n\r\n    function updateWearables(uint256 tokenId, uint256[] calldata wearableIds) public {\r\n        require(tokenId <= _nextTokenId-1, \"Wearable update for nonexistent token\");\r\n        require(ownerOf(tokenId) == msg.sender, \"Only the owner can update wearables\");\r\n\r\n        contractSkybudsMetadata.updateWearables(tokenId, wearableIds);\r\n    }\r\n\r\n    function updateBase64Uri(uint256 tokenId, string memory base64Uri) public onlyOwner() {\r\n        require(tokenId <= _nextTokenId-1, \"Wearable update for nonexistent token\");\r\n        require(ownerOf(tokenId) == msg.sender, \"Only the owner can update wearables\");\r\n        require(bytes(base64Uri).length > 0, \"Base64 URI cannot be empty\");\r\n\r\n        contractSkybudsMetadata.updateBase64Uri(tokenId, base64Uri);\r\n    }\r\n\r\n    function updateMetadata(\r\n        uint256 tokenId,\r\n        uint256[] calldata wearables,\r\n        uint256 laziness,\r\n        uint256 speed,\r\n        uint256 isTalkative,\r\n        string calldata base64uri\r\n    ) public {\r\n        require(tokenId <= _nextTokenId-1, \"Metadata update for nonexistent token\");\r\n        require(ownerOf(tokenId) == msg.sender, \"Only the owner can update metadata\");\r\n\r\n        contractSkybudsMetadata.setMetadata(\r\n            tokenId,\r\n            wearables,\r\n            isTalkative==1,\r\n            speed,\r\n            laziness,\r\n            base64uri\r\n        );\r\n    }   \r\n}"},"contracts/SkybudsMetadata.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"./MetadataEncoding.sol\"; // Make sure the path is correct\r\n\r\ncontract SkyBudsMetadata is MetadataEncoding,Ownable {\r\n    // Struct to hold both encoded metadata and URI\r\n    struct SkyBudData {\r\n        uint256 encodedMetadata;\r\n        string base64Uri;\r\n        bool exists;\r\n    }\r\n    \r\n    // Mapping from tokenId to SkyBudData\r\n    mapping(uint256 => SkyBudData) private _tokenMetadata;\r\n    \r\n    // Event emitted when metadata is updated\r\n    event MetadataUpdated(uint256 indexed tokenId, uint256 encodedMetadata, string base64Uri);\r\n\r\n    constructor(address skyBudContract) Ownable(skyBudContract) {\r\n\r\n    }\r\n\r\n\r\n    // Check if token exists\r\n    modifier tokenExists(uint256 tokenId) {\r\n        require(_tokenMetadata[tokenId].exists, \"SkyBudMetadata: Token does not exist\");\r\n        _;\r\n    }\r\n    \r\n    // Set metadata for a token\r\n    function setMetadata(\r\n        uint256 tokenId,\r\n        uint256[] memory wearableIds,\r\n        bool isTalkative,\r\n        uint256 speed,\r\n        uint256 laziness,\r\n        string memory base64Uri\r\n    ) public onlyOwner() {\r\n        // Encode the metadata using the inherited function\r\n        uint256 encodedMetadata = encodeMetadata(wearableIds, isTalkative, speed, laziness);\r\n        \r\n        // Store the metadata and URI\r\n        _tokenMetadata[tokenId] = SkyBudData({\r\n            encodedMetadata: encodedMetadata,\r\n            base64Uri: base64Uri,\r\n            exists: true\r\n        });\r\n        \r\n        emit MetadataUpdated(tokenId, encodedMetadata, base64Uri);\r\n    }\r\n    \r\n    \r\n    // Generate JSON metadata for a token\r\n    function generateTokenURI(uint256 tokenId) public view tokenExists(tokenId) returns (string memory) {\r\n        SkyBudData storage data = _tokenMetadata[tokenId];\r\n        \r\n        // Decode metadata\r\n        bool isTalkative_ = isTalkative(data.encodedMetadata);\r\n        uint256 speedValue = getSpeed(tokenId);\r\n        uint256 lazinessValue = getLaziness(tokenId);\r\n        \r\n        // Convert tokenId to string\r\n        string memory tokenIdString = uint2str(tokenId);\r\n        \r\n        // Build the JSON string using abi.encodePacked\r\n        return string(\r\n            abi.encodePacked(\r\n                'data:application/json;utf8,{\"name\":\"Skybud #', tokenIdString, '\",',\r\n                '\"description\":\"my little dude\",',\r\n                '\"tokenId\":\"', tokenIdString, '\",',\r\n                '\"image\":\"data:image/svg+xml;base64,', data.base64Uri, '\",',\r\n                '\"external_url\":\"https://skybuds.benjylarcher.com/\",',\r\n                '\"attributes\":[',\r\n                    '{\"trait_type\":\"is_talkative\",\"value\":', isTalkative_ ? 'true' : 'false', '},',\r\n                    '{\"trait_type\":\"speed\",\"value\":', speedValue, '},',\r\n                    '{\"trait_type\":\"laziness\",\"value\":', lazinessValue, '}',\r\n                ']}'\r\n            )\r\n        );\r\n\r\n    }\r\n\r\n    // Set metadata directly with encoded data\r\n    function setEncodedMetadata(\r\n        uint256 tokenId,\r\n        uint256 encodedMetadata,\r\n        string memory base64Uri\r\n    ) private onlyOwner() {\r\n        // Store the metadata and URI\r\n        _tokenMetadata[tokenId] = SkyBudData({\r\n            encodedMetadata: encodedMetadata,\r\n            base64Uri: base64Uri,\r\n            exists: true\r\n        });\r\n        \r\n        emit MetadataUpdated(tokenId, encodedMetadata, base64Uri);\r\n    }\r\n    \r\n    // Get the full metadata for a token\r\n    function getMetadata(uint256 tokenId) public view tokenExists(tokenId) returns (\r\n        uint256 encodedMetadata,\r\n        string memory base64Uri,\r\n        uint256[] memory wearableIds,\r\n        bool isTalkative,\r\n        uint256 speed,\r\n        uint256 laziness\r\n    ) {\r\n        SkyBudData storage data = _tokenMetadata[tokenId];\r\n        encodedMetadata = data.encodedMetadata;\r\n        base64Uri = data.base64Uri;\r\n        \r\n        // Decode the metadata using the inherited function\r\n        (wearableIds, isTalkative, speed, laziness) = decodeMetadata(encodedMetadata);\r\n    }\r\n    \r\n    // Get just the encoded metadata\r\n    function getEncodedMetadata(uint256 tokenId) public view tokenExists(tokenId) returns (uint256) {\r\n        return _tokenMetadata[tokenId].encodedMetadata;\r\n    }\r\n    \r\n    // Get just the base64 URI\r\n    function getBase64Uri(uint256 tokenId) public view tokenExists(tokenId) returns (string memory) {\r\n        return _tokenMetadata[tokenId].base64Uri;\r\n    }\r\n    \r\n    // Check if a token has a specific wearable\r\n    function hasWearable(uint256 tokenId, uint256 wearableId) public view tokenExists(tokenId) returns (bool) {\r\n        return hasWearable(_tokenMetadata[tokenId].encodedMetadata, wearableId);\r\n    }\r\n    \r\n    // Get the isTalkative property for a token\r\n    function isTalkative(uint256 tokenId) public view tokenExists(tokenId) returns (bool) {\r\n        return _getIsTalkative(_tokenMetadata[tokenId].encodedMetadata);\r\n    }\r\n    \r\n    // Get the speed property for a token\r\n    function getSpeed(uint256 tokenId) public view tokenExists(tokenId) returns (uint256) {\r\n        return _getSpeed(_tokenMetadata[tokenId].encodedMetadata);\r\n    }\r\n    \r\n    // Get the speed property formatted as a string (e.g., \"0.42\")\r\n    function getSpeedFormatted(uint256 tokenId) public view tokenExists(tokenId) returns (string memory) {\r\n        return getSpeedFormatted(_tokenMetadata[tokenId].encodedMetadata);\r\n    }\r\n    \r\n    // Get the laziness property for a token\r\n    function getLaziness(uint256 tokenId) public view tokenExists(tokenId) returns (uint256) {\r\n        return _getLaziness(_tokenMetadata[tokenId].encodedMetadata);\r\n    }\r\n    \r\n    // Get the laziness property formatted as a string (e.g., \"0.75\")\r\n    function getLazinessFormatted(uint256 tokenId) public view tokenExists(tokenId) returns (string memory) {\r\n        return getLazinessFormatted(_tokenMetadata[tokenId].encodedMetadata);\r\n    }\r\n    \r\n    // Update the wearables for a token\r\n    function updateWearables(uint256 tokenId, uint256[] memory wearableIds) public tokenExists(tokenId) {\r\n        SkyBudData storage data = _tokenMetadata[tokenId];\r\n        \r\n        // Decode current metadata\r\n        (, bool isTalkative_, uint256 speed, uint256 laziness) = decodeMetadata(data.encodedMetadata);\r\n        \r\n        // Re-encode with new wearables\r\n        uint256 newEncodedMetadata = encodeMetadata(wearableIds, isTalkative_, speed, laziness);\r\n        \r\n        // Update storage\r\n        data.encodedMetadata = newEncodedMetadata;\r\n        \r\n        emit MetadataUpdated(tokenId, newEncodedMetadata, data.base64Uri);\r\n    }\r\n\r\n\r\n    // Update the base64 URI for a token\r\n    function updateBase64Uri(uint256 tokenId, string memory base64Uri) public tokenExists(tokenId) {\r\n        SkyBudData storage data = _tokenMetadata[tokenId];\r\n        data.base64Uri = base64Uri;\r\n        \r\n        emit MetadataUpdated(tokenId, data.encodedMetadata, base64Uri);\r\n    }\r\n    \r\n    // Check if a token exists\r\n    function tokenDataExists(uint256 tokenId) public view returns (bool) {\r\n        return _tokenMetadata[tokenId].exists;\r\n    }\r\n    \r\n    // Delete a token's metadata\r\n    function deleteTokenMetadata(uint256 tokenId) public tokenExists(tokenId) {\r\n        delete _tokenMetadata[tokenId];\r\n    }\r\n}"}},"settings":{"optimizer":{"enabled":true,"runs":100},"viaIR":true,"evmVersion":"paris","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"errors":[{"component":"general","errorCode":"2519","formattedMessage":"Warning: This declaration shadows an existing declaration.\n  --> contracts/SkybudsMetadata.sol:35:9:\n   |\n35 |         bool isTalkative,\n   |         ^^^^^^^^^^^^^^^^\nNote: The shadowed declaration is here:\n   --> contracts/SkybudsMetadata.sol:133:5:\n    |\n133 |     function isTalkative(uint256 tokenId) public view tokenExists(tokenId) returns (bool) {\n    |     ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"This declaration shadows an existing declaration.","secondarySourceLocations":[{"end":5031,"file":"contracts/SkybudsMetadata.sol","message":"The shadowed declaration is here:","start":4863}],"severity":"warning","sourceLocation":{"end":1084,"file":"contracts/SkybudsMetadata.sol","start":1068},"type":"Warning"},{"component":"general","errorCode":"2519","formattedMessage":"Warning: This declaration shadows an existing declaration.\n   --> contracts/SkybudsMetadata.sol:105:9:\n    |\n105 |         bool isTalkative,\n    |         ^^^^^^^^^^^^^^^^\nNote: The shadowed declaration is here:\n   --> contracts/SkybudsMetadata.sol:133:5:\n    |\n133 |     function isTalkative(uint256 tokenId) public view tokenExists(tokenId) returns (bool) {\n    |     ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"This declaration shadows an existing declaration.","secondarySourceLocations":[{"end":5031,"file":"contracts/SkybudsMetadata.sol","message":"The shadowed declaration is here:","start":4863}],"severity":"warning","sourceLocation":{"end":3763,"file":"contracts/SkybudsMetadata.sol","start":3747},"type":"Warning"}],"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[1606],"Ownable":[147]},"id":148,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":148,"sourceUnit":1607,"src":"128:45:0","symbolAliases":[{"foreign":{"id":2,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1606,"src":"136:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":5,"name":"Context","nameLocations":["692:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":1606,"src":"692:7:0"},"id":6,"nodeType":"InheritanceSpecifier","src":"692:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"175:487:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":147,"linearizedBaseContracts":[147,1606],"name":"Ownable","nameLocation":"681:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":8,"mutability":"mutable","name":"_owner","nameLocation":"722:6:0","nodeType":"VariableDeclaration","scope":147,"src":"706:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":9,"nodeType":"StructuredDocumentation","src":"735:85:0","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":13,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:0","nodeType":"ErrorDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11,"mutability":"mutable","name":"account","nameLocation":"866:7:0","nodeType":"VariableDeclaration","scope":13,"src":"858:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:0"},"src":"825:50:0"},{"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"881:82:0","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":18,"name":"OwnableInvalidOwner","nameLocation":"974:19:0","nodeType":"ErrorDefinition","parameters":{"id":17,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16,"mutability":"mutable","name":"owner","nameLocation":"1002:5:0","nodeType":"VariableDeclaration","scope":18,"src":"994:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:0"},"src":"968:41:0"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":24,"name":"OwnershipTransferred","nameLocation":"1021:20:0","nodeType":"EventDefinition","parameters":{"id":23,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:0","nodeType":"VariableDeclaration","scope":24,"src":"1042:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":22,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:0","nodeType":"VariableDeclaration","scope":24,"src":"1073:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":21,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:0"},"src":"1015:84:0"},{"body":{"id":49,"nodeType":"Block","src":"1259:153:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":35,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":30,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1273:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":33,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":32,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":31,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:0","typeDescriptions":{}}},"id":34,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":44,"nodeType":"IfStatement","src":"1269:95:0","trueBody":{"id":43,"nodeType":"Block","src":"1301:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":39,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":38,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":37,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:0","typeDescriptions":{}}},"id":40,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":36,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"1322:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":42,"nodeType":"RevertStatement","src":"1315:38:0"}]}},{"expression":{"arguments":[{"id":46,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1392:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":45,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"1373:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":47,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":48,"nodeType":"ExpressionStatement","src":"1373:32:0"}]},"documentation":{"id":25,"nodeType":"StructuredDocumentation","src":"1105:115:0","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":50,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:0","nodeType":"VariableDeclaration","scope":50,"src":"1237:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":26,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:0"},"returnParameters":{"id":29,"nodeType":"ParameterList","parameters":[],"src":"1259:0:0"},"scope":147,"src":"1225:187:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":57,"nodeType":"Block","src":"1521:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":53,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"1531:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":55,"nodeType":"ExpressionStatement","src":"1531:13:0"},{"id":56,"nodeType":"PlaceholderStatement","src":"1554:1:0"}]},"documentation":{"id":51,"nodeType":"StructuredDocumentation","src":"1418:77:0","text":" @dev Throws if called by any account other than the owner."},"id":58,"name":"onlyOwner","nameLocation":"1509:9:0","nodeType":"ModifierDefinition","parameters":{"id":52,"nodeType":"ParameterList","parameters":[],"src":"1518:2:0"},"src":"1500:62:0","virtual":false,"visibility":"internal"},{"body":{"id":66,"nodeType":"Block","src":"1693:30:0","statements":[{"expression":{"id":64,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"1710:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":63,"id":65,"nodeType":"Return","src":"1703:13:0"}]},"documentation":{"id":59,"nodeType":"StructuredDocumentation","src":"1568:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":67,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:0","nodeType":"FunctionDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"1652:2:0"},"returnParameters":{"id":63,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":67,"src":"1684:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:0"},"scope":147,"src":"1638:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":83,"nodeType":"Block","src":"1841:117:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":75,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":71,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"1855:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":73,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1588,"src":"1866:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":74,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":82,"nodeType":"IfStatement","src":"1851:101:0","trueBody":{"id":81,"nodeType":"Block","src":"1880:72:0","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":77,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1588,"src":"1928:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":76,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"1901:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":79,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":80,"nodeType":"RevertStatement","src":"1894:47:0"}]}}]},"documentation":{"id":68,"nodeType":"StructuredDocumentation","src":"1729:62:0","text":" @dev Throws if the sender is not the owner."},"id":84,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:0","nodeType":"FunctionDefinition","parameters":{"id":69,"nodeType":"ParameterList","parameters":[],"src":"1816:2:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[],"src":"1841:0:0"},"scope":147,"src":"1796:162:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":97,"nodeType":"Block","src":"2347:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":93,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":92,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":91,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:0","typeDescriptions":{}}},"id":94,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":90,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2357:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":95,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":96,"nodeType":"ExpressionStatement","src":"2357:30:0"}]},"documentation":{"id":85,"nodeType":"StructuredDocumentation","src":"1964:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":98,"implemented":true,"kind":"function","modifiers":[{"id":88,"kind":"modifierInvocation","modifierName":{"id":87,"name":"onlyOwner","nameLocations":["2337:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2337:9:0"},"nodeType":"ModifierInvocation","src":"2337:9:0"}],"name":"renounceOwnership","nameLocation":"2302:17:0","nodeType":"FunctionDefinition","parameters":{"id":86,"nodeType":"ParameterList","parameters":[],"src":"2319:2:0"},"returnParameters":{"id":89,"nodeType":"ParameterList","parameters":[],"src":"2347:0:0"},"scope":147,"src":"2293:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":125,"nodeType":"Block","src":"2613:145:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":106,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2627:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":107,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:0","typeDescriptions":{}}},"id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":120,"nodeType":"IfStatement","src":"2623:91:0","trueBody":{"id":119,"nodeType":"Block","src":"2651:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":113,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:0","typeDescriptions":{}}},"id":116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":112,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"2672:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":118,"nodeType":"RevertStatement","src":"2665:38:0"}]}},{"expression":{"arguments":[{"id":122,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2742:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":121,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2723:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":124,"nodeType":"ExpressionStatement","src":"2723:28:0"}]},"documentation":{"id":99,"nodeType":"StructuredDocumentation","src":"2400:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":126,"implemented":true,"kind":"function","modifiers":[{"id":104,"kind":"modifierInvocation","modifierName":{"id":103,"name":"onlyOwner","nameLocations":["2603:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2603:9:0"},"nodeType":"ModifierInvocation","src":"2603:9:0"}],"name":"transferOwnership","nameLocation":"2552:17:0","nodeType":"FunctionDefinition","parameters":{"id":102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:0","nodeType":"VariableDeclaration","scope":126,"src":"2570:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:0"},"returnParameters":{"id":105,"nodeType":"ParameterList","parameters":[],"src":"2613:0:0"},"scope":147,"src":"2543:215:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":145,"nodeType":"Block","src":"2975:124:0","statements":[{"assignments":[133],"declarations":[{"constant":false,"id":133,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:0","nodeType":"VariableDeclaration","scope":145,"src":"2985:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":135,"initialValue":{"id":134,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3004:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:0"},{"expression":{"id":138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":136,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3020:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":137,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3029:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":139,"nodeType":"ExpressionStatement","src":"3020:17:0"},{"eventCall":{"arguments":[{"id":141,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"3073:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":142,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3083:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":140,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"3052:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":144,"nodeType":"EmitStatement","src":"3047:45:0"}]},"documentation":{"id":127,"nodeType":"StructuredDocumentation","src":"2764:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":146,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:0","nodeType":"FunctionDefinition","parameters":{"id":130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":129,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:0","nodeType":"VariableDeclaration","scope":146,"src":"2940:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":128,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:0"},"returnParameters":{"id":131,"nodeType":"ParameterList","parameters":[],"src":"2975:0:0"},"scope":147,"src":"2912:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":148,"src":"663:2438:0","usedErrors":[13,18],"usedEvents":[24]}],"src":"102:3000:0"},"id":0},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[284],"IERC20Errors":[189],"IERC721Errors":[237]},"id":285,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":149,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":150,"nodeType":"StructuredDocumentation","src":"138:141:1","text":" @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."},"fullyImplemented":true,"id":189,"linearizedBaseContracts":[189],"name":"IERC20Errors","nameLocation":"290:12:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":151,"nodeType":"StructuredDocumentation","src":"309:309:1","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":159,"name":"ERC20InsufficientBalance","nameLocation":"629:24:1","nodeType":"ErrorDefinition","parameters":{"id":158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":153,"mutability":"mutable","name":"sender","nameLocation":"662:6:1","nodeType":"VariableDeclaration","scope":159,"src":"654:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":152,"name":"address","nodeType":"ElementaryTypeName","src":"654:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":155,"mutability":"mutable","name":"balance","nameLocation":"678:7:1","nodeType":"VariableDeclaration","scope":159,"src":"670:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":154,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":157,"mutability":"mutable","name":"needed","nameLocation":"695:6:1","nodeType":"VariableDeclaration","scope":159,"src":"687:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":156,"name":"uint256","nodeType":"ElementaryTypeName","src":"687:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"653:49:1"},"src":"623:80:1"},{"documentation":{"id":160,"nodeType":"StructuredDocumentation","src":"709:152:1","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":164,"name":"ERC20InvalidSender","nameLocation":"872:18:1","nodeType":"ErrorDefinition","parameters":{"id":163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":162,"mutability":"mutable","name":"sender","nameLocation":"899:6:1","nodeType":"VariableDeclaration","scope":164,"src":"891:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":161,"name":"address","nodeType":"ElementaryTypeName","src":"891:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"890:16:1"},"src":"866:41:1"},{"documentation":{"id":165,"nodeType":"StructuredDocumentation","src":"913:159:1","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":169,"name":"ERC20InvalidReceiver","nameLocation":"1083:20:1","nodeType":"ErrorDefinition","parameters":{"id":168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":167,"mutability":"mutable","name":"receiver","nameLocation":"1112:8:1","nodeType":"VariableDeclaration","scope":169,"src":"1104:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":166,"name":"address","nodeType":"ElementaryTypeName","src":"1104:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1103:18:1"},"src":"1077:45:1"},{"documentation":{"id":170,"nodeType":"StructuredDocumentation","src":"1128:345:1","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":178,"name":"ERC20InsufficientAllowance","nameLocation":"1484:26:1","nodeType":"ErrorDefinition","parameters":{"id":177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":172,"mutability":"mutable","name":"spender","nameLocation":"1519:7:1","nodeType":"VariableDeclaration","scope":178,"src":"1511:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":171,"name":"address","nodeType":"ElementaryTypeName","src":"1511:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":174,"mutability":"mutable","name":"allowance","nameLocation":"1536:9:1","nodeType":"VariableDeclaration","scope":178,"src":"1528:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":173,"name":"uint256","nodeType":"ElementaryTypeName","src":"1528:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":176,"mutability":"mutable","name":"needed","nameLocation":"1555:6:1","nodeType":"VariableDeclaration","scope":178,"src":"1547:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":175,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1510:52:1"},"src":"1478:85:1"},{"documentation":{"id":179,"nodeType":"StructuredDocumentation","src":"1569:174:1","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":183,"name":"ERC20InvalidApprover","nameLocation":"1754:20:1","nodeType":"ErrorDefinition","parameters":{"id":182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":181,"mutability":"mutable","name":"approver","nameLocation":"1783:8:1","nodeType":"VariableDeclaration","scope":183,"src":"1775:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":180,"name":"address","nodeType":"ElementaryTypeName","src":"1775:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1774:18:1"},"src":"1748:45:1"},{"documentation":{"id":184,"nodeType":"StructuredDocumentation","src":"1799:195:1","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":188,"name":"ERC20InvalidSpender","nameLocation":"2005:19:1","nodeType":"ErrorDefinition","parameters":{"id":187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":186,"mutability":"mutable","name":"spender","nameLocation":"2033:7:1","nodeType":"VariableDeclaration","scope":188,"src":"2025:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":185,"name":"address","nodeType":"ElementaryTypeName","src":"2025:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2024:17:1"},"src":"1999:43:1"}],"scope":285,"src":"280:1764:1","usedErrors":[159,164,169,178,183,188],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":190,"nodeType":"StructuredDocumentation","src":"2046:143:1","text":" @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."},"fullyImplemented":true,"id":237,"linearizedBaseContracts":[237],"name":"IERC721Errors","nameLocation":"2200:13:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":191,"nodeType":"StructuredDocumentation","src":"2220:219:1","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":195,"name":"ERC721InvalidOwner","nameLocation":"2450:18:1","nodeType":"ErrorDefinition","parameters":{"id":194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":193,"mutability":"mutable","name":"owner","nameLocation":"2477:5:1","nodeType":"VariableDeclaration","scope":195,"src":"2469:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":192,"name":"address","nodeType":"ElementaryTypeName","src":"2469:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2468:15:1"},"src":"2444:40:1"},{"documentation":{"id":196,"nodeType":"StructuredDocumentation","src":"2490:132:1","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":200,"name":"ERC721NonexistentToken","nameLocation":"2633:22:1","nodeType":"ErrorDefinition","parameters":{"id":199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":198,"mutability":"mutable","name":"tokenId","nameLocation":"2664:7:1","nodeType":"VariableDeclaration","scope":200,"src":"2656:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":197,"name":"uint256","nodeType":"ElementaryTypeName","src":"2656:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2655:17:1"},"src":"2627:46:1"},{"documentation":{"id":201,"nodeType":"StructuredDocumentation","src":"2679:289:1","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":209,"name":"ERC721IncorrectOwner","nameLocation":"2979:20:1","nodeType":"ErrorDefinition","parameters":{"id":208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":203,"mutability":"mutable","name":"sender","nameLocation":"3008:6:1","nodeType":"VariableDeclaration","scope":209,"src":"3000:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":202,"name":"address","nodeType":"ElementaryTypeName","src":"3000:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":205,"mutability":"mutable","name":"tokenId","nameLocation":"3024:7:1","nodeType":"VariableDeclaration","scope":209,"src":"3016:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":204,"name":"uint256","nodeType":"ElementaryTypeName","src":"3016:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":207,"mutability":"mutable","name":"owner","nameLocation":"3041:5:1","nodeType":"VariableDeclaration","scope":209,"src":"3033:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":206,"name":"address","nodeType":"ElementaryTypeName","src":"3033:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2999:48:1"},"src":"2973:75:1"},{"documentation":{"id":210,"nodeType":"StructuredDocumentation","src":"3054:152:1","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":214,"name":"ERC721InvalidSender","nameLocation":"3217:19:1","nodeType":"ErrorDefinition","parameters":{"id":213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":212,"mutability":"mutable","name":"sender","nameLocation":"3245:6:1","nodeType":"VariableDeclaration","scope":214,"src":"3237:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":211,"name":"address","nodeType":"ElementaryTypeName","src":"3237:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3236:16:1"},"src":"3211:42:1"},{"documentation":{"id":215,"nodeType":"StructuredDocumentation","src":"3259:159:1","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":219,"name":"ERC721InvalidReceiver","nameLocation":"3429:21:1","nodeType":"ErrorDefinition","parameters":{"id":218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":217,"mutability":"mutable","name":"receiver","nameLocation":"3459:8:1","nodeType":"VariableDeclaration","scope":219,"src":"3451:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":216,"name":"address","nodeType":"ElementaryTypeName","src":"3451:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3450:18:1"},"src":"3423:46:1"},{"documentation":{"id":220,"nodeType":"StructuredDocumentation","src":"3475:247:1","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":226,"name":"ERC721InsufficientApproval","nameLocation":"3733:26:1","nodeType":"ErrorDefinition","parameters":{"id":225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":222,"mutability":"mutable","name":"operator","nameLocation":"3768:8:1","nodeType":"VariableDeclaration","scope":226,"src":"3760:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":221,"name":"address","nodeType":"ElementaryTypeName","src":"3760:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":224,"mutability":"mutable","name":"tokenId","nameLocation":"3786:7:1","nodeType":"VariableDeclaration","scope":226,"src":"3778:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":223,"name":"uint256","nodeType":"ElementaryTypeName","src":"3778:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3759:35:1"},"src":"3727:68:1"},{"documentation":{"id":227,"nodeType":"StructuredDocumentation","src":"3801:174:1","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":231,"name":"ERC721InvalidApprover","nameLocation":"3986:21:1","nodeType":"ErrorDefinition","parameters":{"id":230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":229,"mutability":"mutable","name":"approver","nameLocation":"4016:8:1","nodeType":"VariableDeclaration","scope":231,"src":"4008:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":228,"name":"address","nodeType":"ElementaryTypeName","src":"4008:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4007:18:1"},"src":"3980:46:1"},{"documentation":{"id":232,"nodeType":"StructuredDocumentation","src":"4032:197:1","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":236,"name":"ERC721InvalidOperator","nameLocation":"4240:21:1","nodeType":"ErrorDefinition","parameters":{"id":235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":234,"mutability":"mutable","name":"operator","nameLocation":"4270:8:1","nodeType":"VariableDeclaration","scope":236,"src":"4262:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":233,"name":"address","nodeType":"ElementaryTypeName","src":"4262:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4261:18:1"},"src":"4234:46:1"}],"scope":285,"src":"2190:2092:1","usedErrors":[195,200,209,214,219,226,231,236],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":238,"nodeType":"StructuredDocumentation","src":"4284:145:1","text":" @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."},"fullyImplemented":true,"id":284,"linearizedBaseContracts":[284],"name":"IERC1155Errors","nameLocation":"4440:14:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":239,"nodeType":"StructuredDocumentation","src":"4461:361:1","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":249,"name":"ERC1155InsufficientBalance","nameLocation":"4833:26:1","nodeType":"ErrorDefinition","parameters":{"id":248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":241,"mutability":"mutable","name":"sender","nameLocation":"4868:6:1","nodeType":"VariableDeclaration","scope":249,"src":"4860:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":240,"name":"address","nodeType":"ElementaryTypeName","src":"4860:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":243,"mutability":"mutable","name":"balance","nameLocation":"4884:7:1","nodeType":"VariableDeclaration","scope":249,"src":"4876:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":242,"name":"uint256","nodeType":"ElementaryTypeName","src":"4876:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":245,"mutability":"mutable","name":"needed","nameLocation":"4901:6:1","nodeType":"VariableDeclaration","scope":249,"src":"4893:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":244,"name":"uint256","nodeType":"ElementaryTypeName","src":"4893:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":247,"mutability":"mutable","name":"tokenId","nameLocation":"4917:7:1","nodeType":"VariableDeclaration","scope":249,"src":"4909:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":246,"name":"uint256","nodeType":"ElementaryTypeName","src":"4909:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4859:66:1"},"src":"4827:99:1"},{"documentation":{"id":250,"nodeType":"StructuredDocumentation","src":"4932:152:1","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":254,"name":"ERC1155InvalidSender","nameLocation":"5095:20:1","nodeType":"ErrorDefinition","parameters":{"id":253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":252,"mutability":"mutable","name":"sender","nameLocation":"5124:6:1","nodeType":"VariableDeclaration","scope":254,"src":"5116:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":251,"name":"address","nodeType":"ElementaryTypeName","src":"5116:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5115:16:1"},"src":"5089:43:1"},{"documentation":{"id":255,"nodeType":"StructuredDocumentation","src":"5138:159:1","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":259,"name":"ERC1155InvalidReceiver","nameLocation":"5308:22:1","nodeType":"ErrorDefinition","parameters":{"id":258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":257,"mutability":"mutable","name":"receiver","nameLocation":"5339:8:1","nodeType":"VariableDeclaration","scope":259,"src":"5331:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":256,"name":"address","nodeType":"ElementaryTypeName","src":"5331:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5330:18:1"},"src":"5302:47:1"},{"documentation":{"id":260,"nodeType":"StructuredDocumentation","src":"5355:256:1","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":266,"name":"ERC1155MissingApprovalForAll","nameLocation":"5622:28:1","nodeType":"ErrorDefinition","parameters":{"id":265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":262,"mutability":"mutable","name":"operator","nameLocation":"5659:8:1","nodeType":"VariableDeclaration","scope":266,"src":"5651:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":261,"name":"address","nodeType":"ElementaryTypeName","src":"5651:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":264,"mutability":"mutable","name":"owner","nameLocation":"5677:5:1","nodeType":"VariableDeclaration","scope":266,"src":"5669:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":263,"name":"address","nodeType":"ElementaryTypeName","src":"5669:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5650:33:1"},"src":"5616:68:1"},{"documentation":{"id":267,"nodeType":"StructuredDocumentation","src":"5690:174:1","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":271,"name":"ERC1155InvalidApprover","nameLocation":"5875:22:1","nodeType":"ErrorDefinition","parameters":{"id":270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":269,"mutability":"mutable","name":"approver","nameLocation":"5906:8:1","nodeType":"VariableDeclaration","scope":271,"src":"5898:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":268,"name":"address","nodeType":"ElementaryTypeName","src":"5898:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5897:18:1"},"src":"5869:47:1"},{"documentation":{"id":272,"nodeType":"StructuredDocumentation","src":"5922:197:1","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":276,"name":"ERC1155InvalidOperator","nameLocation":"6130:22:1","nodeType":"ErrorDefinition","parameters":{"id":275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":274,"mutability":"mutable","name":"operator","nameLocation":"6161:8:1","nodeType":"VariableDeclaration","scope":276,"src":"6153:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":273,"name":"address","nodeType":"ElementaryTypeName","src":"6153:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6152:18:1"},"src":"6124:47:1"},{"documentation":{"id":277,"nodeType":"StructuredDocumentation","src":"6177:280:1","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":283,"name":"ERC1155InvalidArrayLength","nameLocation":"6468:25:1","nodeType":"ErrorDefinition","parameters":{"id":282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":279,"mutability":"mutable","name":"idsLength","nameLocation":"6502:9:1","nodeType":"VariableDeclaration","scope":283,"src":"6494:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":278,"name":"uint256","nodeType":"ElementaryTypeName","src":"6494:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":281,"mutability":"mutable","name":"valuesLength","nameLocation":"6521:12:1","nodeType":"VariableDeclaration","scope":283,"src":"6513:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":280,"name":"uint256","nodeType":"ElementaryTypeName","src":"6513:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6493:41:1"},"src":"6462:73:1"}],"scope":285,"src":"4430:2107:1","usedErrors":[249,254,259,266,271,276,283],"usedEvents":[]}],"src":"112:6426:1"},"id":1},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","exportedSymbols":{"Context":[1606],"ERC165":[3153],"ERC721":[1241],"ERC721Utils":[1481],"IERC165":[3165],"IERC721":[1358],"IERC721Errors":[237],"IERC721Metadata":[1404],"Strings":[3129]},"id":1242,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":286,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:2"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"./IERC721.sol","id":288,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1242,"sourceUnit":1359,"src":"133:38:2","symbolAliases":[{"foreign":{"id":287,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1358,"src":"141:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","file":"./extensions/IERC721Metadata.sol","id":290,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1242,"sourceUnit":1405,"src":"172:65:2","symbolAliases":[{"foreign":{"id":289,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1404,"src":"180:15:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol","file":"./utils/ERC721Utils.sol","id":292,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1242,"sourceUnit":1482,"src":"238:52:2","symbolAliases":[{"foreign":{"id":291,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1481,"src":"246:11:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":294,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1242,"sourceUnit":1607,"src":"291:48:2","symbolAliases":[{"foreign":{"id":293,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1606,"src":"299:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../../utils/Strings.sol","id":296,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1242,"sourceUnit":3130,"src":"340:48:2","symbolAliases":[{"foreign":{"id":295,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3129,"src":"348:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../../utils/introspection/ERC165.sol","id":299,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1242,"sourceUnit":3154,"src":"389:69:2","symbolAliases":[{"foreign":{"id":297,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3165,"src":"397:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":298,"name":"ERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3153,"src":"406:6:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":301,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1242,"sourceUnit":285,"src":"459:66:2","symbolAliases":[{"foreign":{"id":300,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"467:13:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":303,"name":"Context","nameLocations":["803:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":1606,"src":"803:7:2"},"id":304,"nodeType":"InheritanceSpecifier","src":"803:7:2"},{"baseName":{"id":305,"name":"ERC165","nameLocations":["812:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":3153,"src":"812:6:2"},"id":306,"nodeType":"InheritanceSpecifier","src":"812:6:2"},{"baseName":{"id":307,"name":"IERC721","nameLocations":["820:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":1358,"src":"820:7:2"},"id":308,"nodeType":"InheritanceSpecifier","src":"820:7:2"},{"baseName":{"id":309,"name":"IERC721Metadata","nameLocations":["829:15:2"],"nodeType":"IdentifierPath","referencedDeclaration":1404,"src":"829:15:2"},"id":310,"nodeType":"InheritanceSpecifier","src":"829:15:2"},{"baseName":{"id":311,"name":"IERC721Errors","nameLocations":["846:13:2"],"nodeType":"IdentifierPath","referencedDeclaration":237,"src":"846:13:2"},"id":312,"nodeType":"InheritanceSpecifier","src":"846:13:2"}],"canonicalName":"ERC721","contractDependencies":[],"contractKind":"contract","documentation":{"id":302,"nodeType":"StructuredDocumentation","src":"527:247:2","text":" @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."},"fullyImplemented":true,"id":1241,"linearizedBaseContracts":[1241,237,1404,1358,3153,3165,1606],"name":"ERC721","nameLocation":"793:6:2","nodeType":"ContractDefinition","nodes":[{"global":false,"id":315,"libraryName":{"id":313,"name":"Strings","nameLocations":["872:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":3129,"src":"872:7:2"},"nodeType":"UsingForDirective","src":"866:26:2","typeName":{"id":314,"name":"uint256","nodeType":"ElementaryTypeName","src":"884:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"id":317,"mutability":"mutable","name":"_name","nameLocation":"931:5:2","nodeType":"VariableDeclaration","scope":1241,"src":"916:20:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":316,"name":"string","nodeType":"ElementaryTypeName","src":"916:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":319,"mutability":"mutable","name":"_symbol","nameLocation":"978:7:2","nodeType":"VariableDeclaration","scope":1241,"src":"963:22:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":318,"name":"string","nodeType":"ElementaryTypeName","src":"963:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":323,"mutability":"mutable","name":"_owners","nameLocation":"1036:7:2","nodeType":"VariableDeclaration","scope":1241,"src":"992:51:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":322,"keyName":"tokenId","keyNameLocation":"1008:7:2","keyType":{"id":320,"name":"uint256","nodeType":"ElementaryTypeName","src":"1000:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"992:35:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":321,"name":"address","nodeType":"ElementaryTypeName","src":"1019:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":327,"mutability":"mutable","name":"_balances","nameLocation":"1092:9:2","nodeType":"VariableDeclaration","scope":1241,"src":"1050:51:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":326,"keyName":"owner","keyNameLocation":"1066:5:2","keyType":{"id":324,"name":"address","nodeType":"ElementaryTypeName","src":"1058:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1050:33:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":325,"name":"uint256","nodeType":"ElementaryTypeName","src":"1075:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":331,"mutability":"mutable","name":"_tokenApprovals","nameLocation":"1152:15:2","nodeType":"VariableDeclaration","scope":1241,"src":"1108:59:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":330,"keyName":"tokenId","keyNameLocation":"1124:7:2","keyType":{"id":328,"name":"uint256","nodeType":"ElementaryTypeName","src":"1116:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1108:35:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":329,"name":"address","nodeType":"ElementaryTypeName","src":"1135:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":337,"mutability":"mutable","name":"_operatorApprovals","nameLocation":"1242:18:2","nodeType":"VariableDeclaration","scope":1241,"src":"1174:86:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"typeName":{"id":336,"keyName":"owner","keyNameLocation":"1190:5:2","keyType":{"id":332,"name":"address","nodeType":"ElementaryTypeName","src":"1182:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1174:59:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":335,"keyName":"operator","keyNameLocation":"1215:8:2","keyType":{"id":333,"name":"address","nodeType":"ElementaryTypeName","src":"1207:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1199:33:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":334,"name":"bool","nodeType":"ElementaryTypeName","src":"1227:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"private"},{"body":{"id":353,"nodeType":"Block","src":"1436:57:2","statements":[{"expression":{"id":347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":345,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"1446:5:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":346,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":340,"src":"1454:5:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1446:13:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":348,"nodeType":"ExpressionStatement","src":"1446:13:2"},{"expression":{"id":351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":349,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":319,"src":"1469:7:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":350,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":342,"src":"1479:7:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1469:17:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":352,"nodeType":"ExpressionStatement","src":"1469:17:2"}]},"documentation":{"id":338,"nodeType":"StructuredDocumentation","src":"1267:108:2","text":" @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."},"id":354,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":340,"mutability":"mutable","name":"name_","nameLocation":"1406:5:2","nodeType":"VariableDeclaration","scope":354,"src":"1392:19:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":339,"name":"string","nodeType":"ElementaryTypeName","src":"1392:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":342,"mutability":"mutable","name":"symbol_","nameLocation":"1427:7:2","nodeType":"VariableDeclaration","scope":354,"src":"1413:21:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":341,"name":"string","nodeType":"ElementaryTypeName","src":"1413:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1391:44:2"},"returnParameters":{"id":344,"nodeType":"ParameterList","parameters":[],"src":"1436:0:2"},"scope":1241,"src":"1380:113:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[3152,3164],"body":{"id":384,"nodeType":"Block","src":"1668:192:2","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":365,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":357,"src":"1697:11:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":367,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1358,"src":"1717:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721_$1358_$","typeString":"type(contract IERC721)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721_$1358_$","typeString":"type(contract IERC721)"}],"id":366,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1712:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1712:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721_$1358","typeString":"type(contract IERC721)"}},"id":369,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1726:11:2","memberName":"interfaceId","nodeType":"MemberAccess","src":"1712:25:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1697:40:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":371,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":357,"src":"1753:11:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":373,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1404,"src":"1773:15:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$1404_$","typeString":"type(contract IERC721Metadata)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$1404_$","typeString":"type(contract IERC721Metadata)"}],"id":372,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1768:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1768:21:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721Metadata_$1404","typeString":"type(contract IERC721Metadata)"}},"id":375,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1790:11:2","memberName":"interfaceId","nodeType":"MemberAccess","src":"1768:33:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1753:48:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1697:104:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":380,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":357,"src":"1841:11:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":378,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1817:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721_$1241_$","typeString":"type(contract super ERC721)"}},"id":379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1823:17:2","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":3152,"src":"1817:23:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":381,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1817:36:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1697:156:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":364,"id":383,"nodeType":"Return","src":"1678:175:2"}]},"documentation":{"id":355,"nodeType":"StructuredDocumentation","src":"1499:56:2","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":385,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1569:17:2","nodeType":"FunctionDefinition","overrides":{"id":361,"nodeType":"OverrideSpecifier","overrides":[{"id":359,"name":"ERC165","nameLocations":["1636:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":3153,"src":"1636:6:2"},{"id":360,"name":"IERC165","nameLocations":["1644:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":3165,"src":"1644:7:2"}],"src":"1627:25:2"},"parameters":{"id":358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":357,"mutability":"mutable","name":"interfaceId","nameLocation":"1594:11:2","nodeType":"VariableDeclaration","scope":385,"src":"1587:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":356,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1587:6:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1586:20:2"},"returnParameters":{"id":364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":363,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":385,"src":"1662:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":362,"name":"bool","nodeType":"ElementaryTypeName","src":"1662:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1661:6:2"},"scope":1241,"src":"1560:300:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1283],"body":{"id":412,"nodeType":"Block","src":"1991:136:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":393,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"2005:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2022:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":395,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2014:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":394,"name":"address","nodeType":"ElementaryTypeName","src":"2014:7:2","typeDescriptions":{}}},"id":397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2014:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2005:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":407,"nodeType":"IfStatement","src":"2001:87:2","trueBody":{"id":406,"nodeType":"Block","src":"2026:62:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2074:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":401,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2066:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":400,"name":"address","nodeType":"ElementaryTypeName","src":"2066:7:2","typeDescriptions":{}}},"id":403,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2066:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":399,"name":"ERC721InvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":195,"src":"2047:18:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2047:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":405,"nodeType":"RevertStatement","src":"2040:37:2"}]}},{"expression":{"baseExpression":{"id":408,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"2104:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":410,"indexExpression":{"id":409,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"2114:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2104:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":392,"id":411,"nodeType":"Return","src":"2097:23:2"}]},"documentation":{"id":386,"nodeType":"StructuredDocumentation","src":"1866:48:2","text":" @dev See {IERC721-balanceOf}."},"functionSelector":"70a08231","id":413,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"1928:9:2","nodeType":"FunctionDefinition","parameters":{"id":389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":388,"mutability":"mutable","name":"owner","nameLocation":"1946:5:2","nodeType":"VariableDeclaration","scope":413,"src":"1938:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":387,"name":"address","nodeType":"ElementaryTypeName","src":"1938:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1937:15:2"},"returnParameters":{"id":392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":391,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":413,"src":"1982:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":390,"name":"uint256","nodeType":"ElementaryTypeName","src":"1982:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1981:9:2"},"scope":1241,"src":"1919:208:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1291],"body":{"id":425,"nodeType":"Block","src":"2256:46:2","statements":[{"expression":{"arguments":[{"id":422,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":416,"src":"2287:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":421,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1240,"src":"2273:13:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2273:22:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":420,"id":424,"nodeType":"Return","src":"2266:29:2"}]},"documentation":{"id":414,"nodeType":"StructuredDocumentation","src":"2133:46:2","text":" @dev See {IERC721-ownerOf}."},"functionSelector":"6352211e","id":426,"implemented":true,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"2193:7:2","nodeType":"FunctionDefinition","parameters":{"id":417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":416,"mutability":"mutable","name":"tokenId","nameLocation":"2209:7:2","nodeType":"VariableDeclaration","scope":426,"src":"2201:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":415,"name":"uint256","nodeType":"ElementaryTypeName","src":"2201:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2200:17:2"},"returnParameters":{"id":420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":419,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":426,"src":"2247:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":418,"name":"address","nodeType":"ElementaryTypeName","src":"2247:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2246:9:2"},"scope":1241,"src":"2184:118:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1389],"body":{"id":434,"nodeType":"Block","src":"2424:29:2","statements":[{"expression":{"id":432,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"2441:5:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":431,"id":433,"nodeType":"Return","src":"2434:12:2"}]},"documentation":{"id":427,"nodeType":"StructuredDocumentation","src":"2308:51:2","text":" @dev See {IERC721Metadata-name}."},"functionSelector":"06fdde03","id":435,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2373:4:2","nodeType":"FunctionDefinition","parameters":{"id":428,"nodeType":"ParameterList","parameters":[],"src":"2377:2:2"},"returnParameters":{"id":431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":430,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":435,"src":"2409:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":429,"name":"string","nodeType":"ElementaryTypeName","src":"2409:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2408:15:2"},"scope":1241,"src":"2364:89:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1395],"body":{"id":443,"nodeType":"Block","src":"2579:31:2","statements":[{"expression":{"id":441,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":319,"src":"2596:7:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":440,"id":442,"nodeType":"Return","src":"2589:14:2"}]},"documentation":{"id":436,"nodeType":"StructuredDocumentation","src":"2459:53:2","text":" @dev See {IERC721Metadata-symbol}."},"functionSelector":"95d89b41","id":444,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2526:6:2","nodeType":"FunctionDefinition","parameters":{"id":437,"nodeType":"ParameterList","parameters":[],"src":"2532:2:2"},"returnParameters":{"id":440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":439,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":444,"src":"2564:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":438,"name":"string","nodeType":"ElementaryTypeName","src":"2564:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2563:15:2"},"scope":1241,"src":"2517:93:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1403],"body":{"id":479,"nodeType":"Block","src":"2755:176:2","statements":[{"expression":{"arguments":[{"id":453,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"2779:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":452,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1240,"src":"2765:13:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2765:22:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":455,"nodeType":"ExpressionStatement","src":"2765:22:2"},{"assignments":[457],"declarations":[{"constant":false,"id":457,"mutability":"mutable","name":"baseURI","nameLocation":"2812:7:2","nodeType":"VariableDeclaration","scope":479,"src":"2798:21:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":456,"name":"string","nodeType":"ElementaryTypeName","src":"2798:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":460,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":458,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":489,"src":"2822:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2822:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2798:34:2"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":463,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":457,"src":"2855:7:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":462,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2849:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":461,"name":"bytes","nodeType":"ElementaryTypeName","src":"2849:5:2","typeDescriptions":{}}},"id":464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2849:14:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2864:6:2","memberName":"length","nodeType":"MemberAccess","src":"2849:21:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2873:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2849:25:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":476,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2922:2:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2849:75:2","trueExpression":{"arguments":[{"id":471,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":457,"src":"2891:7:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":472,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"2900:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2908:8:2","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":1841,"src":"2900:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$","typeString":"function (uint256) pure returns (string memory)"}},"id":474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2900:18:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":469,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2877:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":468,"name":"string","nodeType":"ElementaryTypeName","src":"2877:6:2","typeDescriptions":{}}},"id":470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2884:6:2","memberName":"concat","nodeType":"MemberAccess","src":"2877:13:2","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":475,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2877:42:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":451,"id":478,"nodeType":"Return","src":"2842:82:2"}]},"documentation":{"id":445,"nodeType":"StructuredDocumentation","src":"2616:55:2","text":" @dev See {IERC721Metadata-tokenURI}."},"functionSelector":"c87b56dd","id":480,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"2685:8:2","nodeType":"FunctionDefinition","parameters":{"id":448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":447,"mutability":"mutable","name":"tokenId","nameLocation":"2702:7:2","nodeType":"VariableDeclaration","scope":480,"src":"2694:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":446,"name":"uint256","nodeType":"ElementaryTypeName","src":"2694:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2693:17:2"},"returnParameters":{"id":451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":450,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":480,"src":"2740:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":449,"name":"string","nodeType":"ElementaryTypeName","src":"2740:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2739:15:2"},"scope":1241,"src":"2676:255:2","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":488,"nodeType":"Block","src":"3239:26:2","statements":[{"expression":{"hexValue":"","id":486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3256:2:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"functionReturnParameters":485,"id":487,"nodeType":"Return","src":"3249:9:2"}]},"documentation":{"id":481,"nodeType":"StructuredDocumentation","src":"2937:231:2","text":" @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."},"id":489,"implemented":true,"kind":"function","modifiers":[],"name":"_baseURI","nameLocation":"3182:8:2","nodeType":"FunctionDefinition","parameters":{"id":482,"nodeType":"ParameterList","parameters":[],"src":"3190:2:2"},"returnParameters":{"id":485,"nodeType":"ParameterList","parameters":[{"constant":false,"id":484,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":489,"src":"3224:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":483,"name":"string","nodeType":"ElementaryTypeName","src":"3224:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3223:15:2"},"scope":1241,"src":"3173:92:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[1331],"body":{"id":504,"nodeType":"Block","src":"3383:52:2","statements":[{"expression":{"arguments":[{"id":498,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":492,"src":"3402:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":499,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":494,"src":"3406:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":500,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1588,"src":"3415:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":501,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3415:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":497,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1108,1174],"referencedDeclaration":1108,"src":"3393:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,address)"}},"id":502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3393:35:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":503,"nodeType":"ExpressionStatement","src":"3393:35:2"}]},"documentation":{"id":490,"nodeType":"StructuredDocumentation","src":"3271:46:2","text":" @dev See {IERC721-approve}."},"functionSelector":"095ea7b3","id":505,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3331:7:2","nodeType":"FunctionDefinition","parameters":{"id":495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":492,"mutability":"mutable","name":"to","nameLocation":"3347:2:2","nodeType":"VariableDeclaration","scope":505,"src":"3339:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":491,"name":"address","nodeType":"ElementaryTypeName","src":"3339:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":494,"mutability":"mutable","name":"tokenId","nameLocation":"3359:7:2","nodeType":"VariableDeclaration","scope":505,"src":"3351:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":493,"name":"uint256","nodeType":"ElementaryTypeName","src":"3351:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3338:29:2"},"returnParameters":{"id":496,"nodeType":"ParameterList","parameters":[],"src":"3383:0:2"},"scope":1241,"src":"3322:113:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1347],"body":{"id":521,"nodeType":"Block","src":"3572:78:2","statements":[{"expression":{"arguments":[{"id":514,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":508,"src":"3596:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":513,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1240,"src":"3582:13:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":515,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3582:22:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":516,"nodeType":"ExpressionStatement","src":"3582:22:2"},{"expression":{"arguments":[{"id":518,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":508,"src":"3635:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":517,"name":"_getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":675,"src":"3622:12:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":519,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3622:21:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":512,"id":520,"nodeType":"Return","src":"3615:28:2"}]},"documentation":{"id":506,"nodeType":"StructuredDocumentation","src":"3441:50:2","text":" @dev See {IERC721-getApproved}."},"functionSelector":"081812fc","id":522,"implemented":true,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"3505:11:2","nodeType":"FunctionDefinition","parameters":{"id":509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":508,"mutability":"mutable","name":"tokenId","nameLocation":"3525:7:2","nodeType":"VariableDeclaration","scope":522,"src":"3517:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":507,"name":"uint256","nodeType":"ElementaryTypeName","src":"3517:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3516:17:2"},"returnParameters":{"id":512,"nodeType":"ParameterList","parameters":[{"constant":false,"id":511,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":522,"src":"3563:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":510,"name":"address","nodeType":"ElementaryTypeName","src":"3563:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3562:9:2"},"scope":1241,"src":"3496:154:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1339],"body":{"id":537,"nodeType":"Block","src":"3792:69:2","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":531,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1588,"src":"3821:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3821:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":533,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"3835:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":534,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":527,"src":"3845:8:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":530,"name":"_setApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1211,"src":"3802:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3802:52:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":536,"nodeType":"ExpressionStatement","src":"3802:52:2"}]},"documentation":{"id":523,"nodeType":"StructuredDocumentation","src":"3656:56:2","text":" @dev See {IERC721-setApprovalForAll}."},"functionSelector":"a22cb465","id":538,"implemented":true,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"3726:17:2","nodeType":"FunctionDefinition","parameters":{"id":528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":525,"mutability":"mutable","name":"operator","nameLocation":"3752:8:2","nodeType":"VariableDeclaration","scope":538,"src":"3744:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":524,"name":"address","nodeType":"ElementaryTypeName","src":"3744:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":527,"mutability":"mutable","name":"approved","nameLocation":"3767:8:2","nodeType":"VariableDeclaration","scope":538,"src":"3762:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":526,"name":"bool","nodeType":"ElementaryTypeName","src":"3762:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3743:33:2"},"returnParameters":{"id":529,"nodeType":"ParameterList","parameters":[],"src":"3792:0:2"},"scope":1241,"src":"3717:144:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1357],"body":{"id":554,"nodeType":"Block","src":"4021:59:2","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":548,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"4038:18:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":550,"indexExpression":{"id":549,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":541,"src":"4057:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4038:25:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":552,"indexExpression":{"id":551,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":543,"src":"4064:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4038:35:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":547,"id":553,"nodeType":"Return","src":"4031:42:2"}]},"documentation":{"id":539,"nodeType":"StructuredDocumentation","src":"3867:55:2","text":" @dev See {IERC721-isApprovedForAll}."},"functionSelector":"e985e9c5","id":555,"implemented":true,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"3936:16:2","nodeType":"FunctionDefinition","parameters":{"id":544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":541,"mutability":"mutable","name":"owner","nameLocation":"3961:5:2","nodeType":"VariableDeclaration","scope":555,"src":"3953:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":540,"name":"address","nodeType":"ElementaryTypeName","src":"3953:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":543,"mutability":"mutable","name":"operator","nameLocation":"3976:8:2","nodeType":"VariableDeclaration","scope":555,"src":"3968:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":542,"name":"address","nodeType":"ElementaryTypeName","src":"3968:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3952:33:2"},"returnParameters":{"id":547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":546,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":555,"src":"4015:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":545,"name":"bool","nodeType":"ElementaryTypeName","src":"4015:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4014:6:2"},"scope":1241,"src":"3927:153:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1323],"body":{"id":600,"nodeType":"Block","src":"4222:498:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":565,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":560,"src":"4236:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4250:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":567,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4242:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":566,"name":"address","nodeType":"ElementaryTypeName","src":"4242:7:2","typeDescriptions":{}}},"id":569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4242:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4236:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":579,"nodeType":"IfStatement","src":"4232:87:2","trueBody":{"id":578,"nodeType":"Block","src":"4254:65:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4305:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":573,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4297:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":572,"name":"address","nodeType":"ElementaryTypeName","src":"4297:7:2","typeDescriptions":{}}},"id":575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4297:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":571,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"4275:21:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4275:33:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":577,"nodeType":"RevertStatement","src":"4268:40:2"}]}},{"assignments":[581],"declarations":[{"constant":false,"id":581,"mutability":"mutable","name":"previousOwner","nameLocation":"4545:13:2","nodeType":"VariableDeclaration","scope":600,"src":"4537:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":580,"name":"address","nodeType":"ElementaryTypeName","src":"4537:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":588,"initialValue":{"arguments":[{"id":583,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":560,"src":"4569:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":584,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":562,"src":"4573:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":585,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1588,"src":"4582:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4582:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":582,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":854,"src":"4561:7:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4561:34:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4537:58:2"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":589,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":581,"src":"4609:13:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":590,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":558,"src":"4626:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4609:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":599,"nodeType":"IfStatement","src":"4605:109:2","trueBody":{"id":598,"nodeType":"Block","src":"4632:82:2","statements":[{"errorCall":{"arguments":[{"id":593,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":558,"src":"4674:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":594,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":562,"src":"4680:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":595,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":581,"src":"4689:13:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":592,"name":"ERC721IncorrectOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":209,"src":"4653:20:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$_t_error_$","typeString":"function (address,uint256,address) pure returns (error)"}},"id":596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4653:50:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":597,"nodeType":"RevertStatement","src":"4646:57:2"}]}}]},"documentation":{"id":556,"nodeType":"StructuredDocumentation","src":"4086:51:2","text":" @dev See {IERC721-transferFrom}."},"functionSelector":"23b872dd","id":601,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"4151:12:2","nodeType":"FunctionDefinition","parameters":{"id":563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":558,"mutability":"mutable","name":"from","nameLocation":"4172:4:2","nodeType":"VariableDeclaration","scope":601,"src":"4164:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":557,"name":"address","nodeType":"ElementaryTypeName","src":"4164:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":560,"mutability":"mutable","name":"to","nameLocation":"4186:2:2","nodeType":"VariableDeclaration","scope":601,"src":"4178:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":559,"name":"address","nodeType":"ElementaryTypeName","src":"4178:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":562,"mutability":"mutable","name":"tokenId","nameLocation":"4198:7:2","nodeType":"VariableDeclaration","scope":601,"src":"4190:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":561,"name":"uint256","nodeType":"ElementaryTypeName","src":"4190:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4163:43:2"},"returnParameters":{"id":564,"nodeType":"ParameterList","parameters":[],"src":"4222:0:2"},"scope":1241,"src":"4142:578:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1313],"body":{"id":618,"nodeType":"Block","src":"4862:56:2","statements":[{"expression":{"arguments":[{"id":612,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":604,"src":"4889:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":613,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":606,"src":"4895:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":614,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":608,"src":"4899:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4908:2:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":611,"name":"safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[619,649],"referencedDeclaration":649,"src":"4872:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":616,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4872:39:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":617,"nodeType":"ExpressionStatement","src":"4872:39:2"}]},"documentation":{"id":602,"nodeType":"StructuredDocumentation","src":"4726:55:2","text":" @dev See {IERC721-safeTransferFrom}."},"functionSelector":"42842e0e","id":619,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"4795:16:2","nodeType":"FunctionDefinition","parameters":{"id":609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":604,"mutability":"mutable","name":"from","nameLocation":"4820:4:2","nodeType":"VariableDeclaration","scope":619,"src":"4812:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":603,"name":"address","nodeType":"ElementaryTypeName","src":"4812:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":606,"mutability":"mutable","name":"to","nameLocation":"4834:2:2","nodeType":"VariableDeclaration","scope":619,"src":"4826:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":605,"name":"address","nodeType":"ElementaryTypeName","src":"4826:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":608,"mutability":"mutable","name":"tokenId","nameLocation":"4846:7:2","nodeType":"VariableDeclaration","scope":619,"src":"4838:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":607,"name":"uint256","nodeType":"ElementaryTypeName","src":"4838:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4811:43:2"},"returnParameters":{"id":610,"nodeType":"ParameterList","parameters":[],"src":"4862:0:2"},"scope":1241,"src":"4786:132:2","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[1303],"body":{"id":648,"nodeType":"Block","src":"5087:130:2","statements":[{"expression":{"arguments":[{"id":632,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":622,"src":"5110:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":633,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":624,"src":"5116:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":634,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":626,"src":"5120:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":631,"name":"transferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":601,"src":"5097:12:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":635,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5097:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":636,"nodeType":"ExpressionStatement","src":"5097:31:2"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":640,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1588,"src":"5172:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5172:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":642,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":622,"src":"5186:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":643,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":624,"src":"5192:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":644,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":626,"src":"5196:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":645,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":628,"src":"5205:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":637,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1481,"src":"5138:11:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Utils_$1481_$","typeString":"type(library ERC721Utils)"}},"id":639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5150:21:2","memberName":"checkOnERC721Received","nodeType":"MemberAccess","referencedDeclaration":1480,"src":"5138:33:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory)"}},"id":646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5138:72:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":647,"nodeType":"ExpressionStatement","src":"5138:72:2"}]},"documentation":{"id":620,"nodeType":"StructuredDocumentation","src":"4924:55:2","text":" @dev See {IERC721-safeTransferFrom}."},"functionSelector":"b88d4fde","id":649,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"4993:16:2","nodeType":"FunctionDefinition","parameters":{"id":629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":622,"mutability":"mutable","name":"from","nameLocation":"5018:4:2","nodeType":"VariableDeclaration","scope":649,"src":"5010:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":621,"name":"address","nodeType":"ElementaryTypeName","src":"5010:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":624,"mutability":"mutable","name":"to","nameLocation":"5032:2:2","nodeType":"VariableDeclaration","scope":649,"src":"5024:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":623,"name":"address","nodeType":"ElementaryTypeName","src":"5024:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":626,"mutability":"mutable","name":"tokenId","nameLocation":"5044:7:2","nodeType":"VariableDeclaration","scope":649,"src":"5036:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":625,"name":"uint256","nodeType":"ElementaryTypeName","src":"5036:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":628,"mutability":"mutable","name":"data","nameLocation":"5066:4:2","nodeType":"VariableDeclaration","scope":649,"src":"5053:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":627,"name":"bytes","nodeType":"ElementaryTypeName","src":"5053:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5009:62:2"},"returnParameters":{"id":630,"nodeType":"ParameterList","parameters":[],"src":"5087:0:2"},"scope":1241,"src":"4984:233:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":661,"nodeType":"Block","src":"5807:40:2","statements":[{"expression":{"baseExpression":{"id":657,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":323,"src":"5824:7:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":659,"indexExpression":{"id":658,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":652,"src":"5832:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5824:16:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":656,"id":660,"nodeType":"Return","src":"5817:23:2"}]},"documentation":{"id":650,"nodeType":"StructuredDocumentation","src":"5223:504:2","text":" @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n core ERC-721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`."},"id":662,"implemented":true,"kind":"function","modifiers":[],"name":"_ownerOf","nameLocation":"5741:8:2","nodeType":"FunctionDefinition","parameters":{"id":653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":652,"mutability":"mutable","name":"tokenId","nameLocation":"5758:7:2","nodeType":"VariableDeclaration","scope":662,"src":"5750:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":651,"name":"uint256","nodeType":"ElementaryTypeName","src":"5750:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5749:17:2"},"returnParameters":{"id":656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":655,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":662,"src":"5798:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":654,"name":"address","nodeType":"ElementaryTypeName","src":"5798:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5797:9:2"},"scope":1241,"src":"5732:115:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":674,"nodeType":"Block","src":"6042:48:2","statements":[{"expression":{"baseExpression":{"id":670,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":331,"src":"6059:15:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":672,"indexExpression":{"id":671,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":665,"src":"6075:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6059:24:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":669,"id":673,"nodeType":"Return","src":"6052:31:2"}]},"documentation":{"id":663,"nodeType":"StructuredDocumentation","src":"5853:105:2","text":" @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted."},"id":675,"implemented":true,"kind":"function","modifiers":[],"name":"_getApproved","nameLocation":"5972:12:2","nodeType":"FunctionDefinition","parameters":{"id":666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":665,"mutability":"mutable","name":"tokenId","nameLocation":"5993:7:2","nodeType":"VariableDeclaration","scope":675,"src":"5985:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":664,"name":"uint256","nodeType":"ElementaryTypeName","src":"5985:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5984:17:2"},"returnParameters":{"id":669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":668,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":675,"src":"6033:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":667,"name":"address","nodeType":"ElementaryTypeName","src":"6033:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6032:9:2"},"scope":1241,"src":"5963:127:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":710,"nodeType":"Block","src":"6510:163:2","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":687,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":680,"src":"6539:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6558:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":689,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6550:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":688,"name":"address","nodeType":"ElementaryTypeName","src":"6550:7:2","typeDescriptions":{}}},"id":691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6550:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6539:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":693,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":678,"src":"6577:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":694,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":680,"src":"6586:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6577:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":697,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":678,"src":"6614:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":698,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":680,"src":"6621:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":696,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":555,"src":"6597:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6597:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6577:52:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":702,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"6646:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":701,"name":"_getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":675,"src":"6633:12:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":703,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6633:21:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":704,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":680,"src":"6658:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6633:32:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6577:88:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":707,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6576:90:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6539:127:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":686,"id":709,"nodeType":"Return","src":"6520:146:2"}]},"documentation":{"id":676,"nodeType":"StructuredDocumentation","src":"6096:300:2","text":" @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n particular (ignoring whether it is owned by `owner`).\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."},"id":711,"implemented":true,"kind":"function","modifiers":[],"name":"_isAuthorized","nameLocation":"6410:13:2","nodeType":"FunctionDefinition","parameters":{"id":683,"nodeType":"ParameterList","parameters":[{"constant":false,"id":678,"mutability":"mutable","name":"owner","nameLocation":"6432:5:2","nodeType":"VariableDeclaration","scope":711,"src":"6424:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":677,"name":"address","nodeType":"ElementaryTypeName","src":"6424:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":680,"mutability":"mutable","name":"spender","nameLocation":"6447:7:2","nodeType":"VariableDeclaration","scope":711,"src":"6439:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":679,"name":"address","nodeType":"ElementaryTypeName","src":"6439:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":682,"mutability":"mutable","name":"tokenId","nameLocation":"6464:7:2","nodeType":"VariableDeclaration","scope":711,"src":"6456:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":681,"name":"uint256","nodeType":"ElementaryTypeName","src":"6456:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6423:49:2"},"returnParameters":{"id":686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":685,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":711,"src":"6504:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":684,"name":"bool","nodeType":"ElementaryTypeName","src":"6504:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6503:6:2"},"scope":1241,"src":"6401:272:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":747,"nodeType":"Block","src":"7202:271:2","statements":[{"condition":{"id":726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7216:39:2","subExpression":{"arguments":[{"id":722,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":714,"src":"7231:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":723,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":716,"src":"7238:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":724,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":718,"src":"7247:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":721,"name":"_isAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":711,"src":"7217:13:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) view returns (bool)"}},"id":725,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7217:38:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":746,"nodeType":"IfStatement","src":"7212:255:2","trueBody":{"id":745,"nodeType":"Block","src":"7257:210:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":727,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":714,"src":"7275:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7292:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":729,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7284:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":728,"name":"address","nodeType":"ElementaryTypeName","src":"7284:7:2","typeDescriptions":{}}},"id":731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7284:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7275:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":743,"nodeType":"Block","src":"7373:84:2","statements":[{"errorCall":{"arguments":[{"id":739,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":716,"src":"7425:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":740,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":718,"src":"7434:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":738,"name":"ERC721InsufficientApproval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":226,"src":"7398:26:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$returns$_t_error_$","typeString":"function (address,uint256) pure returns (error)"}},"id":741,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7398:44:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":742,"nodeType":"RevertStatement","src":"7391:51:2"}]},"id":744,"nodeType":"IfStatement","src":"7271:186:2","trueBody":{"id":737,"nodeType":"Block","src":"7296:71:2","statements":[{"errorCall":{"arguments":[{"id":734,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":718,"src":"7344:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":733,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":200,"src":"7321:22:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":735,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7321:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":736,"nodeType":"RevertStatement","src":"7314:38:2"}]}}]}}]},"documentation":{"id":712,"nodeType":"StructuredDocumentation","src":"6679:421:2","text":" @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n Reverts if:\n - `spender` does not have approval from `owner` for `tokenId`.\n - `spender` does not have approval to manage all of `owner`'s assets.\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."},"id":748,"implemented":true,"kind":"function","modifiers":[],"name":"_checkAuthorized","nameLocation":"7114:16:2","nodeType":"FunctionDefinition","parameters":{"id":719,"nodeType":"ParameterList","parameters":[{"constant":false,"id":714,"mutability":"mutable","name":"owner","nameLocation":"7139:5:2","nodeType":"VariableDeclaration","scope":748,"src":"7131:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":713,"name":"address","nodeType":"ElementaryTypeName","src":"7131:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":716,"mutability":"mutable","name":"spender","nameLocation":"7154:7:2","nodeType":"VariableDeclaration","scope":748,"src":"7146:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":715,"name":"address","nodeType":"ElementaryTypeName","src":"7146:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":718,"mutability":"mutable","name":"tokenId","nameLocation":"7171:7:2","nodeType":"VariableDeclaration","scope":748,"src":"7163:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":717,"name":"uint256","nodeType":"ElementaryTypeName","src":"7163:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7130:49:2"},"returnParameters":{"id":720,"nodeType":"ParameterList","parameters":[],"src":"7202:0:2"},"scope":1241,"src":"7105:368:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":763,"nodeType":"Block","src":"8190:78:2","statements":[{"id":762,"nodeType":"UncheckedBlock","src":"8200:62:2","statements":[{"expression":{"id":760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":756,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"8224:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":758,"indexExpression":{"id":757,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":751,"src":"8234:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8224:18:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":759,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":753,"src":"8246:5:2","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"8224:27:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":761,"nodeType":"ExpressionStatement","src":"8224:27:2"}]}]},"documentation":{"id":749,"nodeType":"StructuredDocumentation","src":"7479:631:2","text":" @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n remain consistent with one another."},"id":764,"implemented":true,"kind":"function","modifiers":[],"name":"_increaseBalance","nameLocation":"8124:16:2","nodeType":"FunctionDefinition","parameters":{"id":754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":751,"mutability":"mutable","name":"account","nameLocation":"8149:7:2","nodeType":"VariableDeclaration","scope":764,"src":"8141:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":750,"name":"address","nodeType":"ElementaryTypeName","src":"8141:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":753,"mutability":"mutable","name":"value","nameLocation":"8166:5:2","nodeType":"VariableDeclaration","scope":764,"src":"8158:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":752,"name":"uint128","nodeType":"ElementaryTypeName","src":"8158:7:2","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"8140:32:2"},"returnParameters":{"id":755,"nodeType":"ParameterList","parameters":[],"src":"8190:0:2"},"scope":1241,"src":"8115:153:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":853,"nodeType":"Block","src":"8956:700:2","statements":[{"assignments":[777],"declarations":[{"constant":false,"id":777,"mutability":"mutable","name":"from","nameLocation":"8974:4:2","nodeType":"VariableDeclaration","scope":853,"src":"8966:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":776,"name":"address","nodeType":"ElementaryTypeName","src":"8966:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":781,"initialValue":{"arguments":[{"id":779,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":769,"src":"8990:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":778,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":662,"src":"8981:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":780,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8981:17:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"8966:32:2"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":782,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":771,"src":"9058:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9074:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":784,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9066:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":783,"name":"address","nodeType":"ElementaryTypeName","src":"9066:7:2","typeDescriptions":{}}},"id":786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9066:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9058:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":795,"nodeType":"IfStatement","src":"9054:86:2","trueBody":{"id":794,"nodeType":"Block","src":"9078:62:2","statements":[{"expression":{"arguments":[{"id":789,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"9109:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":790,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":771,"src":"9115:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":791,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":769,"src":"9121:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":788,"name":"_checkAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":748,"src":"9092:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256) view"}},"id":792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9092:37:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":793,"nodeType":"ExpressionStatement","src":"9092:37:2"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":796,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"9184:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9200:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":798,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9192:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":797,"name":"address","nodeType":"ElementaryTypeName","src":"9192:7:2","typeDescriptions":{}}},"id":800,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9192:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9184:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":823,"nodeType":"IfStatement","src":"9180:256:2","trueBody":{"id":822,"nodeType":"Block","src":"9204:232:2","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9317:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":804,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9309:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":803,"name":"address","nodeType":"ElementaryTypeName","src":"9309:7:2","typeDescriptions":{}}},"id":806,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9309:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":807,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":769,"src":"9321:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9338:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":809,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9330:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":808,"name":"address","nodeType":"ElementaryTypeName","src":"9330:7:2","typeDescriptions":{}}},"id":811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9330:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"66616c7365","id":812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9342:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":802,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1108,1174],"referencedDeclaration":1174,"src":"9300:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,uint256,address,bool)"}},"id":813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9300:48:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":814,"nodeType":"ExpressionStatement","src":"9300:48:2"},{"id":821,"nodeType":"UncheckedBlock","src":"9363:63:2","statements":[{"expression":{"id":819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":815,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"9391:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":817,"indexExpression":{"id":816,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"9401:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9391:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9410:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9391:20:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":820,"nodeType":"ExpressionStatement","src":"9391:20:2"}]}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":824,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":767,"src":"9450:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9464:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":826,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9456:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":825,"name":"address","nodeType":"ElementaryTypeName","src":"9456:7:2","typeDescriptions":{}}},"id":828,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9456:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9450:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":838,"nodeType":"IfStatement","src":"9446:107:2","trueBody":{"id":837,"nodeType":"Block","src":"9468:85:2","statements":[{"id":836,"nodeType":"UncheckedBlock","src":"9482:61:2","statements":[{"expression":{"id":834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":830,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"9510:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":832,"indexExpression":{"id":831,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":767,"src":"9520:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9510:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9527:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9510:18:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":835,"nodeType":"ExpressionStatement","src":"9510:18:2"}]}]}},{"expression":{"id":843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":839,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":323,"src":"9563:7:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":841,"indexExpression":{"id":840,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":769,"src":"9571:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9563:16:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":842,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":767,"src":"9582:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9563:21:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":844,"nodeType":"ExpressionStatement","src":"9563:21:2"},{"eventCall":{"arguments":[{"id":846,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"9609:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":847,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":767,"src":"9615:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":848,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":769,"src":"9619:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":845,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1257,"src":"9600:8:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9600:27:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":850,"nodeType":"EmitStatement","src":"9595:32:2"},{"expression":{"id":851,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"9645:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":775,"id":852,"nodeType":"Return","src":"9638:11:2"}]},"documentation":{"id":765,"nodeType":"StructuredDocumentation","src":"8274:582:2","text":" @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n The `auth` argument is optional. If the value passed is non 0, then this function will check that\n `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n Emits a {Transfer} event.\n NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}."},"id":854,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"8870:7:2","nodeType":"FunctionDefinition","parameters":{"id":772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":767,"mutability":"mutable","name":"to","nameLocation":"8886:2:2","nodeType":"VariableDeclaration","scope":854,"src":"8878:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":766,"name":"address","nodeType":"ElementaryTypeName","src":"8878:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":769,"mutability":"mutable","name":"tokenId","nameLocation":"8898:7:2","nodeType":"VariableDeclaration","scope":854,"src":"8890:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":768,"name":"uint256","nodeType":"ElementaryTypeName","src":"8890:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":771,"mutability":"mutable","name":"auth","nameLocation":"8915:4:2","nodeType":"VariableDeclaration","scope":854,"src":"8907:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":770,"name":"address","nodeType":"ElementaryTypeName","src":"8907:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8877:43:2"},"returnParameters":{"id":775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":774,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":854,"src":"8947:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":773,"name":"address","nodeType":"ElementaryTypeName","src":"8947:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8946:9:2"},"scope":1241,"src":"8861:795:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":903,"nodeType":"Block","src":"10031:274:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":862,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":857,"src":"10045:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10059:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":864,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10051:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":863,"name":"address","nodeType":"ElementaryTypeName","src":"10051:7:2","typeDescriptions":{}}},"id":866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10051:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10045:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":876,"nodeType":"IfStatement","src":"10041:87:2","trueBody":{"id":875,"nodeType":"Block","src":"10063:65:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10114:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":870,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10106:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":869,"name":"address","nodeType":"ElementaryTypeName","src":"10106:7:2","typeDescriptions":{}}},"id":872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10106:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":868,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"10084:21:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":873,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10084:33:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":874,"nodeType":"RevertStatement","src":"10077:40:2"}]}},{"assignments":[878],"declarations":[{"constant":false,"id":878,"mutability":"mutable","name":"previousOwner","nameLocation":"10145:13:2","nodeType":"VariableDeclaration","scope":903,"src":"10137:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":877,"name":"address","nodeType":"ElementaryTypeName","src":"10137:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":887,"initialValue":{"arguments":[{"id":880,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":857,"src":"10169:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":881,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":859,"src":"10173:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10190:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":883,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10182:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":882,"name":"address","nodeType":"ElementaryTypeName","src":"10182:7:2","typeDescriptions":{}}},"id":885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10182:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":879,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":854,"src":"10161:7:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":886,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10161:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"10137:56:2"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":888,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":878,"src":"10207:13:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10232:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":890,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10224:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":889,"name":"address","nodeType":"ElementaryTypeName","src":"10224:7:2","typeDescriptions":{}}},"id":892,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10224:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10207:27:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":902,"nodeType":"IfStatement","src":"10203:96:2","trueBody":{"id":901,"nodeType":"Block","src":"10236:63:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10285:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":896,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10277:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":895,"name":"address","nodeType":"ElementaryTypeName","src":"10277:7:2","typeDescriptions":{}}},"id":898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10277:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":894,"name":"ERC721InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"10257:19:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10257:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":900,"nodeType":"RevertStatement","src":"10250:38:2"}]}}]},"documentation":{"id":855,"nodeType":"StructuredDocumentation","src":"9662:311:2","text":" @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."},"id":904,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"9987:5:2","nodeType":"FunctionDefinition","parameters":{"id":860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":857,"mutability":"mutable","name":"to","nameLocation":"10001:2:2","nodeType":"VariableDeclaration","scope":904,"src":"9993:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":856,"name":"address","nodeType":"ElementaryTypeName","src":"9993:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":859,"mutability":"mutable","name":"tokenId","nameLocation":"10013:7:2","nodeType":"VariableDeclaration","scope":904,"src":"10005:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":858,"name":"uint256","nodeType":"ElementaryTypeName","src":"10005:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9992:29:2"},"returnParameters":{"id":861,"nodeType":"ParameterList","parameters":[],"src":"10031:0:2"},"scope":1241,"src":"9978:327:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":918,"nodeType":"Block","src":"10713:43:2","statements":[{"expression":{"arguments":[{"id":913,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":907,"src":"10733:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":914,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":909,"src":"10737:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":915,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10746:2:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":912,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[919,949],"referencedDeclaration":949,"src":"10723:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,bytes memory)"}},"id":916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10723:26:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":917,"nodeType":"ExpressionStatement","src":"10723:26:2"}]},"documentation":{"id":905,"nodeType":"StructuredDocumentation","src":"10311:340:2","text":" @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":919,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"10665:9:2","nodeType":"FunctionDefinition","parameters":{"id":910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":907,"mutability":"mutable","name":"to","nameLocation":"10683:2:2","nodeType":"VariableDeclaration","scope":919,"src":"10675:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":906,"name":"address","nodeType":"ElementaryTypeName","src":"10675:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":909,"mutability":"mutable","name":"tokenId","nameLocation":"10695:7:2","nodeType":"VariableDeclaration","scope":919,"src":"10687:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":908,"name":"uint256","nodeType":"ElementaryTypeName","src":"10687:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10674:29:2"},"returnParameters":{"id":911,"nodeType":"ParameterList","parameters":[],"src":"10713:0:2"},"scope":1241,"src":"10656:100:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":948,"nodeType":"Block","src":"11061:123:2","statements":[{"expression":{"arguments":[{"id":930,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":922,"src":"11077:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":931,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":924,"src":"11081:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":929,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":904,"src":"11071:5:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":932,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11071:18:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":933,"nodeType":"ExpressionStatement","src":"11071:18:2"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":937,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1588,"src":"11133:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":938,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11133:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11155:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":940,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11147:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":939,"name":"address","nodeType":"ElementaryTypeName","src":"11147:7:2","typeDescriptions":{}}},"id":942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11147:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":943,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":922,"src":"11159:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":944,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":924,"src":"11163:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":945,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":926,"src":"11172:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":934,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1481,"src":"11099:11:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Utils_$1481_$","typeString":"type(library ERC721Utils)"}},"id":936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11111:21:2","memberName":"checkOnERC721Received","nodeType":"MemberAccess","referencedDeclaration":1480,"src":"11099:33:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory)"}},"id":946,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11099:78:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":947,"nodeType":"ExpressionStatement","src":"11099:78:2"}]},"documentation":{"id":920,"nodeType":"StructuredDocumentation","src":"10762:210:2","text":" @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."},"id":949,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"10986:9:2","nodeType":"FunctionDefinition","parameters":{"id":927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":922,"mutability":"mutable","name":"to","nameLocation":"11004:2:2","nodeType":"VariableDeclaration","scope":949,"src":"10996:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":921,"name":"address","nodeType":"ElementaryTypeName","src":"10996:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":924,"mutability":"mutable","name":"tokenId","nameLocation":"11016:7:2","nodeType":"VariableDeclaration","scope":949,"src":"11008:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":923,"name":"uint256","nodeType":"ElementaryTypeName","src":"11008:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":926,"mutability":"mutable","name":"data","nameLocation":"11038:4:2","nodeType":"VariableDeclaration","scope":949,"src":"11025:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":925,"name":"bytes","nodeType":"ElementaryTypeName","src":"11025:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10995:48:2"},"returnParameters":{"id":928,"nodeType":"ParameterList","parameters":[],"src":"11061:0:2"},"scope":1241,"src":"10977:207:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":981,"nodeType":"Block","src":"11551:186:2","statements":[{"assignments":[956],"declarations":[{"constant":false,"id":956,"mutability":"mutable","name":"previousOwner","nameLocation":"11569:13:2","nodeType":"VariableDeclaration","scope":981,"src":"11561:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":955,"name":"address","nodeType":"ElementaryTypeName","src":"11561:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":968,"initialValue":{"arguments":[{"arguments":[{"hexValue":"30","id":960,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11601:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":959,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11593:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":958,"name":"address","nodeType":"ElementaryTypeName","src":"11593:7:2","typeDescriptions":{}}},"id":961,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11593:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":962,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":952,"src":"11605:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":965,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11622:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":964,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11614:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":963,"name":"address","nodeType":"ElementaryTypeName","src":"11614:7:2","typeDescriptions":{}}},"id":966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11614:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":957,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":854,"src":"11585:7:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":967,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11585:40:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"11561:64:2"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":969,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":956,"src":"11639:13:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11664:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":971,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11656:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":970,"name":"address","nodeType":"ElementaryTypeName","src":"11656:7:2","typeDescriptions":{}}},"id":973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11656:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11639:27:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":980,"nodeType":"IfStatement","src":"11635:96:2","trueBody":{"id":979,"nodeType":"Block","src":"11668:63:2","statements":[{"errorCall":{"arguments":[{"id":976,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":952,"src":"11712:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":975,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":200,"src":"11689:22:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":977,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11689:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":978,"nodeType":"RevertStatement","src":"11682:38:2"}]}}]},"documentation":{"id":950,"nodeType":"StructuredDocumentation","src":"11190:315:2","text":" @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."},"id":982,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"11519:5:2","nodeType":"FunctionDefinition","parameters":{"id":953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":952,"mutability":"mutable","name":"tokenId","nameLocation":"11533:7:2","nodeType":"VariableDeclaration","scope":982,"src":"11525:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":951,"name":"uint256","nodeType":"ElementaryTypeName","src":"11525:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11524:17:2"},"returnParameters":{"id":954,"nodeType":"ParameterList","parameters":[],"src":"11551:0:2"},"scope":1241,"src":"11510:227:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1041,"nodeType":"Block","src":"12132:389:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":992,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":987,"src":"12146:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":995,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12160:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":994,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12152:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":993,"name":"address","nodeType":"ElementaryTypeName","src":"12152:7:2","typeDescriptions":{}}},"id":996,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12152:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12146:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1006,"nodeType":"IfStatement","src":"12142:87:2","trueBody":{"id":1005,"nodeType":"Block","src":"12164:65:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12215:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1000,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12207:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":999,"name":"address","nodeType":"ElementaryTypeName","src":"12207:7:2","typeDescriptions":{}}},"id":1002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12207:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":998,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"12185:21:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1003,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12185:33:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1004,"nodeType":"RevertStatement","src":"12178:40:2"}]}},{"assignments":[1008],"declarations":[{"constant":false,"id":1008,"mutability":"mutable","name":"previousOwner","nameLocation":"12246:13:2","nodeType":"VariableDeclaration","scope":1041,"src":"12238:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1007,"name":"address","nodeType":"ElementaryTypeName","src":"12238:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1017,"initialValue":{"arguments":[{"id":1010,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":987,"src":"12270:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1011,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":989,"src":"12274:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":1014,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12291:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1013,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12283:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1012,"name":"address","nodeType":"ElementaryTypeName","src":"12283:7:2","typeDescriptions":{}}},"id":1015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12283:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1009,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":854,"src":"12262:7:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":1016,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12262:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"12238:56:2"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1018,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1008,"src":"12308:13:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12333:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1020,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12325:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1019,"name":"address","nodeType":"ElementaryTypeName","src":"12325:7:2","typeDescriptions":{}}},"id":1022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12325:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12308:27:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1029,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1008,"src":"12410:13:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1030,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":985,"src":"12427:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12410:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1039,"nodeType":"IfStatement","src":"12406:109:2","trueBody":{"id":1038,"nodeType":"Block","src":"12433:82:2","statements":[{"errorCall":{"arguments":[{"id":1033,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":985,"src":"12475:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1034,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":989,"src":"12481:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1035,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1008,"src":"12490:13:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1032,"name":"ERC721IncorrectOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":209,"src":"12454:20:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$_t_error_$","typeString":"function (address,uint256,address) pure returns (error)"}},"id":1036,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12454:50:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1037,"nodeType":"RevertStatement","src":"12447:57:2"}]}},"id":1040,"nodeType":"IfStatement","src":"12304:211:2","trueBody":{"id":1028,"nodeType":"Block","src":"12337:63:2","statements":[{"errorCall":{"arguments":[{"id":1025,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":989,"src":"12381:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1024,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":200,"src":"12358:22:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":1026,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12358:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1027,"nodeType":"RevertStatement","src":"12351:38:2"}]}}]},"documentation":{"id":983,"nodeType":"StructuredDocumentation","src":"11743:313:2","text":" @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."},"id":1042,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"12070:9:2","nodeType":"FunctionDefinition","parameters":{"id":990,"nodeType":"ParameterList","parameters":[{"constant":false,"id":985,"mutability":"mutable","name":"from","nameLocation":"12088:4:2","nodeType":"VariableDeclaration","scope":1042,"src":"12080:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":984,"name":"address","nodeType":"ElementaryTypeName","src":"12080:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":987,"mutability":"mutable","name":"to","nameLocation":"12102:2:2","nodeType":"VariableDeclaration","scope":1042,"src":"12094:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":986,"name":"address","nodeType":"ElementaryTypeName","src":"12094:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":989,"mutability":"mutable","name":"tokenId","nameLocation":"12114:7:2","nodeType":"VariableDeclaration","scope":1042,"src":"12106:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":988,"name":"uint256","nodeType":"ElementaryTypeName","src":"12106:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12079:43:2"},"returnParameters":{"id":991,"nodeType":"ParameterList","parameters":[],"src":"12132:0:2"},"scope":1241,"src":"12061:460:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1059,"nodeType":"Block","src":"13530:53:2","statements":[{"expression":{"arguments":[{"id":1053,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1045,"src":"13554:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1054,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1047,"src":"13560:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1055,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1049,"src":"13564:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":1056,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13573:2:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1052,"name":"_safeTransfer","nodeType":"Identifier","overloadedDeclarations":[1060,1090],"referencedDeclaration":1090,"src":"13540:13:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":1057,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13540:36:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1058,"nodeType":"ExpressionStatement","src":"13540:36:2"}]},"documentation":{"id":1043,"nodeType":"StructuredDocumentation","src":"12527:923:2","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n are aware of the ERC-721 standard to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is like {safeTransferFrom} in the sense that it invokes\n {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `tokenId` token must exist and be owned by `from`.\n - `to` cannot be the zero address.\n - `from` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":1060,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nameLocation":"13464:13:2","nodeType":"FunctionDefinition","parameters":{"id":1050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1045,"mutability":"mutable","name":"from","nameLocation":"13486:4:2","nodeType":"VariableDeclaration","scope":1060,"src":"13478:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1044,"name":"address","nodeType":"ElementaryTypeName","src":"13478:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1047,"mutability":"mutable","name":"to","nameLocation":"13500:2:2","nodeType":"VariableDeclaration","scope":1060,"src":"13492:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1046,"name":"address","nodeType":"ElementaryTypeName","src":"13492:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1049,"mutability":"mutable","name":"tokenId","nameLocation":"13512:7:2","nodeType":"VariableDeclaration","scope":1060,"src":"13504:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1048,"name":"uint256","nodeType":"ElementaryTypeName","src":"13504:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13477:43:2"},"returnParameters":{"id":1051,"nodeType":"ParameterList","parameters":[],"src":"13530:0:2"},"scope":1241,"src":"13455:128:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1089,"nodeType":"Block","src":"13922:127:2","statements":[{"expression":{"arguments":[{"id":1073,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1063,"src":"13942:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1074,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1065,"src":"13948:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1075,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1067,"src":"13952:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1072,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1042,"src":"13932:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13932:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1077,"nodeType":"ExpressionStatement","src":"13932:28:2"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1081,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1588,"src":"14004:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1082,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14004:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1083,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1063,"src":"14018:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1084,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1065,"src":"14024:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1085,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1067,"src":"14028:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1086,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1069,"src":"14037:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1078,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1481,"src":"13970:11:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Utils_$1481_$","typeString":"type(library ERC721Utils)"}},"id":1080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13982:21:2","memberName":"checkOnERC721Received","nodeType":"MemberAccess","referencedDeclaration":1480,"src":"13970:33:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory)"}},"id":1087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13970:72:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1088,"nodeType":"ExpressionStatement","src":"13970:72:2"}]},"documentation":{"id":1061,"nodeType":"StructuredDocumentation","src":"13589:226:2","text":" @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."},"id":1090,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nameLocation":"13829:13:2","nodeType":"FunctionDefinition","parameters":{"id":1070,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1063,"mutability":"mutable","name":"from","nameLocation":"13851:4:2","nodeType":"VariableDeclaration","scope":1090,"src":"13843:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1062,"name":"address","nodeType":"ElementaryTypeName","src":"13843:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1065,"mutability":"mutable","name":"to","nameLocation":"13865:2:2","nodeType":"VariableDeclaration","scope":1090,"src":"13857:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1064,"name":"address","nodeType":"ElementaryTypeName","src":"13857:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1067,"mutability":"mutable","name":"tokenId","nameLocation":"13877:7:2","nodeType":"VariableDeclaration","scope":1090,"src":"13869:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1066,"name":"uint256","nodeType":"ElementaryTypeName","src":"13869:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1069,"mutability":"mutable","name":"data","nameLocation":"13899:4:2","nodeType":"VariableDeclaration","scope":1090,"src":"13886:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1068,"name":"bytes","nodeType":"ElementaryTypeName","src":"13886:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"13842:62:2"},"returnParameters":{"id":1071,"nodeType":"ParameterList","parameters":[],"src":"13922:0:2"},"scope":1241,"src":"13820:229:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1107,"nodeType":"Block","src":"14562:50:2","statements":[{"expression":{"arguments":[{"id":1101,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1093,"src":"14581:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1102,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1095,"src":"14585:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1103,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1097,"src":"14594:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"74727565","id":1104,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14600:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1100,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1108,1174],"referencedDeclaration":1174,"src":"14572:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,uint256,address,bool)"}},"id":1105,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14572:33:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1106,"nodeType":"ExpressionStatement","src":"14572:33:2"}]},"documentation":{"id":1091,"nodeType":"StructuredDocumentation","src":"14055:432:2","text":" @dev Approve `to` to operate on `tokenId`\n The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n either the owner of the token, or approved to operate on all tokens held by this owner.\n Emits an {Approval} event.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":1108,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"14501:8:2","nodeType":"FunctionDefinition","parameters":{"id":1098,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1093,"mutability":"mutable","name":"to","nameLocation":"14518:2:2","nodeType":"VariableDeclaration","scope":1108,"src":"14510:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1092,"name":"address","nodeType":"ElementaryTypeName","src":"14510:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1095,"mutability":"mutable","name":"tokenId","nameLocation":"14530:7:2","nodeType":"VariableDeclaration","scope":1108,"src":"14522:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1094,"name":"uint256","nodeType":"ElementaryTypeName","src":"14522:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1097,"mutability":"mutable","name":"auth","nameLocation":"14547:4:2","nodeType":"VariableDeclaration","scope":1108,"src":"14539:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1096,"name":"address","nodeType":"ElementaryTypeName","src":"14539:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14509:43:2"},"returnParameters":{"id":1099,"nodeType":"ParameterList","parameters":[],"src":"14562:0:2"},"scope":1241,"src":"14492:120:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1173,"nodeType":"Block","src":"14888:568:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1120,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1117,"src":"14954:9:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1121,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1115,"src":"14967:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14983:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1123,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14975:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1122,"name":"address","nodeType":"ElementaryTypeName","src":"14975:7:2","typeDescriptions":{}}},"id":1125,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14975:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14967:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14954:31:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1166,"nodeType":"IfStatement","src":"14950:460:2","trueBody":{"id":1165,"nodeType":"Block","src":"14987:423:2","statements":[{"assignments":[1129],"declarations":[{"constant":false,"id":1129,"mutability":"mutable","name":"owner","nameLocation":"15009:5:2","nodeType":"VariableDeclaration","scope":1165,"src":"15001:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1128,"name":"address","nodeType":"ElementaryTypeName","src":"15001:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1133,"initialValue":{"arguments":[{"id":1131,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1113,"src":"15031:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1130,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1240,"src":"15017:13:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15017:22:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"15001:38:2"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1134,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1115,"src":"15167:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15183:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1136,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15175:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1135,"name":"address","nodeType":"ElementaryTypeName","src":"15175:7:2","typeDescriptions":{}}},"id":1138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15175:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15167:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1140,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1129,"src":"15189:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1141,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1115,"src":"15198:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15189:13:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15167:35:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":1148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"15206:30:2","subExpression":{"arguments":[{"id":1145,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1129,"src":"15224:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1146,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1115,"src":"15231:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1144,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":555,"src":"15207:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":1147,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15207:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15167:69:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1155,"nodeType":"IfStatement","src":"15163:142:2","trueBody":{"id":1154,"nodeType":"Block","src":"15238:67:2","statements":[{"errorCall":{"arguments":[{"id":1151,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1115,"src":"15285:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1150,"name":"ERC721InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":231,"src":"15263:21:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1152,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15263:27:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1153,"nodeType":"RevertStatement","src":"15256:34:2"}]}},{"condition":{"id":1156,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1117,"src":"15323:9:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1164,"nodeType":"IfStatement","src":"15319:81:2","trueBody":{"id":1163,"nodeType":"Block","src":"15334:66:2","statements":[{"eventCall":{"arguments":[{"id":1158,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1129,"src":"15366:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1159,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1111,"src":"15373:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1160,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1113,"src":"15377:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1157,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"15357:8:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15357:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1162,"nodeType":"EmitStatement","src":"15352:33:2"}]}}]}},{"expression":{"id":1171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1167,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":331,"src":"15420:15:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1169,"indexExpression":{"id":1168,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1113,"src":"15436:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15420:24:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1170,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1111,"src":"15447:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15420:29:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1172,"nodeType":"ExpressionStatement","src":"15420:29:2"}]},"documentation":{"id":1109,"nodeType":"StructuredDocumentation","src":"14618:171:2","text":" @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n emitted in the context of transfers."},"id":1174,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"14803:8:2","nodeType":"FunctionDefinition","parameters":{"id":1118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1111,"mutability":"mutable","name":"to","nameLocation":"14820:2:2","nodeType":"VariableDeclaration","scope":1174,"src":"14812:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1110,"name":"address","nodeType":"ElementaryTypeName","src":"14812:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1113,"mutability":"mutable","name":"tokenId","nameLocation":"14832:7:2","nodeType":"VariableDeclaration","scope":1174,"src":"14824:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1112,"name":"uint256","nodeType":"ElementaryTypeName","src":"14824:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1115,"mutability":"mutable","name":"auth","nameLocation":"14849:4:2","nodeType":"VariableDeclaration","scope":1174,"src":"14841:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1114,"name":"address","nodeType":"ElementaryTypeName","src":"14841:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1117,"mutability":"mutable","name":"emitEvent","nameLocation":"14860:9:2","nodeType":"VariableDeclaration","scope":1174,"src":"14855:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1116,"name":"bool","nodeType":"ElementaryTypeName","src":"14855:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"14811:59:2"},"returnParameters":{"id":1119,"nodeType":"ParameterList","parameters":[],"src":"14888:0:2"},"scope":1241,"src":"14794:662:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1210,"nodeType":"Block","src":"15758:219:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1184,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1179,"src":"15772:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15792:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1186,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15784:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1185,"name":"address","nodeType":"ElementaryTypeName","src":"15784:7:2","typeDescriptions":{}}},"id":1188,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15784:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15772:22:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1195,"nodeType":"IfStatement","src":"15768:91:2","trueBody":{"id":1194,"nodeType":"Block","src":"15796:63:2","statements":[{"errorCall":{"arguments":[{"id":1191,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1179,"src":"15839:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1190,"name":"ERC721InvalidOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":236,"src":"15817:21:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1192,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15817:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1193,"nodeType":"RevertStatement","src":"15810:38:2"}]}},{"expression":{"id":1202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1196,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"15868:18:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":1199,"indexExpression":{"id":1197,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1177,"src":"15887:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15868:25:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1200,"indexExpression":{"id":1198,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1179,"src":"15894:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15868:35:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1201,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1181,"src":"15906:8:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15868:46:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1203,"nodeType":"ExpressionStatement","src":"15868:46:2"},{"eventCall":{"arguments":[{"id":1205,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1177,"src":"15944:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1206,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1179,"src":"15951:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1207,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1181,"src":"15961:8:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1204,"name":"ApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1275,"src":"15929:14:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":1208,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15929:41:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1209,"nodeType":"EmitStatement","src":"15924:46:2"}]},"documentation":{"id":1175,"nodeType":"StructuredDocumentation","src":"15462:198:2","text":" @dev Approve `operator` to operate on all of `owner` tokens\n Requirements:\n - operator can't be the address zero.\n Emits an {ApprovalForAll} event."},"id":1211,"implemented":true,"kind":"function","modifiers":[],"name":"_setApprovalForAll","nameLocation":"15674:18:2","nodeType":"FunctionDefinition","parameters":{"id":1182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1177,"mutability":"mutable","name":"owner","nameLocation":"15701:5:2","nodeType":"VariableDeclaration","scope":1211,"src":"15693:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1176,"name":"address","nodeType":"ElementaryTypeName","src":"15693:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1179,"mutability":"mutable","name":"operator","nameLocation":"15716:8:2","nodeType":"VariableDeclaration","scope":1211,"src":"15708:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1178,"name":"address","nodeType":"ElementaryTypeName","src":"15708:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1181,"mutability":"mutable","name":"approved","nameLocation":"15731:8:2","nodeType":"VariableDeclaration","scope":1211,"src":"15726:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1180,"name":"bool","nodeType":"ElementaryTypeName","src":"15726:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"15692:48:2"},"returnParameters":{"id":1183,"nodeType":"ParameterList","parameters":[],"src":"15758:0:2"},"scope":1241,"src":"15665:312:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1239,"nodeType":"Block","src":"16284:169:2","statements":[{"assignments":[1220],"declarations":[{"constant":false,"id":1220,"mutability":"mutable","name":"owner","nameLocation":"16302:5:2","nodeType":"VariableDeclaration","scope":1239,"src":"16294:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1219,"name":"address","nodeType":"ElementaryTypeName","src":"16294:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1224,"initialValue":{"arguments":[{"id":1222,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1214,"src":"16319:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1221,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":662,"src":"16310:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16310:17:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"16294:33:2"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1225,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1220,"src":"16341:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16358:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1227,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16350:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1226,"name":"address","nodeType":"ElementaryTypeName","src":"16350:7:2","typeDescriptions":{}}},"id":1229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16350:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"16341:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1236,"nodeType":"IfStatement","src":"16337:88:2","trueBody":{"id":1235,"nodeType":"Block","src":"16362:63:2","statements":[{"errorCall":{"arguments":[{"id":1232,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1214,"src":"16406:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1231,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":200,"src":"16383:22:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":1233,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16383:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1234,"nodeType":"RevertStatement","src":"16376:38:2"}]}},{"expression":{"id":1237,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1220,"src":"16441:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1218,"id":1238,"nodeType":"Return","src":"16434:12:2"}]},"documentation":{"id":1212,"nodeType":"StructuredDocumentation","src":"15983:224:2","text":" @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n Returns the owner.\n Overrides to ownership logic should be done to {_ownerOf}."},"id":1240,"implemented":true,"kind":"function","modifiers":[],"name":"_requireOwned","nameLocation":"16221:13:2","nodeType":"FunctionDefinition","parameters":{"id":1215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1214,"mutability":"mutable","name":"tokenId","nameLocation":"16243:7:2","nodeType":"VariableDeclaration","scope":1240,"src":"16235:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1213,"name":"uint256","nodeType":"ElementaryTypeName","src":"16235:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16234:17:2"},"returnParameters":{"id":1218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1217,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1240,"src":"16275:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1216,"name":"address","nodeType":"ElementaryTypeName","src":"16275:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"16274:9:2"},"scope":1241,"src":"16212:241:2","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":1242,"src":"775:15680:2","usedErrors":[195,200,209,214,219,226,231,236],"usedEvents":[1257,1266,1275]}],"src":"107:16349:2"},"id":2},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","exportedSymbols":{"IERC165":[3165],"IERC721":[1358]},"id":1359,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1243,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"108:24:3"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":1245,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1359,"sourceUnit":3166,"src":"134:62:3","symbolAliases":[{"foreign":{"id":1244,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3165,"src":"142:7:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1247,"name":"IERC165","nameLocations":["288:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":3165,"src":"288:7:3"},"id":1248,"nodeType":"InheritanceSpecifier","src":"288:7:3"}],"canonicalName":"IERC721","contractDependencies":[],"contractKind":"interface","documentation":{"id":1246,"nodeType":"StructuredDocumentation","src":"198:68:3","text":" @dev Required interface of an ERC-721 compliant contract."},"fullyImplemented":false,"id":1358,"linearizedBaseContracts":[1358,3165],"name":"IERC721","nameLocation":"277:7:3","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1249,"nodeType":"StructuredDocumentation","src":"302:88:3","text":" @dev Emitted when `tokenId` token is transferred from `from` to `to`."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":1257,"name":"Transfer","nameLocation":"401:8:3","nodeType":"EventDefinition","parameters":{"id":1256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1251,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"426:4:3","nodeType":"VariableDeclaration","scope":1257,"src":"410:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1250,"name":"address","nodeType":"ElementaryTypeName","src":"410:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1253,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"448:2:3","nodeType":"VariableDeclaration","scope":1257,"src":"432:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1252,"name":"address","nodeType":"ElementaryTypeName","src":"432:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1255,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"468:7:3","nodeType":"VariableDeclaration","scope":1257,"src":"452:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1254,"name":"uint256","nodeType":"ElementaryTypeName","src":"452:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"409:67:3"},"src":"395:82:3"},{"anonymous":false,"documentation":{"id":1258,"nodeType":"StructuredDocumentation","src":"483:94:3","text":" @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":1266,"name":"Approval","nameLocation":"588:8:3","nodeType":"EventDefinition","parameters":{"id":1265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1260,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"613:5:3","nodeType":"VariableDeclaration","scope":1266,"src":"597:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1259,"name":"address","nodeType":"ElementaryTypeName","src":"597:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1262,"indexed":true,"mutability":"mutable","name":"approved","nameLocation":"636:8:3","nodeType":"VariableDeclaration","scope":1266,"src":"620:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1261,"name":"address","nodeType":"ElementaryTypeName","src":"620:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1264,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"662:7:3","nodeType":"VariableDeclaration","scope":1266,"src":"646:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1263,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"596:74:3"},"src":"582:89:3"},{"anonymous":false,"documentation":{"id":1267,"nodeType":"StructuredDocumentation","src":"677:117:3","text":" @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"eventSelector":"17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31","id":1275,"name":"ApprovalForAll","nameLocation":"805:14:3","nodeType":"EventDefinition","parameters":{"id":1274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1269,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"836:5:3","nodeType":"VariableDeclaration","scope":1275,"src":"820:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1268,"name":"address","nodeType":"ElementaryTypeName","src":"820:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1271,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"859:8:3","nodeType":"VariableDeclaration","scope":1275,"src":"843:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1270,"name":"address","nodeType":"ElementaryTypeName","src":"843:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1273,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"874:8:3","nodeType":"VariableDeclaration","scope":1275,"src":"869:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1272,"name":"bool","nodeType":"ElementaryTypeName","src":"869:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"819:64:3"},"src":"799:85:3"},{"documentation":{"id":1276,"nodeType":"StructuredDocumentation","src":"890:76:3","text":" @dev Returns the number of tokens in ``owner``'s account."},"functionSelector":"70a08231","id":1283,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"980:9:3","nodeType":"FunctionDefinition","parameters":{"id":1279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1278,"mutability":"mutable","name":"owner","nameLocation":"998:5:3","nodeType":"VariableDeclaration","scope":1283,"src":"990:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1277,"name":"address","nodeType":"ElementaryTypeName","src":"990:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"989:15:3"},"returnParameters":{"id":1282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1281,"mutability":"mutable","name":"balance","nameLocation":"1036:7:3","nodeType":"VariableDeclaration","scope":1283,"src":"1028:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1280,"name":"uint256","nodeType":"ElementaryTypeName","src":"1028:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1027:17:3"},"scope":1358,"src":"971:74:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1284,"nodeType":"StructuredDocumentation","src":"1051:131:3","text":" @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"6352211e","id":1291,"implemented":false,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"1196:7:3","nodeType":"FunctionDefinition","parameters":{"id":1287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1286,"mutability":"mutable","name":"tokenId","nameLocation":"1212:7:3","nodeType":"VariableDeclaration","scope":1291,"src":"1204:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1285,"name":"uint256","nodeType":"ElementaryTypeName","src":"1204:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1203:17:3"},"returnParameters":{"id":1290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1289,"mutability":"mutable","name":"owner","nameLocation":"1252:5:3","nodeType":"VariableDeclaration","scope":1291,"src":"1244:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1288,"name":"address","nodeType":"ElementaryTypeName","src":"1244:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1243:15:3"},"scope":1358,"src":"1187:72:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1292,"nodeType":"StructuredDocumentation","src":"1265:565:3","text":" @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"b88d4fde","id":1303,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1844:16:3","nodeType":"FunctionDefinition","parameters":{"id":1301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1294,"mutability":"mutable","name":"from","nameLocation":"1869:4:3","nodeType":"VariableDeclaration","scope":1303,"src":"1861:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1293,"name":"address","nodeType":"ElementaryTypeName","src":"1861:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1296,"mutability":"mutable","name":"to","nameLocation":"1883:2:3","nodeType":"VariableDeclaration","scope":1303,"src":"1875:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1295,"name":"address","nodeType":"ElementaryTypeName","src":"1875:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1298,"mutability":"mutable","name":"tokenId","nameLocation":"1895:7:3","nodeType":"VariableDeclaration","scope":1303,"src":"1887:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1297,"name":"uint256","nodeType":"ElementaryTypeName","src":"1887:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1300,"mutability":"mutable","name":"data","nameLocation":"1919:4:3","nodeType":"VariableDeclaration","scope":1303,"src":"1904:19:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1299,"name":"bytes","nodeType":"ElementaryTypeName","src":"1904:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1860:64:3"},"returnParameters":{"id":1302,"nodeType":"ParameterList","parameters":[],"src":"1933:0:3"},"scope":1358,"src":"1835:99:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1304,"nodeType":"StructuredDocumentation","src":"1940:706:3","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"42842e0e","id":1313,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"2660:16:3","nodeType":"FunctionDefinition","parameters":{"id":1311,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1306,"mutability":"mutable","name":"from","nameLocation":"2685:4:3","nodeType":"VariableDeclaration","scope":1313,"src":"2677:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1305,"name":"address","nodeType":"ElementaryTypeName","src":"2677:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1308,"mutability":"mutable","name":"to","nameLocation":"2699:2:3","nodeType":"VariableDeclaration","scope":1313,"src":"2691:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1307,"name":"address","nodeType":"ElementaryTypeName","src":"2691:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1310,"mutability":"mutable","name":"tokenId","nameLocation":"2711:7:3","nodeType":"VariableDeclaration","scope":1313,"src":"2703:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1309,"name":"uint256","nodeType":"ElementaryTypeName","src":"2703:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2676:43:3"},"returnParameters":{"id":1312,"nodeType":"ParameterList","parameters":[],"src":"2728:0:3"},"scope":1358,"src":"2651:78:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1314,"nodeType":"StructuredDocumentation","src":"2735:733:3","text":" @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1323,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"3482:12:3","nodeType":"FunctionDefinition","parameters":{"id":1321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1316,"mutability":"mutable","name":"from","nameLocation":"3503:4:3","nodeType":"VariableDeclaration","scope":1323,"src":"3495:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1315,"name":"address","nodeType":"ElementaryTypeName","src":"3495:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1318,"mutability":"mutable","name":"to","nameLocation":"3517:2:3","nodeType":"VariableDeclaration","scope":1323,"src":"3509:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1317,"name":"address","nodeType":"ElementaryTypeName","src":"3509:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1320,"mutability":"mutable","name":"tokenId","nameLocation":"3529:7:3","nodeType":"VariableDeclaration","scope":1323,"src":"3521:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1319,"name":"uint256","nodeType":"ElementaryTypeName","src":"3521:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3494:43:3"},"returnParameters":{"id":1322,"nodeType":"ParameterList","parameters":[],"src":"3546:0:3"},"scope":1358,"src":"3473:74:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1324,"nodeType":"StructuredDocumentation","src":"3553:452:3","text":" @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1331,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4019:7:3","nodeType":"FunctionDefinition","parameters":{"id":1329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1326,"mutability":"mutable","name":"to","nameLocation":"4035:2:3","nodeType":"VariableDeclaration","scope":1331,"src":"4027:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1325,"name":"address","nodeType":"ElementaryTypeName","src":"4027:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1328,"mutability":"mutable","name":"tokenId","nameLocation":"4047:7:3","nodeType":"VariableDeclaration","scope":1331,"src":"4039:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1327,"name":"uint256","nodeType":"ElementaryTypeName","src":"4039:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4026:29:3"},"returnParameters":{"id":1330,"nodeType":"ParameterList","parameters":[],"src":"4064:0:3"},"scope":1358,"src":"4010:55:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1332,"nodeType":"StructuredDocumentation","src":"4071:315:3","text":" @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."},"functionSelector":"a22cb465","id":1339,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4400:17:3","nodeType":"FunctionDefinition","parameters":{"id":1337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1334,"mutability":"mutable","name":"operator","nameLocation":"4426:8:3","nodeType":"VariableDeclaration","scope":1339,"src":"4418:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1333,"name":"address","nodeType":"ElementaryTypeName","src":"4418:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1336,"mutability":"mutable","name":"approved","nameLocation":"4441:8:3","nodeType":"VariableDeclaration","scope":1339,"src":"4436:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1335,"name":"bool","nodeType":"ElementaryTypeName","src":"4436:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4417:33:3"},"returnParameters":{"id":1338,"nodeType":"ParameterList","parameters":[],"src":"4459:0:3"},"scope":1358,"src":"4391:69:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1340,"nodeType":"StructuredDocumentation","src":"4466:139:3","text":" @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"081812fc","id":1347,"implemented":false,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"4619:11:3","nodeType":"FunctionDefinition","parameters":{"id":1343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1342,"mutability":"mutable","name":"tokenId","nameLocation":"4639:7:3","nodeType":"VariableDeclaration","scope":1347,"src":"4631:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1341,"name":"uint256","nodeType":"ElementaryTypeName","src":"4631:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4630:17:3"},"returnParameters":{"id":1346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1345,"mutability":"mutable","name":"operator","nameLocation":"4679:8:3","nodeType":"VariableDeclaration","scope":1347,"src":"4671:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1344,"name":"address","nodeType":"ElementaryTypeName","src":"4671:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4670:18:3"},"scope":1358,"src":"4610:79:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1348,"nodeType":"StructuredDocumentation","src":"4695:138:3","text":" @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"},"functionSelector":"e985e9c5","id":1357,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4847:16:3","nodeType":"FunctionDefinition","parameters":{"id":1353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1350,"mutability":"mutable","name":"owner","nameLocation":"4872:5:3","nodeType":"VariableDeclaration","scope":1357,"src":"4864:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1349,"name":"address","nodeType":"ElementaryTypeName","src":"4864:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1352,"mutability":"mutable","name":"operator","nameLocation":"4887:8:3","nodeType":"VariableDeclaration","scope":1357,"src":"4879:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1351,"name":"address","nodeType":"ElementaryTypeName","src":"4879:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4863:33:3"},"returnParameters":{"id":1356,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1355,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1357,"src":"4920:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1354,"name":"bool","nodeType":"ElementaryTypeName","src":"4920:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4919:6:3"},"scope":1358,"src":"4838:88:3","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1359,"src":"267:4661:3","usedErrors":[],"usedEvents":[1257,1266,1275]}],"src":"108:4821:3"},"id":3},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","exportedSymbols":{"IERC721Receiver":[1376]},"id":1377,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1360,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"116:24:4"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Receiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":1361,"nodeType":"StructuredDocumentation","src":"142:154:4","text":" @title ERC-721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC-721 asset contracts."},"fullyImplemented":false,"id":1376,"linearizedBaseContracts":[1376],"name":"IERC721Receiver","nameLocation":"307:15:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1362,"nodeType":"StructuredDocumentation","src":"329:500:4","text":" @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."},"functionSelector":"150b7a02","id":1375,"implemented":false,"kind":"function","modifiers":[],"name":"onERC721Received","nameLocation":"843:16:4","nodeType":"FunctionDefinition","parameters":{"id":1371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1364,"mutability":"mutable","name":"operator","nameLocation":"877:8:4","nodeType":"VariableDeclaration","scope":1375,"src":"869:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1363,"name":"address","nodeType":"ElementaryTypeName","src":"869:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1366,"mutability":"mutable","name":"from","nameLocation":"903:4:4","nodeType":"VariableDeclaration","scope":1375,"src":"895:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1365,"name":"address","nodeType":"ElementaryTypeName","src":"895:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1368,"mutability":"mutable","name":"tokenId","nameLocation":"925:7:4","nodeType":"VariableDeclaration","scope":1375,"src":"917:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1367,"name":"uint256","nodeType":"ElementaryTypeName","src":"917:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1370,"mutability":"mutable","name":"data","nameLocation":"957:4:4","nodeType":"VariableDeclaration","scope":1375,"src":"942:19:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1369,"name":"bytes","nodeType":"ElementaryTypeName","src":"942:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"859:108:4"},"returnParameters":{"id":1374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1373,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1375,"src":"986:6:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1372,"name":"bytes4","nodeType":"ElementaryTypeName","src":"986:6:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"985:8:4"},"scope":1376,"src":"834:160:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1377,"src":"297:699:4","usedErrors":[],"usedEvents":[]}],"src":"116:881:4"},"id":4},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","exportedSymbols":{"IERC721":[1358],"IERC721Metadata":[1404]},"id":1405,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1378,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"127:24:5"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"../IERC721.sol","id":1380,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1405,"sourceUnit":1359,"src":"153:39:5","symbolAliases":[{"foreign":{"id":1379,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1358,"src":"161:7:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1382,"name":"IERC721","nameLocations":["357:7:5"],"nodeType":"IdentifierPath","referencedDeclaration":1358,"src":"357:7:5"},"id":1383,"nodeType":"InheritanceSpecifier","src":"357:7:5"}],"canonicalName":"IERC721Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":1381,"nodeType":"StructuredDocumentation","src":"194:133:5","text":" @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"},"fullyImplemented":false,"id":1404,"linearizedBaseContracts":[1404,1358,3165],"name":"IERC721Metadata","nameLocation":"338:15:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1384,"nodeType":"StructuredDocumentation","src":"371:58:5","text":" @dev Returns the token collection name."},"functionSelector":"06fdde03","id":1389,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"443:4:5","nodeType":"FunctionDefinition","parameters":{"id":1385,"nodeType":"ParameterList","parameters":[],"src":"447:2:5"},"returnParameters":{"id":1388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1387,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1389,"src":"473:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1386,"name":"string","nodeType":"ElementaryTypeName","src":"473:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"472:15:5"},"scope":1404,"src":"434:54:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1390,"nodeType":"StructuredDocumentation","src":"494:60:5","text":" @dev Returns the token collection symbol."},"functionSelector":"95d89b41","id":1395,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"568:6:5","nodeType":"FunctionDefinition","parameters":{"id":1391,"nodeType":"ParameterList","parameters":[],"src":"574:2:5"},"returnParameters":{"id":1394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1393,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1395,"src":"600:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1392,"name":"string","nodeType":"ElementaryTypeName","src":"600:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"599:15:5"},"scope":1404,"src":"559:56:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1396,"nodeType":"StructuredDocumentation","src":"621:90:5","text":" @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"functionSelector":"c87b56dd","id":1403,"implemented":false,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"725:8:5","nodeType":"FunctionDefinition","parameters":{"id":1399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1398,"mutability":"mutable","name":"tokenId","nameLocation":"742:7:5","nodeType":"VariableDeclaration","scope":1403,"src":"734:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1397,"name":"uint256","nodeType":"ElementaryTypeName","src":"734:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"733:17:5"},"returnParameters":{"id":1402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1401,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1403,"src":"774:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1400,"name":"string","nodeType":"ElementaryTypeName","src":"774:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"773:15:5"},"scope":1404,"src":"716:73:5","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1405,"src":"328:463:5","usedErrors":[],"usedEvents":[1257,1266,1275]}],"src":"127:665:5"},"id":5},"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol","exportedSymbols":{"ERC721Utils":[1481],"IERC721Errors":[237],"IERC721Receiver":[1376]},"id":1482,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1406,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"118:24:6"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","file":"../IERC721Receiver.sol","id":1408,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1482,"sourceUnit":1377,"src":"144:55:6","symbolAliases":[{"foreign":{"id":1407,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1376,"src":"152:15:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../../interfaces/draft-IERC6093.sol","id":1410,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1482,"sourceUnit":285,"src":"200:69:6","symbolAliases":[{"foreign":{"id":1409,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"208:13:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ERC721Utils","contractDependencies":[],"contractKind":"library","documentation":{"id":1411,"nodeType":"StructuredDocumentation","src":"271:159:6","text":" @dev Library that provide common ERC-721 utility functions.\n See https://eips.ethereum.org/EIPS/eip-721[ERC-721].\n _Available since v5.1._"},"fullyImplemented":true,"id":1481,"linearizedBaseContracts":[1481],"name":"ERC721Utils","nameLocation":"439:11:6","nodeType":"ContractDefinition","nodes":[{"body":{"id":1479,"nodeType":"Block","src":"1159:758:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1425,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1418,"src":"1173:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1176:4:6","memberName":"code","nodeType":"MemberAccess","src":"1173:7:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1181:6:6","memberName":"length","nodeType":"MemberAccess","src":"1173:14:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1190:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1173:18:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1478,"nodeType":"IfStatement","src":"1169:742:6","trueBody":{"id":1477,"nodeType":"Block","src":"1193:718:6","statements":[{"clauses":[{"block":{"id":1455,"nodeType":"Block","src":"1303:214:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1442,"name":"retval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1440,"src":"1325:6:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"id":1443,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1376,"src":"1335:15:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$1376_$","typeString":"type(contract IERC721Receiver)"}},"id":1444,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1351:16:6","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":1375,"src":"1335:32:6","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"}},"id":1445,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1368:8:6","memberName":"selector","nodeType":"MemberAccess","src":"1335:41:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1325:51:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1454,"nodeType":"IfStatement","src":"1321:182:6","trueBody":{"id":1453,"nodeType":"Block","src":"1378:125:6","statements":[{"errorCall":{"arguments":[{"id":1450,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1418,"src":"1481:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1447,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"1445:13:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Errors_$237_$","typeString":"type(contract IERC721Errors)"}},"id":1449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1459:21:6","memberName":"ERC721InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":219,"src":"1445:35:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1445:39:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1452,"nodeType":"RevertStatement","src":"1438:46:6"}]}}]},"errorName":"","id":1456,"nodeType":"TryCatchClause","parameters":{"id":1441,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1440,"mutability":"mutable","name":"retval","nameLocation":"1295:6:6","nodeType":"VariableDeclaration","scope":1456,"src":"1288:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1439,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1288:6:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1287:15:6"},"src":"1279:238:6"},{"block":{"id":1474,"nodeType":"Block","src":"1546:355:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1460,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1458,"src":"1568:6:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1575:6:6","memberName":"length","nodeType":"MemberAccess","src":"1568:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1585:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1568:18:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1472,"nodeType":"Block","src":"1736:151:6","statements":[{"AST":{"nativeSrc":"1783:86:6","nodeType":"YulBlock","src":"1783:86:6","statements":[{"expression":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"1820:2:6","nodeType":"YulLiteral","src":"1820:2:6","type":"","value":"32"},{"name":"reason","nativeSrc":"1824:6:6","nodeType":"YulIdentifier","src":"1824:6:6"}],"functionName":{"name":"add","nativeSrc":"1816:3:6","nodeType":"YulIdentifier","src":"1816:3:6"},"nativeSrc":"1816:15:6","nodeType":"YulFunctionCall","src":"1816:15:6"},{"arguments":[{"name":"reason","nativeSrc":"1839:6:6","nodeType":"YulIdentifier","src":"1839:6:6"}],"functionName":{"name":"mload","nativeSrc":"1833:5:6","nodeType":"YulIdentifier","src":"1833:5:6"},"nativeSrc":"1833:13:6","nodeType":"YulFunctionCall","src":"1833:13:6"}],"functionName":{"name":"revert","nativeSrc":"1809:6:6","nodeType":"YulIdentifier","src":"1809:6:6"},"nativeSrc":"1809:38:6","nodeType":"YulFunctionCall","src":"1809:38:6"},"nativeSrc":"1809:38:6","nodeType":"YulExpressionStatement","src":"1809:38:6"}]},"evmVersion":"paris","externalReferences":[{"declaration":1458,"isOffset":false,"isSlot":false,"src":"1824:6:6","valueSize":1},{"declaration":1458,"isOffset":false,"isSlot":false,"src":"1839:6:6","valueSize":1}],"flags":["memory-safe"],"id":1471,"nodeType":"InlineAssembly","src":"1758:111:6"}]},"id":1473,"nodeType":"IfStatement","src":"1564:323:6","trueBody":{"id":1470,"nodeType":"Block","src":"1588:142:6","statements":[{"errorCall":{"arguments":[{"id":1467,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1418,"src":"1708:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1464,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"1672:13:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Errors_$237_$","typeString":"type(contract IERC721Errors)"}},"id":1466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1686:21:6","memberName":"ERC721InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":219,"src":"1672:35:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1468,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1672:39:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1469,"nodeType":"RevertStatement","src":"1665:46:6"}]}}]},"errorName":"","id":1475,"nodeType":"TryCatchClause","parameters":{"id":1459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1458,"mutability":"mutable","name":"reason","nameLocation":"1538:6:6","nodeType":"VariableDeclaration","scope":1475,"src":"1525:19:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1457,"name":"bytes","nodeType":"ElementaryTypeName","src":"1525:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1524:21:6"},"src":"1518:383:6"}],"externalCall":{"arguments":[{"id":1434,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1414,"src":"1248:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1435,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1416,"src":"1258:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1436,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1420,"src":"1264:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1437,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1422,"src":"1273:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1431,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1418,"src":"1227:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1430,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1376,"src":"1211:15:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$1376_$","typeString":"type(contract IERC721Receiver)"}},"id":1432,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1211:19:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721Receiver_$1376","typeString":"contract IERC721Receiver"}},"id":1433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1231:16:6","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":1375,"src":"1211:36:6","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,bytes memory) external returns (bytes4)"}},"id":1438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1211:67:6","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":1476,"nodeType":"TryStatement","src":"1207:694:6"}]}}]},"documentation":{"id":1412,"nodeType":"StructuredDocumentation","src":"457:531:6","text":" @dev Performs an acceptance check for the provided `operator` by calling {IERC721Receiver-onERC721Received}\n on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n Otherwise, the recipient must implement {IERC721Receiver-onERC721Received} and return the acceptance magic value to accept\n the transfer."},"id":1480,"implemented":true,"kind":"function","modifiers":[],"name":"checkOnERC721Received","nameLocation":"1002:21:6","nodeType":"FunctionDefinition","parameters":{"id":1423,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1414,"mutability":"mutable","name":"operator","nameLocation":"1041:8:6","nodeType":"VariableDeclaration","scope":1480,"src":"1033:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1413,"name":"address","nodeType":"ElementaryTypeName","src":"1033:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1416,"mutability":"mutable","name":"from","nameLocation":"1067:4:6","nodeType":"VariableDeclaration","scope":1480,"src":"1059:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1415,"name":"address","nodeType":"ElementaryTypeName","src":"1059:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1418,"mutability":"mutable","name":"to","nameLocation":"1089:2:6","nodeType":"VariableDeclaration","scope":1480,"src":"1081:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1417,"name":"address","nodeType":"ElementaryTypeName","src":"1081:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1420,"mutability":"mutable","name":"tokenId","nameLocation":"1109:7:6","nodeType":"VariableDeclaration","scope":1480,"src":"1101:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1419,"name":"uint256","nodeType":"ElementaryTypeName","src":"1101:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1422,"mutability":"mutable","name":"data","nameLocation":"1139:4:6","nodeType":"VariableDeclaration","scope":1480,"src":"1126:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1421,"name":"bytes","nodeType":"ElementaryTypeName","src":"1126:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1023:126:6"},"returnParameters":{"id":1424,"nodeType":"ParameterList","parameters":[],"src":"1159:0:6"},"scope":1481,"src":"993:924:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":1482,"src":"431:1488:6","usedErrors":[],"usedEvents":[]}],"src":"118:1802:6"},"id":6},"@openzeppelin/contracts/utils/Base64.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Base64.sol","exportedSymbols":{"Base64":[1576]},"id":1577,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1483,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"100:24:7"},{"abstract":false,"baseContracts":[],"canonicalName":"Base64","contractDependencies":[],"contractKind":"library","documentation":{"id":1484,"nodeType":"StructuredDocumentation","src":"126:75:7","text":" @dev Provides a set of functions to operate with Base64 strings."},"fullyImplemented":true,"id":1576,"linearizedBaseContracts":[1576],"name":"Base64","nameLocation":"210:6:7","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":1485,"nodeType":"StructuredDocumentation","src":"223:131:7","text":" @dev Base64 Encoding/Decoding Table\n See sections 4 and 5 of https://datatracker.ietf.org/doc/html/rfc4648"},"id":1488,"mutability":"constant","name":"_TABLE","nameLocation":"384:6:7","nodeType":"VariableDeclaration","scope":1576,"src":"359:100:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1486,"name":"string","nodeType":"ElementaryTypeName","src":"359:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2f","id":1487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"393:66:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_84d8a590de33e00cbdc16e1f28c3506f5ec15c599fab9a6a4bcd575cc2f110ce","typeString":"literal_string \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\""},"value":"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"},"visibility":"internal"},{"constant":true,"id":1491,"mutability":"constant","name":"_TABLE_URL","nameLocation":"490:10:7","nodeType":"VariableDeclaration","scope":1576,"src":"465:104:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1489,"name":"string","nodeType":"ElementaryTypeName","src":"465:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392d5f","id":1490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"503:66:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_5f7e6d3cba140c1411e96b7033571a229a3135b5c436a9698b398a19a1c64b50","typeString":"literal_string \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_\""},"value":"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_"},"visibility":"internal"},{"body":{"id":1505,"nodeType":"Block","src":"736:51:7","statements":[{"expression":{"arguments":[{"id":1500,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1494,"src":"761:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1501,"name":"_TABLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1488,"src":"767:6:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"74727565","id":1502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"775:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1499,"name":"_encode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1575,"src":"753:7:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$_t_bool_$returns$_t_string_memory_ptr_$","typeString":"function (bytes memory,string memory,bool) pure returns (string memory)"}},"id":1503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"753:27:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1498,"id":1504,"nodeType":"Return","src":"746:34:7"}]},"documentation":{"id":1492,"nodeType":"StructuredDocumentation","src":"576:82:7","text":" @dev Converts a `bytes` to its Bytes64 `string` representation."},"id":1506,"implemented":true,"kind":"function","modifiers":[],"name":"encode","nameLocation":"672:6:7","nodeType":"FunctionDefinition","parameters":{"id":1495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1494,"mutability":"mutable","name":"data","nameLocation":"692:4:7","nodeType":"VariableDeclaration","scope":1506,"src":"679:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1493,"name":"bytes","nodeType":"ElementaryTypeName","src":"679:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"678:19:7"},"returnParameters":{"id":1498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1497,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1506,"src":"721:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1496,"name":"string","nodeType":"ElementaryTypeName","src":"721:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"720:15:7"},"scope":1576,"src":"663:124:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1520,"nodeType":"Block","src":"1061:56:7","statements":[{"expression":{"arguments":[{"id":1515,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1509,"src":"1086:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1516,"name":"_TABLE_URL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1491,"src":"1092:10:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"66616c7365","id":1517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1104:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1514,"name":"_encode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1575,"src":"1078:7:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$_t_bool_$returns$_t_string_memory_ptr_$","typeString":"function (bytes memory,string memory,bool) pure returns (string memory)"}},"id":1518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1078:32:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1513,"id":1519,"nodeType":"Return","src":"1071:39:7"}]},"documentation":{"id":1507,"nodeType":"StructuredDocumentation","src":"793:187:7","text":" @dev Converts a `bytes` to its Bytes64Url `string` representation.\n Output is not padded with `=` as specified in https://www.rfc-editor.org/rfc/rfc4648[rfc4648]."},"id":1521,"implemented":true,"kind":"function","modifiers":[],"name":"encodeURL","nameLocation":"994:9:7","nodeType":"FunctionDefinition","parameters":{"id":1510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1509,"mutability":"mutable","name":"data","nameLocation":"1017:4:7","nodeType":"VariableDeclaration","scope":1521,"src":"1004:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1508,"name":"bytes","nodeType":"ElementaryTypeName","src":"1004:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1003:19:7"},"returnParameters":{"id":1513,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1512,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1521,"src":"1046:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1511,"name":"string","nodeType":"ElementaryTypeName","src":"1046:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1045:15:7"},"scope":1576,"src":"985:132:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1574,"nodeType":"Block","src":"1298:3910:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1533,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1524,"src":"1515:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1520:6:7","memberName":"length","nodeType":"MemberAccess","src":"1515:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1530:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1515:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"documentation":" Inspired by Brecht Devos (Brechtpd) implementation - MIT licence\n https://github.com/Brechtpd/base64/blob/e78d9fd951e7b0977ddca77d92dc85183770daf4/base64.sol","id":1539,"nodeType":"IfStatement","src":"1511:31:7","trueBody":{"expression":{"hexValue":"","id":1537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1540:2:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"functionReturnParameters":1532,"id":1538,"nodeType":"Return","src":"1533:9:7"}},{"assignments":[1541],"declarations":[{"constant":false,"id":1541,"mutability":"mutable","name":"resultLength","nameLocation":"2488:12:7","nodeType":"VariableDeclaration","scope":1574,"src":"2480:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1540,"name":"uint256","nodeType":"ElementaryTypeName","src":"2480:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1563,"initialValue":{"condition":{"id":1542,"name":"withPadding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1528,"src":"2503:11:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"34","id":1553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2548:1:7","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":1554,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1524,"src":"2552:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2557:6:7","memberName":"length","nodeType":"MemberAccess","src":"2552:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2548:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":1557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2566:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2548:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1559,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2547:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"33","id":1560,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2571:1:7","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"2547:25:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2503:69:7","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"34","id":1543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2517:1:7","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1544,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1524,"src":"2523:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2528:6:7","memberName":"length","nodeType":"MemberAccess","src":"2523:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":1546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2537:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2523:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1548,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2522:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"33","id":1549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2542:1:7","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"2522:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1551,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2521:23:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2517:27:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2480:92:7"},{"assignments":[1565],"declarations":[{"constant":false,"id":1565,"mutability":"mutable","name":"result","nameLocation":"2597:6:7","nodeType":"VariableDeclaration","scope":1574,"src":"2583:20:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1564,"name":"string","nodeType":"ElementaryTypeName","src":"2583:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1570,"initialValue":{"arguments":[{"id":1568,"name":"resultLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1541,"src":"2617:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1567,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2606:10:7","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":1566,"name":"string","nodeType":"ElementaryTypeName","src":"2610:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":1569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2606:24:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2583:47:7"},{"AST":{"nativeSrc":"2666:2512:7","nodeType":"YulBlock","src":"2666:2512:7","statements":[{"nativeSrc":"2751:29:7","nodeType":"YulVariableDeclaration","src":"2751:29:7","value":{"arguments":[{"name":"table","nativeSrc":"2771:5:7","nodeType":"YulIdentifier","src":"2771:5:7"},{"kind":"number","nativeSrc":"2778:1:7","nodeType":"YulLiteral","src":"2778:1:7","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"2767:3:7","nodeType":"YulIdentifier","src":"2767:3:7"},"nativeSrc":"2767:13:7","nodeType":"YulFunctionCall","src":"2767:13:7"},"variables":[{"name":"tablePtr","nativeSrc":"2755:8:7","nodeType":"YulTypedName","src":"2755:8:7","type":""}]},{"nativeSrc":"2850:34:7","nodeType":"YulVariableDeclaration","src":"2850:34:7","value":{"arguments":[{"name":"result","nativeSrc":"2871:6:7","nodeType":"YulIdentifier","src":"2871:6:7"},{"kind":"number","nativeSrc":"2879:4:7","nodeType":"YulLiteral","src":"2879:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2867:3:7","nodeType":"YulIdentifier","src":"2867:3:7"},"nativeSrc":"2867:17:7","nodeType":"YulFunctionCall","src":"2867:17:7"},"variables":[{"name":"resultPtr","nativeSrc":"2854:9:7","nodeType":"YulTypedName","src":"2854:9:7","type":""}]},{"nativeSrc":"2897:19:7","nodeType":"YulVariableDeclaration","src":"2897:19:7","value":{"name":"data","nativeSrc":"2912:4:7","nodeType":"YulIdentifier","src":"2912:4:7"},"variables":[{"name":"dataPtr","nativeSrc":"2901:7:7","nodeType":"YulTypedName","src":"2901:7:7","type":""}]},{"nativeSrc":"2929:36:7","nodeType":"YulVariableDeclaration","src":"2929:36:7","value":{"arguments":[{"name":"data","nativeSrc":"2947:4:7","nodeType":"YulIdentifier","src":"2947:4:7"},{"arguments":[{"name":"data","nativeSrc":"2959:4:7","nodeType":"YulIdentifier","src":"2959:4:7"}],"functionName":{"name":"mload","nativeSrc":"2953:5:7","nodeType":"YulIdentifier","src":"2953:5:7"},"nativeSrc":"2953:11:7","nodeType":"YulFunctionCall","src":"2953:11:7"}],"functionName":{"name":"add","nativeSrc":"2943:3:7","nodeType":"YulIdentifier","src":"2943:3:7"},"nativeSrc":"2943:22:7","nodeType":"YulFunctionCall","src":"2943:22:7"},"variables":[{"name":"endPtr","nativeSrc":"2933:6:7","nodeType":"YulTypedName","src":"2933:6:7","type":""}]},{"nativeSrc":"3179:33:7","nodeType":"YulVariableDeclaration","src":"3179:33:7","value":{"arguments":[{"name":"endPtr","nativeSrc":"3199:6:7","nodeType":"YulIdentifier","src":"3199:6:7"},{"kind":"number","nativeSrc":"3207:4:7","nodeType":"YulLiteral","src":"3207:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"3195:3:7","nodeType":"YulIdentifier","src":"3195:3:7"},"nativeSrc":"3195:17:7","nodeType":"YulFunctionCall","src":"3195:17:7"},"variables":[{"name":"afterPtr","nativeSrc":"3183:8:7","nodeType":"YulTypedName","src":"3183:8:7","type":""}]},{"nativeSrc":"3225:33:7","nodeType":"YulVariableDeclaration","src":"3225:33:7","value":{"arguments":[{"name":"afterPtr","nativeSrc":"3249:8:7","nodeType":"YulIdentifier","src":"3249:8:7"}],"functionName":{"name":"mload","nativeSrc":"3243:5:7","nodeType":"YulIdentifier","src":"3243:5:7"},"nativeSrc":"3243:15:7","nodeType":"YulFunctionCall","src":"3243:15:7"},"variables":[{"name":"afterCache","nativeSrc":"3229:10:7","nodeType":"YulTypedName","src":"3229:10:7","type":""}]},{"expression":{"arguments":[{"name":"afterPtr","nativeSrc":"3278:8:7","nodeType":"YulIdentifier","src":"3278:8:7"},{"kind":"number","nativeSrc":"3288:4:7","nodeType":"YulLiteral","src":"3288:4:7","type":"","value":"0x00"}],"functionName":{"name":"mstore","nativeSrc":"3271:6:7","nodeType":"YulIdentifier","src":"3271:6:7"},"nativeSrc":"3271:22:7","nodeType":"YulFunctionCall","src":"3271:22:7"},"nativeSrc":"3271:22:7","nodeType":"YulExpressionStatement","src":"3271:22:7"},{"body":{"nativeSrc":"3418:1201:7","nodeType":"YulBlock","src":"3418:1201:7","statements":[{"nativeSrc":"3471:26:7","nodeType":"YulAssignment","src":"3471:26:7","value":{"arguments":[{"name":"dataPtr","nativeSrc":"3486:7:7","nodeType":"YulIdentifier","src":"3486:7:7"},{"kind":"number","nativeSrc":"3495:1:7","nodeType":"YulLiteral","src":"3495:1:7","type":"","value":"3"}],"functionName":{"name":"add","nativeSrc":"3482:3:7","nodeType":"YulIdentifier","src":"3482:3:7"},"nativeSrc":"3482:15:7","nodeType":"YulFunctionCall","src":"3482:15:7"},"variableNames":[{"name":"dataPtr","nativeSrc":"3471:7:7","nodeType":"YulIdentifier","src":"3471:7:7"}]},{"nativeSrc":"3514:27:7","nodeType":"YulVariableDeclaration","src":"3514:27:7","value":{"arguments":[{"name":"dataPtr","nativeSrc":"3533:7:7","nodeType":"YulIdentifier","src":"3533:7:7"}],"functionName":{"name":"mload","nativeSrc":"3527:5:7","nodeType":"YulIdentifier","src":"3527:5:7"},"nativeSrc":"3527:14:7","nodeType":"YulFunctionCall","src":"3527:14:7"},"variables":[{"name":"input","nativeSrc":"3518:5:7","nodeType":"YulTypedName","src":"3518:5:7","type":""}]},{"expression":{"arguments":[{"name":"resultPtr","nativeSrc":"4069:9:7","nodeType":"YulIdentifier","src":"4069:9:7"},{"arguments":[{"arguments":[{"name":"tablePtr","nativeSrc":"4090:8:7","nodeType":"YulIdentifier","src":"4090:8:7"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"4108:2:7","nodeType":"YulLiteral","src":"4108:2:7","type":"","value":"18"},{"name":"input","nativeSrc":"4112:5:7","nodeType":"YulIdentifier","src":"4112:5:7"}],"functionName":{"name":"shr","nativeSrc":"4104:3:7","nodeType":"YulIdentifier","src":"4104:3:7"},"nativeSrc":"4104:14:7","nodeType":"YulFunctionCall","src":"4104:14:7"},{"kind":"number","nativeSrc":"4120:4:7","nodeType":"YulLiteral","src":"4120:4:7","type":"","value":"0x3F"}],"functionName":{"name":"and","nativeSrc":"4100:3:7","nodeType":"YulIdentifier","src":"4100:3:7"},"nativeSrc":"4100:25:7","nodeType":"YulFunctionCall","src":"4100:25:7"}],"functionName":{"name":"add","nativeSrc":"4086:3:7","nodeType":"YulIdentifier","src":"4086:3:7"},"nativeSrc":"4086:40:7","nodeType":"YulFunctionCall","src":"4086:40:7"}],"functionName":{"name":"mload","nativeSrc":"4080:5:7","nodeType":"YulIdentifier","src":"4080:5:7"},"nativeSrc":"4080:47:7","nodeType":"YulFunctionCall","src":"4080:47:7"}],"functionName":{"name":"mstore8","nativeSrc":"4061:7:7","nodeType":"YulIdentifier","src":"4061:7:7"},"nativeSrc":"4061:67:7","nodeType":"YulFunctionCall","src":"4061:67:7"},"nativeSrc":"4061:67:7","nodeType":"YulExpressionStatement","src":"4061:67:7"},{"nativeSrc":"4145:30:7","nodeType":"YulAssignment","src":"4145:30:7","value":{"arguments":[{"name":"resultPtr","nativeSrc":"4162:9:7","nodeType":"YulIdentifier","src":"4162:9:7"},{"kind":"number","nativeSrc":"4173:1:7","nodeType":"YulLiteral","src":"4173:1:7","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"4158:3:7","nodeType":"YulIdentifier","src":"4158:3:7"},"nativeSrc":"4158:17:7","nodeType":"YulFunctionCall","src":"4158:17:7"},"variableNames":[{"name":"resultPtr","nativeSrc":"4145:9:7","nodeType":"YulIdentifier","src":"4145:9:7"}]},{"expression":{"arguments":[{"name":"resultPtr","nativeSrc":"4212:9:7","nodeType":"YulIdentifier","src":"4212:9:7"},{"arguments":[{"arguments":[{"name":"tablePtr","nativeSrc":"4233:8:7","nodeType":"YulIdentifier","src":"4233:8:7"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"4251:2:7","nodeType":"YulLiteral","src":"4251:2:7","type":"","value":"12"},{"name":"input","nativeSrc":"4255:5:7","nodeType":"YulIdentifier","src":"4255:5:7"}],"functionName":{"name":"shr","nativeSrc":"4247:3:7","nodeType":"YulIdentifier","src":"4247:3:7"},"nativeSrc":"4247:14:7","nodeType":"YulFunctionCall","src":"4247:14:7"},{"kind":"number","nativeSrc":"4263:4:7","nodeType":"YulLiteral","src":"4263:4:7","type":"","value":"0x3F"}],"functionName":{"name":"and","nativeSrc":"4243:3:7","nodeType":"YulIdentifier","src":"4243:3:7"},"nativeSrc":"4243:25:7","nodeType":"YulFunctionCall","src":"4243:25:7"}],"functionName":{"name":"add","nativeSrc":"4229:3:7","nodeType":"YulIdentifier","src":"4229:3:7"},"nativeSrc":"4229:40:7","nodeType":"YulFunctionCall","src":"4229:40:7"}],"functionName":{"name":"mload","nativeSrc":"4223:5:7","nodeType":"YulIdentifier","src":"4223:5:7"},"nativeSrc":"4223:47:7","nodeType":"YulFunctionCall","src":"4223:47:7"}],"functionName":{"name":"mstore8","nativeSrc":"4204:7:7","nodeType":"YulIdentifier","src":"4204:7:7"},"nativeSrc":"4204:67:7","nodeType":"YulFunctionCall","src":"4204:67:7"},"nativeSrc":"4204:67:7","nodeType":"YulExpressionStatement","src":"4204:67:7"},{"nativeSrc":"4288:30:7","nodeType":"YulAssignment","src":"4288:30:7","value":{"arguments":[{"name":"resultPtr","nativeSrc":"4305:9:7","nodeType":"YulIdentifier","src":"4305:9:7"},{"kind":"number","nativeSrc":"4316:1:7","nodeType":"YulLiteral","src":"4316:1:7","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"4301:3:7","nodeType":"YulIdentifier","src":"4301:3:7"},"nativeSrc":"4301:17:7","nodeType":"YulFunctionCall","src":"4301:17:7"},"variableNames":[{"name":"resultPtr","nativeSrc":"4288:9:7","nodeType":"YulIdentifier","src":"4288:9:7"}]},{"expression":{"arguments":[{"name":"resultPtr","nativeSrc":"4355:9:7","nodeType":"YulIdentifier","src":"4355:9:7"},{"arguments":[{"arguments":[{"name":"tablePtr","nativeSrc":"4376:8:7","nodeType":"YulIdentifier","src":"4376:8:7"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"4394:1:7","nodeType":"YulLiteral","src":"4394:1:7","type":"","value":"6"},{"name":"input","nativeSrc":"4397:5:7","nodeType":"YulIdentifier","src":"4397:5:7"}],"functionName":{"name":"shr","nativeSrc":"4390:3:7","nodeType":"YulIdentifier","src":"4390:3:7"},"nativeSrc":"4390:13:7","nodeType":"YulFunctionCall","src":"4390:13:7"},{"kind":"number","nativeSrc":"4405:4:7","nodeType":"YulLiteral","src":"4405:4:7","type":"","value":"0x3F"}],"functionName":{"name":"and","nativeSrc":"4386:3:7","nodeType":"YulIdentifier","src":"4386:3:7"},"nativeSrc":"4386:24:7","nodeType":"YulFunctionCall","src":"4386:24:7"}],"functionName":{"name":"add","nativeSrc":"4372:3:7","nodeType":"YulIdentifier","src":"4372:3:7"},"nativeSrc":"4372:39:7","nodeType":"YulFunctionCall","src":"4372:39:7"}],"functionName":{"name":"mload","nativeSrc":"4366:5:7","nodeType":"YulIdentifier","src":"4366:5:7"},"nativeSrc":"4366:46:7","nodeType":"YulFunctionCall","src":"4366:46:7"}],"functionName":{"name":"mstore8","nativeSrc":"4347:7:7","nodeType":"YulIdentifier","src":"4347:7:7"},"nativeSrc":"4347:66:7","nodeType":"YulFunctionCall","src":"4347:66:7"},"nativeSrc":"4347:66:7","nodeType":"YulExpressionStatement","src":"4347:66:7"},{"nativeSrc":"4430:30:7","nodeType":"YulAssignment","src":"4430:30:7","value":{"arguments":[{"name":"resultPtr","nativeSrc":"4447:9:7","nodeType":"YulIdentifier","src":"4447:9:7"},{"kind":"number","nativeSrc":"4458:1:7","nodeType":"YulLiteral","src":"4458:1:7","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"4443:3:7","nodeType":"YulIdentifier","src":"4443:3:7"},"nativeSrc":"4443:17:7","nodeType":"YulFunctionCall","src":"4443:17:7"},"variableNames":[{"name":"resultPtr","nativeSrc":"4430:9:7","nodeType":"YulIdentifier","src":"4430:9:7"}]},{"expression":{"arguments":[{"name":"resultPtr","nativeSrc":"4497:9:7","nodeType":"YulIdentifier","src":"4497:9:7"},{"arguments":[{"arguments":[{"name":"tablePtr","nativeSrc":"4518:8:7","nodeType":"YulIdentifier","src":"4518:8:7"},{"arguments":[{"name":"input","nativeSrc":"4532:5:7","nodeType":"YulIdentifier","src":"4532:5:7"},{"kind":"number","nativeSrc":"4539:4:7","nodeType":"YulLiteral","src":"4539:4:7","type":"","value":"0x3F"}],"functionName":{"name":"and","nativeSrc":"4528:3:7","nodeType":"YulIdentifier","src":"4528:3:7"},"nativeSrc":"4528:16:7","nodeType":"YulFunctionCall","src":"4528:16:7"}],"functionName":{"name":"add","nativeSrc":"4514:3:7","nodeType":"YulIdentifier","src":"4514:3:7"},"nativeSrc":"4514:31:7","nodeType":"YulFunctionCall","src":"4514:31:7"}],"functionName":{"name":"mload","nativeSrc":"4508:5:7","nodeType":"YulIdentifier","src":"4508:5:7"},"nativeSrc":"4508:38:7","nodeType":"YulFunctionCall","src":"4508:38:7"}],"functionName":{"name":"mstore8","nativeSrc":"4489:7:7","nodeType":"YulIdentifier","src":"4489:7:7"},"nativeSrc":"4489:58:7","nodeType":"YulFunctionCall","src":"4489:58:7"},"nativeSrc":"4489:58:7","nodeType":"YulExpressionStatement","src":"4489:58:7"},{"nativeSrc":"4564:30:7","nodeType":"YulAssignment","src":"4564:30:7","value":{"arguments":[{"name":"resultPtr","nativeSrc":"4581:9:7","nodeType":"YulIdentifier","src":"4581:9:7"},{"kind":"number","nativeSrc":"4592:1:7","nodeType":"YulLiteral","src":"4592:1:7","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"4577:3:7","nodeType":"YulIdentifier","src":"4577:3:7"},"nativeSrc":"4577:17:7","nodeType":"YulFunctionCall","src":"4577:17:7"},"variableNames":[{"name":"resultPtr","nativeSrc":"4564:9:7","nodeType":"YulIdentifier","src":"4564:9:7"}]}]},"condition":{"arguments":[{"name":"dataPtr","nativeSrc":"3384:7:7","nodeType":"YulIdentifier","src":"3384:7:7"},{"name":"endPtr","nativeSrc":"3393:6:7","nodeType":"YulIdentifier","src":"3393:6:7"}],"functionName":{"name":"lt","nativeSrc":"3381:2:7","nodeType":"YulIdentifier","src":"3381:2:7"},"nativeSrc":"3381:19:7","nodeType":"YulFunctionCall","src":"3381:19:7"},"nativeSrc":"3360:1259:7","nodeType":"YulForLoop","post":{"nativeSrc":"3401:16:7","nodeType":"YulBlock","src":"3401:16:7","statements":[]},"pre":{"nativeSrc":"3364:16:7","nodeType":"YulBlock","src":"3364:16:7","statements":[]},"src":"3360:1259:7"},{"expression":{"arguments":[{"name":"afterPtr","nativeSrc":"4687:8:7","nodeType":"YulIdentifier","src":"4687:8:7"},{"name":"afterCache","nativeSrc":"4697:10:7","nodeType":"YulIdentifier","src":"4697:10:7"}],"functionName":{"name":"mstore","nativeSrc":"4680:6:7","nodeType":"YulIdentifier","src":"4680:6:7"},"nativeSrc":"4680:28:7","nodeType":"YulFunctionCall","src":"4680:28:7"},"nativeSrc":"4680:28:7","nodeType":"YulExpressionStatement","src":"4680:28:7"},{"body":{"nativeSrc":"4737:431:7","nodeType":"YulBlock","src":"4737:431:7","statements":[{"cases":[{"body":{"nativeSrc":"4933:125:7","nodeType":"YulBlock","src":"4933:125:7","statements":[{"expression":{"arguments":[{"arguments":[{"name":"resultPtr","nativeSrc":"4967:9:7","nodeType":"YulIdentifier","src":"4967:9:7"},{"kind":"number","nativeSrc":"4978:1:7","nodeType":"YulLiteral","src":"4978:1:7","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"4963:3:7","nodeType":"YulIdentifier","src":"4963:3:7"},"nativeSrc":"4963:17:7","nodeType":"YulFunctionCall","src":"4963:17:7"},{"kind":"number","nativeSrc":"4982:4:7","nodeType":"YulLiteral","src":"4982:4:7","type":"","value":"0x3d"}],"functionName":{"name":"mstore8","nativeSrc":"4955:7:7","nodeType":"YulIdentifier","src":"4955:7:7"},"nativeSrc":"4955:32:7","nodeType":"YulFunctionCall","src":"4955:32:7"},"nativeSrc":"4955:32:7","nodeType":"YulExpressionStatement","src":"4955:32:7"},{"expression":{"arguments":[{"arguments":[{"name":"resultPtr","nativeSrc":"5020:9:7","nodeType":"YulIdentifier","src":"5020:9:7"},{"kind":"number","nativeSrc":"5031:1:7","nodeType":"YulLiteral","src":"5031:1:7","type":"","value":"2"}],"functionName":{"name":"sub","nativeSrc":"5016:3:7","nodeType":"YulIdentifier","src":"5016:3:7"},"nativeSrc":"5016:17:7","nodeType":"YulFunctionCall","src":"5016:17:7"},{"kind":"number","nativeSrc":"5035:4:7","nodeType":"YulLiteral","src":"5035:4:7","type":"","value":"0x3d"}],"functionName":{"name":"mstore8","nativeSrc":"5008:7:7","nodeType":"YulIdentifier","src":"5008:7:7"},"nativeSrc":"5008:32:7","nodeType":"YulFunctionCall","src":"5008:32:7"},"nativeSrc":"5008:32:7","nodeType":"YulExpressionStatement","src":"5008:32:7"}]},"nativeSrc":"4926:132:7","nodeType":"YulCase","src":"4926:132:7","value":{"kind":"number","nativeSrc":"4931:1:7","nodeType":"YulLiteral","src":"4931:1:7","type":"","value":"1"}},{"body":{"nativeSrc":"5082:72:7","nodeType":"YulBlock","src":"5082:72:7","statements":[{"expression":{"arguments":[{"arguments":[{"name":"resultPtr","nativeSrc":"5116:9:7","nodeType":"YulIdentifier","src":"5116:9:7"},{"kind":"number","nativeSrc":"5127:1:7","nodeType":"YulLiteral","src":"5127:1:7","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"5112:3:7","nodeType":"YulIdentifier","src":"5112:3:7"},"nativeSrc":"5112:17:7","nodeType":"YulFunctionCall","src":"5112:17:7"},{"kind":"number","nativeSrc":"5131:4:7","nodeType":"YulLiteral","src":"5131:4:7","type":"","value":"0x3d"}],"functionName":{"name":"mstore8","nativeSrc":"5104:7:7","nodeType":"YulIdentifier","src":"5104:7:7"},"nativeSrc":"5104:32:7","nodeType":"YulFunctionCall","src":"5104:32:7"},"nativeSrc":"5104:32:7","nodeType":"YulExpressionStatement","src":"5104:32:7"}]},"nativeSrc":"5075:79:7","nodeType":"YulCase","src":"5075:79:7","value":{"kind":"number","nativeSrc":"5080:1:7","nodeType":"YulLiteral","src":"5080:1:7","type":"","value":"2"}}],"expression":{"arguments":[{"arguments":[{"name":"data","nativeSrc":"4900:4:7","nodeType":"YulIdentifier","src":"4900:4:7"}],"functionName":{"name":"mload","nativeSrc":"4894:5:7","nodeType":"YulIdentifier","src":"4894:5:7"},"nativeSrc":"4894:11:7","nodeType":"YulFunctionCall","src":"4894:11:7"},{"kind":"number","nativeSrc":"4907:1:7","nodeType":"YulLiteral","src":"4907:1:7","type":"","value":"3"}],"functionName":{"name":"mod","nativeSrc":"4890:3:7","nodeType":"YulIdentifier","src":"4890:3:7"},"nativeSrc":"4890:19:7","nodeType":"YulFunctionCall","src":"4890:19:7"},"nativeSrc":"4883:271:7","nodeType":"YulSwitch","src":"4883:271:7"}]},"condition":{"name":"withPadding","nativeSrc":"4725:11:7","nodeType":"YulIdentifier","src":"4725:11:7"},"nativeSrc":"4722:446:7","nodeType":"YulIf","src":"4722:446:7"}]},"evmVersion":"paris","externalReferences":[{"declaration":1524,"isOffset":false,"isSlot":false,"src":"2912:4:7","valueSize":1},{"declaration":1524,"isOffset":false,"isSlot":false,"src":"2947:4:7","valueSize":1},{"declaration":1524,"isOffset":false,"isSlot":false,"src":"2959:4:7","valueSize":1},{"declaration":1524,"isOffset":false,"isSlot":false,"src":"4900:4:7","valueSize":1},{"declaration":1565,"isOffset":false,"isSlot":false,"src":"2871:6:7","valueSize":1},{"declaration":1526,"isOffset":false,"isSlot":false,"src":"2771:5:7","valueSize":1},{"declaration":1528,"isOffset":false,"isSlot":false,"src":"4725:11:7","valueSize":1}],"flags":["memory-safe"],"id":1571,"nodeType":"InlineAssembly","src":"2641:2537:7"},{"expression":{"id":1572,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1565,"src":"5195:6:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1532,"id":1573,"nodeType":"Return","src":"5188:13:7"}]},"documentation":{"id":1522,"nodeType":"StructuredDocumentation","src":"1123:58:7","text":" @dev Internal table-agnostic conversion"},"id":1575,"implemented":true,"kind":"function","modifiers":[],"name":"_encode","nameLocation":"1195:7:7","nodeType":"FunctionDefinition","parameters":{"id":1529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1524,"mutability":"mutable","name":"data","nameLocation":"1216:4:7","nodeType":"VariableDeclaration","scope":1575,"src":"1203:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1523,"name":"bytes","nodeType":"ElementaryTypeName","src":"1203:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1526,"mutability":"mutable","name":"table","nameLocation":"1236:5:7","nodeType":"VariableDeclaration","scope":1575,"src":"1222:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1525,"name":"string","nodeType":"ElementaryTypeName","src":"1222:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1528,"mutability":"mutable","name":"withPadding","nameLocation":"1248:11:7","nodeType":"VariableDeclaration","scope":1575,"src":"1243:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1527,"name":"bool","nodeType":"ElementaryTypeName","src":"1243:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1202:58:7"},"returnParameters":{"id":1532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1531,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1575,"src":"1283:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1530,"name":"string","nodeType":"ElementaryTypeName","src":"1283:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1282:15:7"},"scope":1576,"src":"1186:4022:7","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1577,"src":"202:5008:7","usedErrors":[],"usedEvents":[]}],"src":"100:5111:7"},"id":7},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[1606]},"id":1607,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1578,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:8"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":1579,"nodeType":"StructuredDocumentation","src":"127:496:8","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1606,"linearizedBaseContracts":[1606],"name":"Context","nameLocation":"642:7:8","nodeType":"ContractDefinition","nodes":[{"body":{"id":1587,"nodeType":"Block","src":"718:34:8","statements":[{"expression":{"expression":{"id":1584,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:8","memberName":"sender","nodeType":"MemberAccess","src":"735:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1583,"id":1586,"nodeType":"Return","src":"728:17:8"}]},"id":1588,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:8","nodeType":"FunctionDefinition","parameters":{"id":1580,"nodeType":"ParameterList","parameters":[],"src":"675:2:8"},"returnParameters":{"id":1583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1582,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1588,"src":"709:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1581,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:8"},"scope":1606,"src":"656:96:8","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1596,"nodeType":"Block","src":"825:32:8","statements":[{"expression":{"expression":{"id":1593,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:8","memberName":"data","nodeType":"MemberAccess","src":"842:8:8","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1592,"id":1595,"nodeType":"Return","src":"835:15:8"}]},"id":1597,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:8","nodeType":"FunctionDefinition","parameters":{"id":1589,"nodeType":"ParameterList","parameters":[],"src":"775:2:8"},"returnParameters":{"id":1592,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1591,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1597,"src":"809:14:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1590,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:8"},"scope":1606,"src":"758:99:8","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1604,"nodeType":"Block","src":"935:25:8","statements":[{"expression":{"hexValue":"30","id":1602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1601,"id":1603,"nodeType":"Return","src":"945:8:8"}]},"id":1605,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:8","nodeType":"FunctionDefinition","parameters":{"id":1598,"nodeType":"ParameterList","parameters":[],"src":"892:2:8"},"returnParameters":{"id":1601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1600,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1605,"src":"926:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1599,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:8"},"scope":1606,"src":"863:97:8","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1607,"src":"624:338:8","usedErrors":[],"usedEvents":[]}],"src":"101:862:8"},"id":8},"@openzeppelin/contracts/utils/Panic.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","exportedSymbols":{"Panic":[1658]},"id":1659,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1608,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:9"},{"abstract":false,"baseContracts":[],"canonicalName":"Panic","contractDependencies":[],"contractKind":"library","documentation":{"id":1609,"nodeType":"StructuredDocumentation","src":"125:489:9","text":" @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"},"fullyImplemented":true,"id":1658,"linearizedBaseContracts":[1658],"name":"Panic","nameLocation":"665:5:9","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":1610,"nodeType":"StructuredDocumentation","src":"677:36:9","text":"@dev generic / unspecified error"},"id":1613,"mutability":"constant","name":"GENERIC","nameLocation":"744:7:9","nodeType":"VariableDeclaration","scope":1658,"src":"718:40:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1611,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783030","id":1612,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"754:4:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"internal"},{"constant":true,"documentation":{"id":1614,"nodeType":"StructuredDocumentation","src":"764:37:9","text":"@dev used by the assert() builtin"},"id":1617,"mutability":"constant","name":"ASSERT","nameLocation":"832:6:9","nodeType":"VariableDeclaration","scope":1658,"src":"806:39:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1615,"name":"uint256","nodeType":"ElementaryTypeName","src":"806:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783031","id":1616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"841:4:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x01"},"visibility":"internal"},{"constant":true,"documentation":{"id":1618,"nodeType":"StructuredDocumentation","src":"851:41:9","text":"@dev arithmetic underflow or overflow"},"id":1621,"mutability":"constant","name":"UNDER_OVERFLOW","nameLocation":"923:14:9","nodeType":"VariableDeclaration","scope":1658,"src":"897:47:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1619,"name":"uint256","nodeType":"ElementaryTypeName","src":"897:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783131","id":1620,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"940:4:9","typeDescriptions":{"typeIdentifier":"t_rational_17_by_1","typeString":"int_const 17"},"value":"0x11"},"visibility":"internal"},{"constant":true,"documentation":{"id":1622,"nodeType":"StructuredDocumentation","src":"950:35:9","text":"@dev division or modulo by zero"},"id":1625,"mutability":"constant","name":"DIVISION_BY_ZERO","nameLocation":"1016:16:9","nodeType":"VariableDeclaration","scope":1658,"src":"990:49:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1623,"name":"uint256","nodeType":"ElementaryTypeName","src":"990:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783132","id":1624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1035:4:9","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"0x12"},"visibility":"internal"},{"constant":true,"documentation":{"id":1626,"nodeType":"StructuredDocumentation","src":"1045:30:9","text":"@dev enum conversion error"},"id":1629,"mutability":"constant","name":"ENUM_CONVERSION_ERROR","nameLocation":"1106:21:9","nodeType":"VariableDeclaration","scope":1658,"src":"1080:54:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1627,"name":"uint256","nodeType":"ElementaryTypeName","src":"1080:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783231","id":1628,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1130:4:9","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"0x21"},"visibility":"internal"},{"constant":true,"documentation":{"id":1630,"nodeType":"StructuredDocumentation","src":"1140:36:9","text":"@dev invalid encoding in storage"},"id":1633,"mutability":"constant","name":"STORAGE_ENCODING_ERROR","nameLocation":"1207:22:9","nodeType":"VariableDeclaration","scope":1658,"src":"1181:55:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1631,"name":"uint256","nodeType":"ElementaryTypeName","src":"1181:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783232","id":1632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:4:9","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"visibility":"internal"},{"constant":true,"documentation":{"id":1634,"nodeType":"StructuredDocumentation","src":"1242:24:9","text":"@dev empty array pop"},"id":1637,"mutability":"constant","name":"EMPTY_ARRAY_POP","nameLocation":"1297:15:9","nodeType":"VariableDeclaration","scope":1658,"src":"1271:48:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1635,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783331","id":1636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1315:4:9","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"0x31"},"visibility":"internal"},{"constant":true,"documentation":{"id":1638,"nodeType":"StructuredDocumentation","src":"1325:35:9","text":"@dev array out of bounds access"},"id":1641,"mutability":"constant","name":"ARRAY_OUT_OF_BOUNDS","nameLocation":"1391:19:9","nodeType":"VariableDeclaration","scope":1658,"src":"1365:52:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1639,"name":"uint256","nodeType":"ElementaryTypeName","src":"1365:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783332","id":1640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1413:4:9","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"0x32"},"visibility":"internal"},{"constant":true,"documentation":{"id":1642,"nodeType":"StructuredDocumentation","src":"1423:65:9","text":"@dev resource error (too large allocation or too large array)"},"id":1645,"mutability":"constant","name":"RESOURCE_ERROR","nameLocation":"1519:14:9","nodeType":"VariableDeclaration","scope":1658,"src":"1493:47:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1643,"name":"uint256","nodeType":"ElementaryTypeName","src":"1493:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783431","id":1644,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1536:4:9","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"0x41"},"visibility":"internal"},{"constant":true,"documentation":{"id":1646,"nodeType":"StructuredDocumentation","src":"1546:42:9","text":"@dev calling invalid internal function"},"id":1649,"mutability":"constant","name":"INVALID_INTERNAL_FUNCTION","nameLocation":"1619:25:9","nodeType":"VariableDeclaration","scope":1658,"src":"1593:58:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1647,"name":"uint256","nodeType":"ElementaryTypeName","src":"1593:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783531","id":1648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1647:4:9","typeDescriptions":{"typeIdentifier":"t_rational_81_by_1","typeString":"int_const 81"},"value":"0x51"},"visibility":"internal"},{"body":{"id":1656,"nodeType":"Block","src":"1819:151:9","statements":[{"AST":{"nativeSrc":"1854:110:9","nodeType":"YulBlock","src":"1854:110:9","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1875:4:9","nodeType":"YulLiteral","src":"1875:4:9","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1881:10:9","nodeType":"YulLiteral","src":"1881:10:9","type":"","value":"0x4e487b71"}],"functionName":{"name":"mstore","nativeSrc":"1868:6:9","nodeType":"YulIdentifier","src":"1868:6:9"},"nativeSrc":"1868:24:9","nodeType":"YulFunctionCall","src":"1868:24:9"},"nativeSrc":"1868:24:9","nodeType":"YulExpressionStatement","src":"1868:24:9"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1912:4:9","nodeType":"YulLiteral","src":"1912:4:9","type":"","value":"0x20"},{"name":"code","nativeSrc":"1918:4:9","nodeType":"YulIdentifier","src":"1918:4:9"}],"functionName":{"name":"mstore","nativeSrc":"1905:6:9","nodeType":"YulIdentifier","src":"1905:6:9"},"nativeSrc":"1905:18:9","nodeType":"YulFunctionCall","src":"1905:18:9"},"nativeSrc":"1905:18:9","nodeType":"YulExpressionStatement","src":"1905:18:9"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1943:4:9","nodeType":"YulLiteral","src":"1943:4:9","type":"","value":"0x1c"},{"kind":"number","nativeSrc":"1949:4:9","nodeType":"YulLiteral","src":"1949:4:9","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1936:6:9","nodeType":"YulIdentifier","src":"1936:6:9"},"nativeSrc":"1936:18:9","nodeType":"YulFunctionCall","src":"1936:18:9"},"nativeSrc":"1936:18:9","nodeType":"YulExpressionStatement","src":"1936:18:9"}]},"evmVersion":"paris","externalReferences":[{"declaration":1652,"isOffset":false,"isSlot":false,"src":"1918:4:9","valueSize":1}],"flags":["memory-safe"],"id":1655,"nodeType":"InlineAssembly","src":"1829:135:9"}]},"documentation":{"id":1650,"nodeType":"StructuredDocumentation","src":"1658:113:9","text":"@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."},"id":1657,"implemented":true,"kind":"function","modifiers":[],"name":"panic","nameLocation":"1785:5:9","nodeType":"FunctionDefinition","parameters":{"id":1653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1652,"mutability":"mutable","name":"code","nameLocation":"1799:4:9","nodeType":"VariableDeclaration","scope":1657,"src":"1791:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1651,"name":"uint256","nodeType":"ElementaryTypeName","src":"1791:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1790:14:9"},"returnParameters":{"id":1654,"nodeType":"ParameterList","parameters":[],"src":"1819:0:9"},"scope":1658,"src":"1776:194:9","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1659,"src":"657:1315:9","usedErrors":[],"usedEvents":[]}],"src":"99:1874:9"},"id":9},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","exportedSymbols":{"ReentrancyGuard":[1727]},"id":1728,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1660,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:10"},{"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":1661,"nodeType":"StructuredDocumentation","src":"135:894:10","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n consider using {ReentrancyGuardTransient} instead.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":1727,"linearizedBaseContracts":[1727],"name":"ReentrancyGuard","nameLocation":"1048:15:10","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1664,"mutability":"constant","name":"NOT_ENTERED","nameLocation":"1843:11:10","nodeType":"VariableDeclaration","scope":1727,"src":"1818:40:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1662,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":1663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1857:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":1667,"mutability":"constant","name":"ENTERED","nameLocation":"1889:7:10","nodeType":"VariableDeclaration","scope":1727,"src":"1864:36:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1665,"name":"uint256","nodeType":"ElementaryTypeName","src":"1864:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":1666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1899:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":1669,"mutability":"mutable","name":"_status","nameLocation":"1923:7:10","nodeType":"VariableDeclaration","scope":1727,"src":"1907:23:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1668,"name":"uint256","nodeType":"ElementaryTypeName","src":"1907:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"documentation":{"id":1670,"nodeType":"StructuredDocumentation","src":"1937:52:10","text":" @dev Unauthorized reentrant call."},"errorSelector":"3ee5aeb5","id":1672,"name":"ReentrancyGuardReentrantCall","nameLocation":"2000:28:10","nodeType":"ErrorDefinition","parameters":{"id":1671,"nodeType":"ParameterList","parameters":[],"src":"2028:2:10"},"src":"1994:37:10"},{"body":{"id":1679,"nodeType":"Block","src":"2051:38:10","statements":[{"expression":{"id":1677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1675,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1669,"src":"2061:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1676,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1664,"src":"2071:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2061:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1678,"nodeType":"ExpressionStatement","src":"2061:21:10"}]},"id":1680,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1673,"nodeType":"ParameterList","parameters":[],"src":"2048:2:10"},"returnParameters":{"id":1674,"nodeType":"ParameterList","parameters":[],"src":"2051:0:10"},"scope":1727,"src":"2037:52:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1690,"nodeType":"Block","src":"2490:79:10","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1683,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1707,"src":"2500:19:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1684,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2500:21:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1685,"nodeType":"ExpressionStatement","src":"2500:21:10"},{"id":1686,"nodeType":"PlaceholderStatement","src":"2531:1:10"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1687,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1715,"src":"2542:18:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1688,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2542:20:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1689,"nodeType":"ExpressionStatement","src":"2542:20:10"}]},"documentation":{"id":1681,"nodeType":"StructuredDocumentation","src":"2095:366:10","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":1691,"name":"nonReentrant","nameLocation":"2475:12:10","nodeType":"ModifierDefinition","parameters":{"id":1682,"nodeType":"ParameterList","parameters":[],"src":"2487:2:10"},"src":"2466:103:10","virtual":false,"visibility":"internal"},{"body":{"id":1706,"nodeType":"Block","src":"2614:268:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1694,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1669,"src":"2702:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1695,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1667,"src":"2713:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2702:18:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1701,"nodeType":"IfStatement","src":"2698:86:10","trueBody":{"id":1700,"nodeType":"Block","src":"2722:62:10","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1697,"name":"ReentrancyGuardReentrantCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1672,"src":"2743:28:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":1698,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2743:30:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1699,"nodeType":"RevertStatement","src":"2736:37:10"}]}},{"expression":{"id":1704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1702,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1669,"src":"2858:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1703,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1667,"src":"2868:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2858:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1705,"nodeType":"ExpressionStatement","src":"2858:17:10"}]},"id":1707,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2584:19:10","nodeType":"FunctionDefinition","parameters":{"id":1692,"nodeType":"ParameterList","parameters":[],"src":"2603:2:10"},"returnParameters":{"id":1693,"nodeType":"ParameterList","parameters":[],"src":"2614:0:10"},"scope":1727,"src":"2575:307:10","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1714,"nodeType":"Block","src":"2926:170:10","statements":[{"expression":{"id":1712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1710,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1669,"src":"3068:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1711,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1664,"src":"3078:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3068:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1713,"nodeType":"ExpressionStatement","src":"3068:21:10"}]},"id":1715,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2897:18:10","nodeType":"FunctionDefinition","parameters":{"id":1708,"nodeType":"ParameterList","parameters":[],"src":"2915:2:10"},"returnParameters":{"id":1709,"nodeType":"ParameterList","parameters":[],"src":"2926:0:10"},"scope":1727,"src":"2888:208:10","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1725,"nodeType":"Block","src":"3339:42:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1721,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1669,"src":"3356:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1722,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1667,"src":"3367:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3356:18:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1720,"id":1724,"nodeType":"Return","src":"3349:25:10"}]},"documentation":{"id":1716,"nodeType":"StructuredDocumentation","src":"3102:168:10","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"id":1726,"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"3284:23:10","nodeType":"FunctionDefinition","parameters":{"id":1717,"nodeType":"ParameterList","parameters":[],"src":"3307:2:10"},"returnParameters":{"id":1720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1719,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1726,"src":"3333:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1718,"name":"bool","nodeType":"ElementaryTypeName","src":"3333:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3332:6:10"},"scope":1727,"src":"3275:106:10","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":1728,"src":"1030:2353:10","usedErrors":[1672],"usedEvents":[]}],"src":"109:3275:10"},"id":10},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[4786],"SafeCast":[6551],"SignedMath":[6695],"Strings":[3129]},"id":3130,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1729,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:11"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":1731,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3130,"sourceUnit":4787,"src":"127:37:11","symbolAliases":[{"foreign":{"id":1730,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4786,"src":"135:4:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./math/SafeCast.sol","id":1733,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3130,"sourceUnit":6552,"src":"165:45:11","symbolAliases":[{"foreign":{"id":1732,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6551,"src":"173:8:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":1735,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3130,"sourceUnit":6696,"src":"211:49:11","symbolAliases":[{"foreign":{"id":1734,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6695,"src":"219:10:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":1736,"nodeType":"StructuredDocumentation","src":"262:34:11","text":" @dev String operations."},"fullyImplemented":true,"id":3129,"linearizedBaseContracts":[3129],"name":"Strings","nameLocation":"305:7:11","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1738,"libraryName":{"id":1737,"name":"SafeCast","nameLocations":["325:8:11"],"nodeType":"IdentifierPath","referencedDeclaration":6551,"src":"325:8:11"},"nodeType":"UsingForDirective","src":"319:21:11"},{"constant":true,"id":1741,"mutability":"constant","name":"HEX_DIGITS","nameLocation":"371:10:11","nodeType":"VariableDeclaration","scope":3129,"src":"346:56:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":1739,"name":"bytes16","nodeType":"ElementaryTypeName","src":"346:7:11","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":1740,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"384:18:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":1744,"mutability":"constant","name":"ADDRESS_LENGTH","nameLocation":"431:14:11","nodeType":"VariableDeclaration","scope":3129,"src":"408:42:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1742,"name":"uint8","nodeType":"ElementaryTypeName","src":"408:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":1743,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"448:2:11","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"constant":true,"id":1780,"mutability":"constant","name":"SPECIAL_CHARS_LOOKUP","nameLocation":"481:20:11","nodeType":"VariableDeclaration","scope":3129,"src":"456:302:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1745,"name":"uint256","nodeType":"ElementaryTypeName","src":"456:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_4951760157141521116776380160_by_1","typeString":"int_const 4951760157141521116776380160"},"id":1779,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_17179883264_by_1","typeString":"int_const 17179883264"},"id":1774,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_14080_by_1","typeString":"int_const 14080"},"id":1769,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_5888_by_1","typeString":"int_const 5888"},"id":1764,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_1792_by_1","typeString":"int_const 1792"},"id":1759,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_768_by_1","typeString":"int_const 768"},"id":1754,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":1748,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"513:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783038","id":1747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"518:4:11","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x08"},"src":"513:9:11","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":1749,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"512:11:11","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"},"id":1752,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1750,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"552:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783039","id":1751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"557:4:11","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"0x09"},"src":"552:9:11","typeDescriptions":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"}}],"id":1753,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"551:11:11","typeDescriptions":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"}},"src":"512:50:11","typeDescriptions":{"typeIdentifier":"t_rational_768_by_1","typeString":"int_const 768"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"},"id":1757,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"585:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783061","id":1756,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"590:4:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"0x0a"},"src":"585:9:11","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"}}],"id":1758,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"584:11:11","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"}},"src":"512:83:11","typeDescriptions":{"typeIdentifier":"t_rational_1792_by_1","typeString":"int_const 1792"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"},"id":1762,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1760,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"622:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783063","id":1761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"627:4:11","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"0x0c"},"src":"622:9:11","typeDescriptions":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"}}],"id":1763,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"621:11:11","typeDescriptions":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"}},"src":"512:120:11","typeDescriptions":{"typeIdentifier":"t_rational_5888_by_1","typeString":"int_const 5888"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"},"id":1767,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"661:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783064","id":1766,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"666:4:11","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"0x0d"},"src":"661:9:11","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"}}],"id":1768,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"660:11:11","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"}},"src":"512:159:11","typeDescriptions":{"typeIdentifier":"t_rational_14080_by_1","typeString":"int_const 14080"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"},"id":1772,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"706:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783232","id":1771,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"711:4:11","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"src":"706:9:11","typeDescriptions":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"}}],"id":1773,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"705:11:11","typeDescriptions":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"}},"src":"512:204:11","typeDescriptions":{"typeIdentifier":"t_rational_17179883264_by_1","typeString":"int_const 17179883264"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"},"id":1777,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1775,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"748:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783563","id":1776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"753:4:11","typeDescriptions":{"typeIdentifier":"t_rational_92_by_1","typeString":"int_const 92"},"value":"0x5c"},"src":"748:9:11","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"}}],"id":1778,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"747:11:11","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"}},"src":"512:246:11","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521116776380160_by_1","typeString":"int_const 4951760157141521116776380160"}},"visibility":"private"},{"documentation":{"id":1781,"nodeType":"StructuredDocumentation","src":"778:81:11","text":" @dev The `value` string doesn't fit in the specified `length`."},"errorSelector":"e22e27eb","id":1787,"name":"StringsInsufficientHexLength","nameLocation":"870:28:11","nodeType":"ErrorDefinition","parameters":{"id":1786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1783,"mutability":"mutable","name":"value","nameLocation":"907:5:11","nodeType":"VariableDeclaration","scope":1787,"src":"899:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1782,"name":"uint256","nodeType":"ElementaryTypeName","src":"899:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1785,"mutability":"mutable","name":"length","nameLocation":"922:6:11","nodeType":"VariableDeclaration","scope":1787,"src":"914:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1784,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"898:31:11"},"src":"864:66:11"},{"documentation":{"id":1788,"nodeType":"StructuredDocumentation","src":"936:108:11","text":" @dev The string being parsed contains characters that are not in scope of the given base."},"errorSelector":"94e2737e","id":1790,"name":"StringsInvalidChar","nameLocation":"1055:18:11","nodeType":"ErrorDefinition","parameters":{"id":1789,"nodeType":"ParameterList","parameters":[],"src":"1073:2:11"},"src":"1049:27:11"},{"documentation":{"id":1791,"nodeType":"StructuredDocumentation","src":"1082:84:11","text":" @dev The string being parsed is not a properly formatted address."},"errorSelector":"1d15ae44","id":1793,"name":"StringsInvalidAddressFormat","nameLocation":"1177:27:11","nodeType":"ErrorDefinition","parameters":{"id":1792,"nodeType":"ParameterList","parameters":[],"src":"1204:2:11"},"src":"1171:36:11"},{"body":{"id":1840,"nodeType":"Block","src":"1379:561:11","statements":[{"id":1839,"nodeType":"UncheckedBlock","src":"1389:545:11","statements":[{"assignments":[1802],"declarations":[{"constant":false,"id":1802,"mutability":"mutable","name":"length","nameLocation":"1421:6:11","nodeType":"VariableDeclaration","scope":1839,"src":"1413:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1801,"name":"uint256","nodeType":"ElementaryTypeName","src":"1413:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1809,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1805,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1796,"src":"1441:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1803,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4786,"src":"1430:4:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4786_$","typeString":"type(library Math)"}},"id":1804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1435:5:11","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":4618,"src":"1430:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1430:17:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1450:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1430:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1413:38:11"},{"assignments":[1811],"declarations":[{"constant":false,"id":1811,"mutability":"mutable","name":"buffer","nameLocation":"1479:6:11","nodeType":"VariableDeclaration","scope":1839,"src":"1465:20:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1810,"name":"string","nodeType":"ElementaryTypeName","src":"1465:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1816,"initialValue":{"arguments":[{"id":1814,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1802,"src":"1499:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1813,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1488:10:11","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":1812,"name":"string","nodeType":"ElementaryTypeName","src":"1492:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":1815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1488:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"1465:41:11"},{"assignments":[1818],"declarations":[{"constant":false,"id":1818,"mutability":"mutable","name":"ptr","nameLocation":"1528:3:11","nodeType":"VariableDeclaration","scope":1839,"src":"1520:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1817,"name":"uint256","nodeType":"ElementaryTypeName","src":"1520:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1819,"nodeType":"VariableDeclarationStatement","src":"1520:11:11"},{"AST":{"nativeSrc":"1570:67:11","nodeType":"YulBlock","src":"1570:67:11","statements":[{"nativeSrc":"1588:35:11","nodeType":"YulAssignment","src":"1588:35:11","value":{"arguments":[{"name":"buffer","nativeSrc":"1599:6:11","nodeType":"YulIdentifier","src":"1599:6:11"},{"arguments":[{"kind":"number","nativeSrc":"1611:2:11","nodeType":"YulLiteral","src":"1611:2:11","type":"","value":"32"},{"name":"length","nativeSrc":"1615:6:11","nodeType":"YulIdentifier","src":"1615:6:11"}],"functionName":{"name":"add","nativeSrc":"1607:3:11","nodeType":"YulIdentifier","src":"1607:3:11"},"nativeSrc":"1607:15:11","nodeType":"YulFunctionCall","src":"1607:15:11"}],"functionName":{"name":"add","nativeSrc":"1595:3:11","nodeType":"YulIdentifier","src":"1595:3:11"},"nativeSrc":"1595:28:11","nodeType":"YulFunctionCall","src":"1595:28:11"},"variableNames":[{"name":"ptr","nativeSrc":"1588:3:11","nodeType":"YulIdentifier","src":"1588:3:11"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1811,"isOffset":false,"isSlot":false,"src":"1599:6:11","valueSize":1},{"declaration":1802,"isOffset":false,"isSlot":false,"src":"1615:6:11","valueSize":1},{"declaration":1818,"isOffset":false,"isSlot":false,"src":"1588:3:11","valueSize":1}],"flags":["memory-safe"],"id":1820,"nodeType":"InlineAssembly","src":"1545:92:11"},{"body":{"id":1835,"nodeType":"Block","src":"1663:234:11","statements":[{"expression":{"id":1823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1681:5:11","subExpression":{"id":1822,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1818,"src":"1681:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1824,"nodeType":"ExpressionStatement","src":"1681:5:11"},{"AST":{"nativeSrc":"1729:86:11","nodeType":"YulBlock","src":"1729:86:11","statements":[{"expression":{"arguments":[{"name":"ptr","nativeSrc":"1759:3:11","nodeType":"YulIdentifier","src":"1759:3:11"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1773:5:11","nodeType":"YulIdentifier","src":"1773:5:11"},{"kind":"number","nativeSrc":"1780:2:11","nodeType":"YulLiteral","src":"1780:2:11","type":"","value":"10"}],"functionName":{"name":"mod","nativeSrc":"1769:3:11","nodeType":"YulIdentifier","src":"1769:3:11"},"nativeSrc":"1769:14:11","nodeType":"YulFunctionCall","src":"1769:14:11"},{"name":"HEX_DIGITS","nativeSrc":"1785:10:11","nodeType":"YulIdentifier","src":"1785:10:11"}],"functionName":{"name":"byte","nativeSrc":"1764:4:11","nodeType":"YulIdentifier","src":"1764:4:11"},"nativeSrc":"1764:32:11","nodeType":"YulFunctionCall","src":"1764:32:11"}],"functionName":{"name":"mstore8","nativeSrc":"1751:7:11","nodeType":"YulIdentifier","src":"1751:7:11"},"nativeSrc":"1751:46:11","nodeType":"YulFunctionCall","src":"1751:46:11"},"nativeSrc":"1751:46:11","nodeType":"YulExpressionStatement","src":"1751:46:11"}]},"evmVersion":"paris","externalReferences":[{"declaration":1741,"isOffset":false,"isSlot":false,"src":"1785:10:11","valueSize":1},{"declaration":1818,"isOffset":false,"isSlot":false,"src":"1759:3:11","valueSize":1},{"declaration":1796,"isOffset":false,"isSlot":false,"src":"1773:5:11","valueSize":1}],"flags":["memory-safe"],"id":1825,"nodeType":"InlineAssembly","src":"1704:111:11"},{"expression":{"id":1828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1826,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1796,"src":"1832:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":1827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1841:2:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1832:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1829,"nodeType":"ExpressionStatement","src":"1832:11:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1830,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1796,"src":"1865:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1831,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1874:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1865:10:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1834,"nodeType":"IfStatement","src":"1861:21:11","trueBody":{"id":1833,"nodeType":"Break","src":"1877:5:11"}}]},"condition":{"hexValue":"74727565","id":1821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1657:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":1836,"nodeType":"WhileStatement","src":"1650:247:11"},{"expression":{"id":1837,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1811,"src":"1917:6:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1800,"id":1838,"nodeType":"Return","src":"1910:13:11"}]}]},"documentation":{"id":1794,"nodeType":"StructuredDocumentation","src":"1213:90:11","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":1841,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"1317:8:11","nodeType":"FunctionDefinition","parameters":{"id":1797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1796,"mutability":"mutable","name":"value","nameLocation":"1334:5:11","nodeType":"VariableDeclaration","scope":1841,"src":"1326:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1795,"name":"uint256","nodeType":"ElementaryTypeName","src":"1326:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1325:15:11"},"returnParameters":{"id":1800,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1799,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1841,"src":"1364:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1798,"name":"string","nodeType":"ElementaryTypeName","src":"1364:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1363:15:11"},"scope":3129,"src":"1308:632:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1866,"nodeType":"Block","src":"2116:92:11","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1852,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1844,"src":"2147:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":1853,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2155:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2147:9:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":1856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2165:2:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":1857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2147:20:11","trueExpression":{"hexValue":"2d","id":1855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2159:3:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":1861,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1844,"src":"2193:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":1859,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6695,"src":"2178:10:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$6695_$","typeString":"type(library SignedMath)"}},"id":1860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2189:3:11","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":6694,"src":"2178:14:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":1862,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2178:21:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1858,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1841,"src":"2169:8:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":1863,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2169:31:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1850,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2133:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1849,"name":"string","nodeType":"ElementaryTypeName","src":"2133:6:11","typeDescriptions":{}}},"id":1851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2140:6:11","memberName":"concat","nodeType":"MemberAccess","src":"2133:13:11","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":1864,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2133:68:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1848,"id":1865,"nodeType":"Return","src":"2126:75:11"}]},"documentation":{"id":1842,"nodeType":"StructuredDocumentation","src":"1946:89:11","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":1867,"implemented":true,"kind":"function","modifiers":[],"name":"toStringSigned","nameLocation":"2049:14:11","nodeType":"FunctionDefinition","parameters":{"id":1845,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1844,"mutability":"mutable","name":"value","nameLocation":"2071:5:11","nodeType":"VariableDeclaration","scope":1867,"src":"2064:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1843,"name":"int256","nodeType":"ElementaryTypeName","src":"2064:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"2063:14:11"},"returnParameters":{"id":1848,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1847,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1867,"src":"2101:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1846,"name":"string","nodeType":"ElementaryTypeName","src":"2101:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2100:15:11"},"scope":3129,"src":"2040:168:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1886,"nodeType":"Block","src":"2387:100:11","statements":[{"id":1885,"nodeType":"UncheckedBlock","src":"2397:84:11","statements":[{"expression":{"arguments":[{"id":1876,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1870,"src":"2440:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1879,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1870,"src":"2459:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1877,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4786,"src":"2447:4:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4786_$","typeString":"type(library Math)"}},"id":1878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2452:6:11","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":4729,"src":"2447:11:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1880,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2447:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1881,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2468:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2447:22:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1875,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1887,1970,1990],"referencedDeclaration":1970,"src":"2428:11:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":1883,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2428:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1874,"id":1884,"nodeType":"Return","src":"2421:49:11"}]}]},"documentation":{"id":1868,"nodeType":"StructuredDocumentation","src":"2214:94:11","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":1887,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2322:11:11","nodeType":"FunctionDefinition","parameters":{"id":1871,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1870,"mutability":"mutable","name":"value","nameLocation":"2342:5:11","nodeType":"VariableDeclaration","scope":1887,"src":"2334:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1869,"name":"uint256","nodeType":"ElementaryTypeName","src":"2334:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2333:15:11"},"returnParameters":{"id":1874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1873,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1887,"src":"2372:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1872,"name":"string","nodeType":"ElementaryTypeName","src":"2372:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2371:15:11"},"scope":3129,"src":"2313:174:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1969,"nodeType":"Block","src":"2700:435:11","statements":[{"assignments":[1898],"declarations":[{"constant":false,"id":1898,"mutability":"mutable","name":"localValue","nameLocation":"2718:10:11","nodeType":"VariableDeclaration","scope":1969,"src":"2710:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1897,"name":"uint256","nodeType":"ElementaryTypeName","src":"2710:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1900,"initialValue":{"id":1899,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1890,"src":"2731:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2710:26:11"},{"assignments":[1902],"declarations":[{"constant":false,"id":1902,"mutability":"mutable","name":"buffer","nameLocation":"2759:6:11","nodeType":"VariableDeclaration","scope":1969,"src":"2746:19:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1901,"name":"bytes","nodeType":"ElementaryTypeName","src":"2746:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1911,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1905,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2778:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1906,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1892,"src":"2782:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2778:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":1908,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2791:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2778:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1904,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2768:9:11","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":1903,"name":"bytes","nodeType":"ElementaryTypeName","src":"2772:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":1910,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2768:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2746:47:11"},{"expression":{"id":1916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1912,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1902,"src":"2803:6:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1914,"indexExpression":{"hexValue":"30","id":1913,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2810:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2803:9:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1915,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2815:3:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2803:15:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1917,"nodeType":"ExpressionStatement","src":"2803:15:11"},{"expression":{"id":1922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1918,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1902,"src":"2828:6:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1920,"indexExpression":{"hexValue":"31","id":1919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2835:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2828:9:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":1921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2840:3:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2828:15:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1923,"nodeType":"ExpressionStatement","src":"2828:15:11"},{"body":{"id":1952,"nodeType":"Block","src":"2898:95:11","statements":[{"expression":{"id":1946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1938,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1902,"src":"2912:6:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1940,"indexExpression":{"id":1939,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1925,"src":"2919:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2912:9:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":1941,"name":"HEX_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1741,"src":"2924:10:11","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":1945,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1942,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1898,"src":"2935:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":1943,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2948:3:11","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2935:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2924:28:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2912:40:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1947,"nodeType":"ExpressionStatement","src":"2912:40:11"},{"expression":{"id":1950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1948,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1898,"src":"2966:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":1949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2981:1:11","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2966:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1951,"nodeType":"ExpressionStatement","src":"2966:16:11"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1932,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1925,"src":"2886:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":1933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2890:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2886:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1953,"initializationExpression":{"assignments":[1925],"declarations":[{"constant":false,"id":1925,"mutability":"mutable","name":"i","nameLocation":"2866:1:11","nodeType":"VariableDeclaration","scope":1953,"src":"2858:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1924,"name":"uint256","nodeType":"ElementaryTypeName","src":"2858:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1931,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1926,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2870:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1927,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1892,"src":"2874:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2870:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2883:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2870:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2858:26:11"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":1936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2893:3:11","subExpression":{"id":1935,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1925,"src":"2895:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1937,"nodeType":"ExpressionStatement","src":"2893:3:11"},"nodeType":"ForStatement","src":"2853:140:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1954,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1898,"src":"3006:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1955,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3020:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3006:15:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1963,"nodeType":"IfStatement","src":"3002:96:11","trueBody":{"id":1962,"nodeType":"Block","src":"3023:75:11","statements":[{"errorCall":{"arguments":[{"id":1958,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1890,"src":"3073:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1959,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1892,"src":"3080:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1957,"name":"StringsInsufficientHexLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1787,"src":"3044:28:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (uint256,uint256) pure returns (error)"}},"id":1960,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3044:43:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1961,"nodeType":"RevertStatement","src":"3037:50:11"}]}},{"expression":{"arguments":[{"id":1966,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1902,"src":"3121:6:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1965,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3114:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1964,"name":"string","nodeType":"ElementaryTypeName","src":"3114:6:11","typeDescriptions":{}}},"id":1967,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3114:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1896,"id":1968,"nodeType":"Return","src":"3107:21:11"}]},"documentation":{"id":1888,"nodeType":"StructuredDocumentation","src":"2493:112:11","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":1970,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2619:11:11","nodeType":"FunctionDefinition","parameters":{"id":1893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1890,"mutability":"mutable","name":"value","nameLocation":"2639:5:11","nodeType":"VariableDeclaration","scope":1970,"src":"2631:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1889,"name":"uint256","nodeType":"ElementaryTypeName","src":"2631:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1892,"mutability":"mutable","name":"length","nameLocation":"2654:6:11","nodeType":"VariableDeclaration","scope":1970,"src":"2646:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1891,"name":"uint256","nodeType":"ElementaryTypeName","src":"2646:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2630:31:11"},"returnParameters":{"id":1896,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1895,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1970,"src":"2685:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1894,"name":"string","nodeType":"ElementaryTypeName","src":"2685:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2684:15:11"},"scope":3129,"src":"2610:525:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1989,"nodeType":"Block","src":"3367:75:11","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":1983,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1973,"src":"3412:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1982,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3404:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1981,"name":"uint160","nodeType":"ElementaryTypeName","src":"3404:7:11","typeDescriptions":{}}},"id":1984,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3404:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":1980,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3396:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1979,"name":"uint256","nodeType":"ElementaryTypeName","src":"3396:7:11","typeDescriptions":{}}},"id":1985,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3396:22:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1986,"name":"ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1744,"src":"3420:14:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1978,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1887,1970,1990],"referencedDeclaration":1970,"src":"3384:11:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":1987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3384:51:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1977,"id":1988,"nodeType":"Return","src":"3377:58:11"}]},"documentation":{"id":1971,"nodeType":"StructuredDocumentation","src":"3141:148:11","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."},"id":1990,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"3303:11:11","nodeType":"FunctionDefinition","parameters":{"id":1974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1973,"mutability":"mutable","name":"addr","nameLocation":"3323:4:11","nodeType":"VariableDeclaration","scope":1990,"src":"3315:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1972,"name":"address","nodeType":"ElementaryTypeName","src":"3315:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3314:14:11"},"returnParameters":{"id":1977,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1976,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1990,"src":"3352:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1975,"name":"string","nodeType":"ElementaryTypeName","src":"3352:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3351:15:11"},"scope":3129,"src":"3294:148:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2054,"nodeType":"Block","src":"3699:642:11","statements":[{"assignments":[1999],"declarations":[{"constant":false,"id":1999,"mutability":"mutable","name":"buffer","nameLocation":"3722:6:11","nodeType":"VariableDeclaration","scope":2054,"src":"3709:19:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1998,"name":"bytes","nodeType":"ElementaryTypeName","src":"3709:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2006,"initialValue":{"arguments":[{"arguments":[{"id":2003,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1993,"src":"3749:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2002,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1887,1970,1990],"referencedDeclaration":1990,"src":"3737:11:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":2004,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3737:17:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2001,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3731:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2000,"name":"bytes","nodeType":"ElementaryTypeName","src":"3731:5:11","typeDescriptions":{}}},"id":2005,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3731:24:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3709:46:11"},{"assignments":[2008],"declarations":[{"constant":false,"id":2008,"mutability":"mutable","name":"hashValue","nameLocation":"3848:9:11","nodeType":"VariableDeclaration","scope":2054,"src":"3840:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2007,"name":"uint256","nodeType":"ElementaryTypeName","src":"3840:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2009,"nodeType":"VariableDeclarationStatement","src":"3840:17:11"},{"AST":{"nativeSrc":"3892:78:11","nodeType":"YulBlock","src":"3892:78:11","statements":[{"nativeSrc":"3906:54:11","nodeType":"YulAssignment","src":"3906:54:11","value":{"arguments":[{"kind":"number","nativeSrc":"3923:2:11","nodeType":"YulLiteral","src":"3923:2:11","type":"","value":"96"},{"arguments":[{"arguments":[{"name":"buffer","nativeSrc":"3941:6:11","nodeType":"YulIdentifier","src":"3941:6:11"},{"kind":"number","nativeSrc":"3949:4:11","nodeType":"YulLiteral","src":"3949:4:11","type":"","value":"0x22"}],"functionName":{"name":"add","nativeSrc":"3937:3:11","nodeType":"YulIdentifier","src":"3937:3:11"},"nativeSrc":"3937:17:11","nodeType":"YulFunctionCall","src":"3937:17:11"},{"kind":"number","nativeSrc":"3956:2:11","nodeType":"YulLiteral","src":"3956:2:11","type":"","value":"40"}],"functionName":{"name":"keccak256","nativeSrc":"3927:9:11","nodeType":"YulIdentifier","src":"3927:9:11"},"nativeSrc":"3927:32:11","nodeType":"YulFunctionCall","src":"3927:32:11"}],"functionName":{"name":"shr","nativeSrc":"3919:3:11","nodeType":"YulIdentifier","src":"3919:3:11"},"nativeSrc":"3919:41:11","nodeType":"YulFunctionCall","src":"3919:41:11"},"variableNames":[{"name":"hashValue","nativeSrc":"3906:9:11","nodeType":"YulIdentifier","src":"3906:9:11"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1999,"isOffset":false,"isSlot":false,"src":"3941:6:11","valueSize":1},{"declaration":2008,"isOffset":false,"isSlot":false,"src":"3906:9:11","valueSize":1}],"flags":["memory-safe"],"id":2010,"nodeType":"InlineAssembly","src":"3867:103:11"},{"body":{"id":2047,"nodeType":"Block","src":"4013:291:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2021,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2008,"src":"4119:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":2022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4131:3:11","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"4119:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"37","id":2024,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4137:1:11","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"4119:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":2028,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1999,"src":"4148:6:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2030,"indexExpression":{"id":2029,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2012,"src":"4155:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4148:9:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2027,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4142:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2026,"name":"uint8","nodeType":"ElementaryTypeName","src":"4142:5:11","typeDescriptions":{}}},"id":2031,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4142:16:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":2032,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4161:2:11","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"4142:21:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4119:44:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2042,"nodeType":"IfStatement","src":"4115:150:11","trueBody":{"id":2041,"nodeType":"Block","src":"4165:100:11","statements":[{"expression":{"id":2039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2035,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1999,"src":"4233:6:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2037,"indexExpression":{"id":2036,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2012,"src":"4240:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4233:9:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"^=","rightHandSide":{"hexValue":"30783230","id":2038,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4246:4:11","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"4233:17:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2040,"nodeType":"ExpressionStatement","src":"4233:17:11"}]}},{"expression":{"id":2045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2043,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2008,"src":"4278:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2044,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4292:1:11","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"4278:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2046,"nodeType":"ExpressionStatement","src":"4278:15:11"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2015,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2012,"src":"4001:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":2016,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4005:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4001:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2048,"initializationExpression":{"assignments":[2012],"declarations":[{"constant":false,"id":2012,"mutability":"mutable","name":"i","nameLocation":"3993:1:11","nodeType":"VariableDeclaration","scope":2048,"src":"3985:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2011,"name":"uint256","nodeType":"ElementaryTypeName","src":"3985:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2014,"initialValue":{"hexValue":"3431","id":2013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3997:2:11","typeDescriptions":{"typeIdentifier":"t_rational_41_by_1","typeString":"int_const 41"},"value":"41"},"nodeType":"VariableDeclarationStatement","src":"3985:14:11"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":2019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"4008:3:11","subExpression":{"id":2018,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2012,"src":"4010:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2020,"nodeType":"ExpressionStatement","src":"4008:3:11"},"nodeType":"ForStatement","src":"3980:324:11"},{"expression":{"arguments":[{"id":2051,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1999,"src":"4327:6:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2050,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4320:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2049,"name":"string","nodeType":"ElementaryTypeName","src":"4320:6:11","typeDescriptions":{}}},"id":2052,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4320:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1997,"id":2053,"nodeType":"Return","src":"4313:21:11"}]},"documentation":{"id":1991,"nodeType":"StructuredDocumentation","src":"3448:165:11","text":" @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n representation, according to EIP-55."},"id":2055,"implemented":true,"kind":"function","modifiers":[],"name":"toChecksumHexString","nameLocation":"3627:19:11","nodeType":"FunctionDefinition","parameters":{"id":1994,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1993,"mutability":"mutable","name":"addr","nameLocation":"3655:4:11","nodeType":"VariableDeclaration","scope":2055,"src":"3647:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1992,"name":"address","nodeType":"ElementaryTypeName","src":"3647:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3646:14:11"},"returnParameters":{"id":1997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1996,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2055,"src":"3684:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1995,"name":"string","nodeType":"ElementaryTypeName","src":"3684:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3683:15:11"},"scope":3129,"src":"3618:723:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2091,"nodeType":"Block","src":"4496:104:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2067,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2058,"src":"4519:1:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2066,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4513:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2065,"name":"bytes","nodeType":"ElementaryTypeName","src":"4513:5:11","typeDescriptions":{}}},"id":2068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4513:8:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4522:6:11","memberName":"length","nodeType":"MemberAccess","src":"4513:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2072,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2060,"src":"4538:1:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2071,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4532:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2070,"name":"bytes","nodeType":"ElementaryTypeName","src":"4532:5:11","typeDescriptions":{}}},"id":2073,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4532:8:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4541:6:11","memberName":"length","nodeType":"MemberAccess","src":"4532:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4513:34:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2079,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2058,"src":"4567:1:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2078,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4561:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2077,"name":"bytes","nodeType":"ElementaryTypeName","src":"4561:5:11","typeDescriptions":{}}},"id":2080,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4561:8:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2076,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4551:9:11","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2081,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4551:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":2085,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2060,"src":"4590:1:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2084,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4584:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2083,"name":"bytes","nodeType":"ElementaryTypeName","src":"4584:5:11","typeDescriptions":{}}},"id":2086,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4584:8:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2082,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4574:9:11","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4574:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4551:42:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4513:80:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2064,"id":2090,"nodeType":"Return","src":"4506:87:11"}]},"documentation":{"id":2056,"nodeType":"StructuredDocumentation","src":"4347:66:11","text":" @dev Returns true if the two strings are equal."},"id":2092,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"4427:5:11","nodeType":"FunctionDefinition","parameters":{"id":2061,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2058,"mutability":"mutable","name":"a","nameLocation":"4447:1:11","nodeType":"VariableDeclaration","scope":2092,"src":"4433:15:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2057,"name":"string","nodeType":"ElementaryTypeName","src":"4433:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2060,"mutability":"mutable","name":"b","nameLocation":"4464:1:11","nodeType":"VariableDeclaration","scope":2092,"src":"4450:15:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2059,"name":"string","nodeType":"ElementaryTypeName","src":"4450:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4432:34:11"},"returnParameters":{"id":2064,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2063,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2092,"src":"4490:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2062,"name":"bool","nodeType":"ElementaryTypeName","src":"4490:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4489:6:11"},"scope":3129,"src":"4418:182:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2110,"nodeType":"Block","src":"4897:64:11","statements":[{"expression":{"arguments":[{"id":2101,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2095,"src":"4924:5:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2102,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4931:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2105,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2095,"src":"4940:5:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2104,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4934:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2103,"name":"bytes","nodeType":"ElementaryTypeName","src":"4934:5:11","typeDescriptions":{}}},"id":2106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4934:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4947:6:11","memberName":"length","nodeType":"MemberAccess","src":"4934:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2100,"name":"parseUint","nodeType":"Identifier","overloadedDeclarations":[2111,2142],"referencedDeclaration":2142,"src":"4914:9:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":2108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4914:40:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2099,"id":2109,"nodeType":"Return","src":"4907:47:11"}]},"documentation":{"id":2093,"nodeType":"StructuredDocumentation","src":"4606:214:11","text":" @dev Parse a decimal string and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":2111,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"4834:9:11","nodeType":"FunctionDefinition","parameters":{"id":2096,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2095,"mutability":"mutable","name":"input","nameLocation":"4858:5:11","nodeType":"VariableDeclaration","scope":2111,"src":"4844:19:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2094,"name":"string","nodeType":"ElementaryTypeName","src":"4844:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4843:21:11"},"returnParameters":{"id":2099,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2098,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2111,"src":"4888:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2097,"name":"uint256","nodeType":"ElementaryTypeName","src":"4888:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4887:9:11"},"scope":3129,"src":"4825:136:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2141,"nodeType":"Block","src":"5366:153:11","statements":[{"assignments":[2124,2126],"declarations":[{"constant":false,"id":2124,"mutability":"mutable","name":"success","nameLocation":"5382:7:11","nodeType":"VariableDeclaration","scope":2141,"src":"5377:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2123,"name":"bool","nodeType":"ElementaryTypeName","src":"5377:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2126,"mutability":"mutable","name":"value","nameLocation":"5399:5:11","nodeType":"VariableDeclaration","scope":2141,"src":"5391:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2125,"name":"uint256","nodeType":"ElementaryTypeName","src":"5391:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2132,"initialValue":{"arguments":[{"id":2128,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2114,"src":"5421:5:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2129,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2116,"src":"5428:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2130,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2118,"src":"5435:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2127,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[2163,2200],"referencedDeclaration":2200,"src":"5408:12:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2131,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5408:31:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"5376:63:11"},{"condition":{"id":2134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5453:8:11","subExpression":{"id":2133,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2124,"src":"5454:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2138,"nodeType":"IfStatement","src":"5449:41:11","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2135,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1790,"src":"5470:18:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":2136,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5470:20:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2137,"nodeType":"RevertStatement","src":"5463:27:11"}},{"expression":{"id":2139,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2126,"src":"5507:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2122,"id":2140,"nodeType":"Return","src":"5500:12:11"}]},"documentation":{"id":2112,"nodeType":"StructuredDocumentation","src":"4967:294:11","text":" @dev Variant of {parseUint-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":2142,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"5275:9:11","nodeType":"FunctionDefinition","parameters":{"id":2119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2114,"mutability":"mutable","name":"input","nameLocation":"5299:5:11","nodeType":"VariableDeclaration","scope":2142,"src":"5285:19:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2113,"name":"string","nodeType":"ElementaryTypeName","src":"5285:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2116,"mutability":"mutable","name":"begin","nameLocation":"5314:5:11","nodeType":"VariableDeclaration","scope":2142,"src":"5306:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2115,"name":"uint256","nodeType":"ElementaryTypeName","src":"5306:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2118,"mutability":"mutable","name":"end","nameLocation":"5329:3:11","nodeType":"VariableDeclaration","scope":2142,"src":"5321:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2117,"name":"uint256","nodeType":"ElementaryTypeName","src":"5321:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5284:49:11"},"returnParameters":{"id":2122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2121,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2142,"src":"5357:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2120,"name":"uint256","nodeType":"ElementaryTypeName","src":"5357:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5356:9:11"},"scope":3129,"src":"5266:253:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2162,"nodeType":"Block","src":"5840:83:11","statements":[{"expression":{"arguments":[{"id":2153,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2145,"src":"5886:5:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5893:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2157,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2145,"src":"5902:5:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2156,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5896:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2155,"name":"bytes","nodeType":"ElementaryTypeName","src":"5896:5:11","typeDescriptions":{}}},"id":2158,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5896:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5909:6:11","memberName":"length","nodeType":"MemberAccess","src":"5896:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2152,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2270,"src":"5857:28:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2160,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5857:59:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2151,"id":2161,"nodeType":"Return","src":"5850:66:11"}]},"documentation":{"id":2143,"nodeType":"StructuredDocumentation","src":"5525:215:11","text":" @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":2163,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"5754:12:11","nodeType":"FunctionDefinition","parameters":{"id":2146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2145,"mutability":"mutable","name":"input","nameLocation":"5781:5:11","nodeType":"VariableDeclaration","scope":2163,"src":"5767:19:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2144,"name":"string","nodeType":"ElementaryTypeName","src":"5767:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5766:21:11"},"returnParameters":{"id":2151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2148,"mutability":"mutable","name":"success","nameLocation":"5816:7:11","nodeType":"VariableDeclaration","scope":2163,"src":"5811:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2147,"name":"bool","nodeType":"ElementaryTypeName","src":"5811:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2150,"mutability":"mutable","name":"value","nameLocation":"5833:5:11","nodeType":"VariableDeclaration","scope":2163,"src":"5825:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2149,"name":"uint256","nodeType":"ElementaryTypeName","src":"5825:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5810:29:11"},"scope":3129,"src":"5745:178:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2199,"nodeType":"Block","src":"6325:144:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2177,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2170,"src":"6339:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2180,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2166,"src":"6351:5:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2179,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6345:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2178,"name":"bytes","nodeType":"ElementaryTypeName","src":"6345:5:11","typeDescriptions":{}}},"id":2181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6345:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6358:6:11","memberName":"length","nodeType":"MemberAccess","src":"6345:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6339:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2184,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2168,"src":"6368:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2185,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2170,"src":"6376:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6368:11:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6339:40:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2192,"nodeType":"IfStatement","src":"6335:63:11","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2188,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6389:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2189,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6396:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2190,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6388:10:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2176,"id":2191,"nodeType":"Return","src":"6381:17:11"}},{"expression":{"arguments":[{"id":2194,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2166,"src":"6444:5:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2195,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2168,"src":"6451:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2196,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2170,"src":"6458:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2193,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2270,"src":"6415:28:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2197,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6415:47:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2176,"id":2198,"nodeType":"Return","src":"6408:54:11"}]},"documentation":{"id":2164,"nodeType":"StructuredDocumentation","src":"5929:238:11","text":" @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":2200,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"6181:12:11","nodeType":"FunctionDefinition","parameters":{"id":2171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2166,"mutability":"mutable","name":"input","nameLocation":"6217:5:11","nodeType":"VariableDeclaration","scope":2200,"src":"6203:19:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2165,"name":"string","nodeType":"ElementaryTypeName","src":"6203:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2168,"mutability":"mutable","name":"begin","nameLocation":"6240:5:11","nodeType":"VariableDeclaration","scope":2200,"src":"6232:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2167,"name":"uint256","nodeType":"ElementaryTypeName","src":"6232:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2170,"mutability":"mutable","name":"end","nameLocation":"6263:3:11","nodeType":"VariableDeclaration","scope":2200,"src":"6255:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2169,"name":"uint256","nodeType":"ElementaryTypeName","src":"6255:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6193:79:11"},"returnParameters":{"id":2176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2173,"mutability":"mutable","name":"success","nameLocation":"6301:7:11","nodeType":"VariableDeclaration","scope":2200,"src":"6296:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2172,"name":"bool","nodeType":"ElementaryTypeName","src":"6296:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2175,"mutability":"mutable","name":"value","nameLocation":"6318:5:11","nodeType":"VariableDeclaration","scope":2200,"src":"6310:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2174,"name":"uint256","nodeType":"ElementaryTypeName","src":"6310:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6295:29:11"},"scope":3129,"src":"6172:297:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2269,"nodeType":"Block","src":"6872:347:11","statements":[{"assignments":[2215],"declarations":[{"constant":false,"id":2215,"mutability":"mutable","name":"buffer","nameLocation":"6895:6:11","nodeType":"VariableDeclaration","scope":2269,"src":"6882:19:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2214,"name":"bytes","nodeType":"ElementaryTypeName","src":"6882:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2220,"initialValue":{"arguments":[{"id":2218,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2203,"src":"6910:5:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2217,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6904:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2216,"name":"bytes","nodeType":"ElementaryTypeName","src":"6904:5:11","typeDescriptions":{}}},"id":2219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6904:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"6882:34:11"},{"assignments":[2222],"declarations":[{"constant":false,"id":2222,"mutability":"mutable","name":"result","nameLocation":"6935:6:11","nodeType":"VariableDeclaration","scope":2269,"src":"6927:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2221,"name":"uint256","nodeType":"ElementaryTypeName","src":"6927:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2224,"initialValue":{"hexValue":"30","id":2223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6944:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6927:18:11"},{"body":{"id":2263,"nodeType":"Block","src":"6993:189:11","statements":[{"assignments":[2236],"declarations":[{"constant":false,"id":2236,"mutability":"mutable","name":"chr","nameLocation":"7013:3:11","nodeType":"VariableDeclaration","scope":2263,"src":"7007:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2235,"name":"uint8","nodeType":"ElementaryTypeName","src":"7007:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2246,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":2241,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2215,"src":"7062:6:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2242,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2226,"src":"7070:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2240,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3128,"src":"7039:22:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2243,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7039:33:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2239,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7032:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2238,"name":"bytes1","nodeType":"ElementaryTypeName","src":"7032:6:11","typeDescriptions":{}}},"id":2244,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7032:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2237,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2950,"src":"7019:12:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":2245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7019:55:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"7007:67:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2247,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2236,"src":"7092:3:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"39","id":2248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7098:1:11","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"9"},"src":"7092:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2254,"nodeType":"IfStatement","src":"7088:30:11","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7109:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7116:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2252,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"7108:10:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2213,"id":2253,"nodeType":"Return","src":"7101:17:11"}},{"expression":{"id":2257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2255,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2222,"src":"7132:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3130","id":2256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7142:2:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"7132:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2258,"nodeType":"ExpressionStatement","src":"7132:12:11"},{"expression":{"id":2261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2259,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2222,"src":"7158:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2260,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2236,"src":"7168:3:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"7158:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2262,"nodeType":"ExpressionStatement","src":"7158:13:11"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2229,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2226,"src":"6979:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2230,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2207,"src":"6983:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6979:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2264,"initializationExpression":{"assignments":[2226],"declarations":[{"constant":false,"id":2226,"mutability":"mutable","name":"i","nameLocation":"6968:1:11","nodeType":"VariableDeclaration","scope":2264,"src":"6960:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2225,"name":"uint256","nodeType":"ElementaryTypeName","src":"6960:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2228,"initialValue":{"id":2227,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2205,"src":"6972:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6960:17:11"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":2233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"6988:3:11","subExpression":{"id":2232,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2226,"src":"6990:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2234,"nodeType":"ExpressionStatement","src":"6988:3:11"},"nodeType":"ForStatement","src":"6955:227:11"},{"expression":{"components":[{"hexValue":"74727565","id":2265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7199:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":2266,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2222,"src":"7205:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2267,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7198:14:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2213,"id":2268,"nodeType":"Return","src":"7191:21:11"}]},"documentation":{"id":2201,"nodeType":"StructuredDocumentation","src":"6475:224:11","text":" @dev Implementation of {tryParseUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":2270,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseUintUncheckedBounds","nameLocation":"6713:28:11","nodeType":"FunctionDefinition","parameters":{"id":2208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2203,"mutability":"mutable","name":"input","nameLocation":"6765:5:11","nodeType":"VariableDeclaration","scope":2270,"src":"6751:19:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2202,"name":"string","nodeType":"ElementaryTypeName","src":"6751:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2205,"mutability":"mutable","name":"begin","nameLocation":"6788:5:11","nodeType":"VariableDeclaration","scope":2270,"src":"6780:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2204,"name":"uint256","nodeType":"ElementaryTypeName","src":"6780:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2207,"mutability":"mutable","name":"end","nameLocation":"6811:3:11","nodeType":"VariableDeclaration","scope":2270,"src":"6803:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2206,"name":"uint256","nodeType":"ElementaryTypeName","src":"6803:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6741:79:11"},"returnParameters":{"id":2213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2210,"mutability":"mutable","name":"success","nameLocation":"6848:7:11","nodeType":"VariableDeclaration","scope":2270,"src":"6843:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2209,"name":"bool","nodeType":"ElementaryTypeName","src":"6843:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2212,"mutability":"mutable","name":"value","nameLocation":"6865:5:11","nodeType":"VariableDeclaration","scope":2270,"src":"6857:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2211,"name":"uint256","nodeType":"ElementaryTypeName","src":"6857:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6842:29:11"},"scope":3129,"src":"6704:515:11","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2288,"nodeType":"Block","src":"7516:63:11","statements":[{"expression":{"arguments":[{"id":2279,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2273,"src":"7542:5:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7549:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2283,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2273,"src":"7558:5:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2282,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7552:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2281,"name":"bytes","nodeType":"ElementaryTypeName","src":"7552:5:11","typeDescriptions":{}}},"id":2284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7552:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7565:6:11","memberName":"length","nodeType":"MemberAccess","src":"7552:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2278,"name":"parseInt","nodeType":"Identifier","overloadedDeclarations":[2289,2320],"referencedDeclaration":2320,"src":"7533:8:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (int256)"}},"id":2286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7533:39:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2277,"id":2287,"nodeType":"Return","src":"7526:46:11"}]},"documentation":{"id":2271,"nodeType":"StructuredDocumentation","src":"7225:216:11","text":" @dev Parse a decimal string and returns the value as a `int256`.\n Requirements:\n - The string must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":2289,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7455:8:11","nodeType":"FunctionDefinition","parameters":{"id":2274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2273,"mutability":"mutable","name":"input","nameLocation":"7478:5:11","nodeType":"VariableDeclaration","scope":2289,"src":"7464:19:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2272,"name":"string","nodeType":"ElementaryTypeName","src":"7464:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7463:21:11"},"returnParameters":{"id":2277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2276,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2289,"src":"7508:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2275,"name":"int256","nodeType":"ElementaryTypeName","src":"7508:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7507:8:11"},"scope":3129,"src":"7446:133:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2319,"nodeType":"Block","src":"7984:151:11","statements":[{"assignments":[2302,2304],"declarations":[{"constant":false,"id":2302,"mutability":"mutable","name":"success","nameLocation":"8000:7:11","nodeType":"VariableDeclaration","scope":2319,"src":"7995:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2301,"name":"bool","nodeType":"ElementaryTypeName","src":"7995:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2304,"mutability":"mutable","name":"value","nameLocation":"8016:5:11","nodeType":"VariableDeclaration","scope":2319,"src":"8009:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2303,"name":"int256","nodeType":"ElementaryTypeName","src":"8009:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":2310,"initialValue":{"arguments":[{"id":2306,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2292,"src":"8037:5:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2307,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2294,"src":"8044:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2308,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2296,"src":"8051:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2305,"name":"tryParseInt","nodeType":"Identifier","overloadedDeclarations":[2341,2383],"referencedDeclaration":2383,"src":"8025:11:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":2309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8025:30:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"nodeType":"VariableDeclarationStatement","src":"7994:61:11"},{"condition":{"id":2312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"8069:8:11","subExpression":{"id":2311,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2302,"src":"8070:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2316,"nodeType":"IfStatement","src":"8065:41:11","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2313,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1790,"src":"8086:18:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":2314,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8086:20:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2315,"nodeType":"RevertStatement","src":"8079:27:11"}},{"expression":{"id":2317,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2304,"src":"8123:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2300,"id":2318,"nodeType":"Return","src":"8116:12:11"}]},"documentation":{"id":2290,"nodeType":"StructuredDocumentation","src":"7585:296:11","text":" @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":2320,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7895:8:11","nodeType":"FunctionDefinition","parameters":{"id":2297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2292,"mutability":"mutable","name":"input","nameLocation":"7918:5:11","nodeType":"VariableDeclaration","scope":2320,"src":"7904:19:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2291,"name":"string","nodeType":"ElementaryTypeName","src":"7904:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2294,"mutability":"mutable","name":"begin","nameLocation":"7933:5:11","nodeType":"VariableDeclaration","scope":2320,"src":"7925:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2293,"name":"uint256","nodeType":"ElementaryTypeName","src":"7925:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2296,"mutability":"mutable","name":"end","nameLocation":"7948:3:11","nodeType":"VariableDeclaration","scope":2320,"src":"7940:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2295,"name":"uint256","nodeType":"ElementaryTypeName","src":"7940:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7903:49:11"},"returnParameters":{"id":2300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2299,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2320,"src":"7976:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2298,"name":"int256","nodeType":"ElementaryTypeName","src":"7976:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7975:8:11"},"scope":3129,"src":"7886:249:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2340,"nodeType":"Block","src":"8526:82:11","statements":[{"expression":{"arguments":[{"id":2331,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2323,"src":"8571:5:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2332,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8578:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2335,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2323,"src":"8587:5:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2334,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8581:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2333,"name":"bytes","nodeType":"ElementaryTypeName","src":"8581:5:11","typeDescriptions":{}}},"id":2336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8581:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8594:6:11","memberName":"length","nodeType":"MemberAccess","src":"8581:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2330,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2504,"src":"8543:27:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":2338,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8543:58:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2329,"id":2339,"nodeType":"Return","src":"8536:65:11"}]},"documentation":{"id":2321,"nodeType":"StructuredDocumentation","src":"8141:287:11","text":" @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":2341,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8442:11:11","nodeType":"FunctionDefinition","parameters":{"id":2324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2323,"mutability":"mutable","name":"input","nameLocation":"8468:5:11","nodeType":"VariableDeclaration","scope":2341,"src":"8454:19:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2322,"name":"string","nodeType":"ElementaryTypeName","src":"8454:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8453:21:11"},"returnParameters":{"id":2329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2326,"mutability":"mutable","name":"success","nameLocation":"8503:7:11","nodeType":"VariableDeclaration","scope":2341,"src":"8498:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2325,"name":"bool","nodeType":"ElementaryTypeName","src":"8498:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2328,"mutability":"mutable","name":"value","nameLocation":"8519:5:11","nodeType":"VariableDeclaration","scope":2341,"src":"8512:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2327,"name":"int256","nodeType":"ElementaryTypeName","src":"8512:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"8497:28:11"},"scope":3129,"src":"8433:175:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"constant":true,"id":2346,"mutability":"constant","name":"ABS_MIN_INT256","nameLocation":"8639:14:11","nodeType":"VariableDeclaration","scope":3129,"src":"8614:50:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2342,"name":"uint256","nodeType":"ElementaryTypeName","src":"8614:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"},"id":2345,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8656:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"323535","id":2344,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8661:3:11","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"8656:8:11","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"}},"visibility":"private"},{"body":{"id":2382,"nodeType":"Block","src":"9130:143:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2360,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2353,"src":"9144:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2363,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2349,"src":"9156:5:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2362,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9150:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2361,"name":"bytes","nodeType":"ElementaryTypeName","src":"9150:5:11","typeDescriptions":{}}},"id":2364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9150:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9163:6:11","memberName":"length","nodeType":"MemberAccess","src":"9150:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9144:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2367,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2351,"src":"9173:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2368,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2353,"src":"9181:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9173:11:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9144:40:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2375,"nodeType":"IfStatement","src":"9140:63:11","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2371,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9194:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2372,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9201:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2373,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"9193:10:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2359,"id":2374,"nodeType":"Return","src":"9186:17:11"}},{"expression":{"arguments":[{"id":2377,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2349,"src":"9248:5:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2378,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2351,"src":"9255:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2379,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2353,"src":"9262:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2376,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2504,"src":"9220:27:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":2380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9220:46:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2359,"id":2381,"nodeType":"Return","src":"9213:53:11"}]},"documentation":{"id":2347,"nodeType":"StructuredDocumentation","src":"8671:303:11","text":" @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character or if the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":2383,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8988:11:11","nodeType":"FunctionDefinition","parameters":{"id":2354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2349,"mutability":"mutable","name":"input","nameLocation":"9023:5:11","nodeType":"VariableDeclaration","scope":2383,"src":"9009:19:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2348,"name":"string","nodeType":"ElementaryTypeName","src":"9009:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2351,"mutability":"mutable","name":"begin","nameLocation":"9046:5:11","nodeType":"VariableDeclaration","scope":2383,"src":"9038:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2350,"name":"uint256","nodeType":"ElementaryTypeName","src":"9038:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2353,"mutability":"mutable","name":"end","nameLocation":"9069:3:11","nodeType":"VariableDeclaration","scope":2383,"src":"9061:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2352,"name":"uint256","nodeType":"ElementaryTypeName","src":"9061:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8999:79:11"},"returnParameters":{"id":2359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2356,"mutability":"mutable","name":"success","nameLocation":"9107:7:11","nodeType":"VariableDeclaration","scope":2383,"src":"9102:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2355,"name":"bool","nodeType":"ElementaryTypeName","src":"9102:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2358,"mutability":"mutable","name":"value","nameLocation":"9123:5:11","nodeType":"VariableDeclaration","scope":2383,"src":"9116:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2357,"name":"int256","nodeType":"ElementaryTypeName","src":"9116:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9101:28:11"},"scope":3129,"src":"8979:294:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2503,"nodeType":"Block","src":"9673:812:11","statements":[{"assignments":[2398],"declarations":[{"constant":false,"id":2398,"mutability":"mutable","name":"buffer","nameLocation":"9696:6:11","nodeType":"VariableDeclaration","scope":2503,"src":"9683:19:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2397,"name":"bytes","nodeType":"ElementaryTypeName","src":"9683:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2403,"initialValue":{"arguments":[{"id":2401,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2386,"src":"9711:5:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2400,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9705:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2399,"name":"bytes","nodeType":"ElementaryTypeName","src":"9705:5:11","typeDescriptions":{}}},"id":2402,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9705:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"9683:34:11"},{"assignments":[2405],"declarations":[{"constant":false,"id":2405,"mutability":"mutable","name":"sign","nameLocation":"9781:4:11","nodeType":"VariableDeclaration","scope":2503,"src":"9774:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":2404,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9774:6:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":2421,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2406,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2388,"src":"9788:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2407,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2390,"src":"9797:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9788:12:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"arguments":[{"id":2416,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2398,"src":"9845:6:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2417,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2388,"src":"9853:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2415,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3128,"src":"9822:22:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9822:37:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2414,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9815:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2413,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9815:6:11","typeDescriptions":{}}},"id":2419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9815:45:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9788:72:11","trueExpression":{"arguments":[{"hexValue":"30","id":2411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9810:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2410,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9803:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2409,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9803:6:11","typeDescriptions":{}}},"id":2412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9803:9:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"9774:86:11"},{"assignments":[2423],"declarations":[{"constant":false,"id":2423,"mutability":"mutable","name":"positiveSign","nameLocation":"9946:12:11","nodeType":"VariableDeclaration","scope":2503,"src":"9941:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2422,"name":"bool","nodeType":"ElementaryTypeName","src":"9941:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2430,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2424,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2405,"src":"9961:4:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2b","id":2427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9976:3:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""},"value":"+"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""}],"id":2426,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9969:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2425,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9969:6:11","typeDescriptions":{}}},"id":2428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9969:11:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"9961:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9941:39:11"},{"assignments":[2432],"declarations":[{"constant":false,"id":2432,"mutability":"mutable","name":"negativeSign","nameLocation":"9995:12:11","nodeType":"VariableDeclaration","scope":2503,"src":"9990:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2431,"name":"bool","nodeType":"ElementaryTypeName","src":"9990:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2439,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2433,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2405,"src":"10010:4:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2d","id":2436,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10025:3:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""}],"id":2435,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10018:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2434,"name":"bytes1","nodeType":"ElementaryTypeName","src":"10018:6:11","typeDescriptions":{}}},"id":2437,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10018:11:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"10010:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9990:39:11"},{"assignments":[2441],"declarations":[{"constant":false,"id":2441,"mutability":"mutable","name":"offset","nameLocation":"10047:6:11","nodeType":"VariableDeclaration","scope":2503,"src":"10039:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2440,"name":"uint256","nodeType":"ElementaryTypeName","src":"10039:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2448,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2442,"name":"positiveSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2423,"src":"10057:12:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":2443,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2432,"src":"10073:12:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10057:28:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2445,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10056:30:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10087:6:11","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6550,"src":"10056:37:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":2447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10056:39:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10039:56:11"},{"assignments":[2450,2452],"declarations":[{"constant":false,"id":2450,"mutability":"mutable","name":"absSuccess","nameLocation":"10112:10:11","nodeType":"VariableDeclaration","scope":2503,"src":"10107:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2449,"name":"bool","nodeType":"ElementaryTypeName","src":"10107:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2452,"mutability":"mutable","name":"absValue","nameLocation":"10132:8:11","nodeType":"VariableDeclaration","scope":2503,"src":"10124:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2451,"name":"uint256","nodeType":"ElementaryTypeName","src":"10124:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2460,"initialValue":{"arguments":[{"id":2454,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2386,"src":"10157:5:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2455,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2388,"src":"10164:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2456,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2441,"src":"10172:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10164:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2458,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2390,"src":"10180:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2453,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[2163,2200],"referencedDeclaration":2200,"src":"10144:12:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10144:40:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"10106:78:11"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2461,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2450,"src":"10199:10:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2462,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2452,"src":"10213:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2463,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2346,"src":"10224:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10213:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10199:39:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2481,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2450,"src":"10341:10:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":2482,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2432,"src":"10355:12:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10341:26:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2484,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2452,"src":"10371:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2485,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2346,"src":"10383:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10371:26:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10341:56:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10469:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2498,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10476:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2499,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10468:10:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2396,"id":2500,"nodeType":"Return","src":"10461:17:11"},"id":2501,"nodeType":"IfStatement","src":"10337:141:11","trueBody":{"id":2496,"nodeType":"Block","src":"10399:56:11","statements":[{"expression":{"components":[{"hexValue":"74727565","id":2488,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10421:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"arguments":[{"id":2491,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10432:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2490,"name":"int256","nodeType":"ElementaryTypeName","src":"10432:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":2489,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10427:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2492,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10427:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":2493,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10440:3:11","memberName":"min","nodeType":"MemberAccess","src":"10427:16:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2494,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10420:24:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2396,"id":2495,"nodeType":"Return","src":"10413:31:11"}]}},"id":2502,"nodeType":"IfStatement","src":"10195:283:11","trueBody":{"id":2480,"nodeType":"Block","src":"10240:91:11","statements":[{"expression":{"components":[{"hexValue":"74727565","id":2466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10262:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"condition":{"id":2467,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2432,"src":"10268:12:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":2475,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2452,"src":"10310:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2474,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10303:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2473,"name":"int256","nodeType":"ElementaryTypeName","src":"10303:6:11","typeDescriptions":{}}},"id":2476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10303:16:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":2477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10268:51:11","trueExpression":{"id":2472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"10283:17:11","subExpression":{"arguments":[{"id":2470,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2452,"src":"10291:8:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2469,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10284:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2468,"name":"int256","nodeType":"ElementaryTypeName","src":"10284:6:11","typeDescriptions":{}}},"id":2471,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10284:16:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2478,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10261:59:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2396,"id":2479,"nodeType":"Return","src":"10254:66:11"}]}}]},"documentation":{"id":2384,"nodeType":"StructuredDocumentation","src":"9279:223:11","text":" @dev Implementation of {tryParseInt-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":2504,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseIntUncheckedBounds","nameLocation":"9516:27:11","nodeType":"FunctionDefinition","parameters":{"id":2391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2386,"mutability":"mutable","name":"input","nameLocation":"9567:5:11","nodeType":"VariableDeclaration","scope":2504,"src":"9553:19:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2385,"name":"string","nodeType":"ElementaryTypeName","src":"9553:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2388,"mutability":"mutable","name":"begin","nameLocation":"9590:5:11","nodeType":"VariableDeclaration","scope":2504,"src":"9582:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2387,"name":"uint256","nodeType":"ElementaryTypeName","src":"9582:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2390,"mutability":"mutable","name":"end","nameLocation":"9613:3:11","nodeType":"VariableDeclaration","scope":2504,"src":"9605:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2389,"name":"uint256","nodeType":"ElementaryTypeName","src":"9605:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9543:79:11"},"returnParameters":{"id":2396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2393,"mutability":"mutable","name":"success","nameLocation":"9650:7:11","nodeType":"VariableDeclaration","scope":2504,"src":"9645:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2392,"name":"bool","nodeType":"ElementaryTypeName","src":"9645:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2395,"mutability":"mutable","name":"value","nameLocation":"9666:5:11","nodeType":"VariableDeclaration","scope":2504,"src":"9659:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2394,"name":"int256","nodeType":"ElementaryTypeName","src":"9659:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9644:28:11"},"scope":3129,"src":"9507:978:11","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2522,"nodeType":"Block","src":"10830:67:11","statements":[{"expression":{"arguments":[{"id":2513,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2507,"src":"10860:5:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2514,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10867:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2517,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2507,"src":"10876:5:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2516,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10870:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2515,"name":"bytes","nodeType":"ElementaryTypeName","src":"10870:5:11","typeDescriptions":{}}},"id":2518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10870:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10883:6:11","memberName":"length","nodeType":"MemberAccess","src":"10870:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2512,"name":"parseHexUint","nodeType":"Identifier","overloadedDeclarations":[2523,2554],"referencedDeclaration":2554,"src":"10847:12:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":2520,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10847:43:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2511,"id":2521,"nodeType":"Return","src":"10840:50:11"}]},"documentation":{"id":2505,"nodeType":"StructuredDocumentation","src":"10491:259:11","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":2523,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"10764:12:11","nodeType":"FunctionDefinition","parameters":{"id":2508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2507,"mutability":"mutable","name":"input","nameLocation":"10791:5:11","nodeType":"VariableDeclaration","scope":2523,"src":"10777:19:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2506,"name":"string","nodeType":"ElementaryTypeName","src":"10777:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10776:21:11"},"returnParameters":{"id":2511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2510,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2523,"src":"10821:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2509,"name":"uint256","nodeType":"ElementaryTypeName","src":"10821:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10820:9:11"},"scope":3129,"src":"10755:142:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2553,"nodeType":"Block","src":"11318:156:11","statements":[{"assignments":[2536,2538],"declarations":[{"constant":false,"id":2536,"mutability":"mutable","name":"success","nameLocation":"11334:7:11","nodeType":"VariableDeclaration","scope":2553,"src":"11329:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2535,"name":"bool","nodeType":"ElementaryTypeName","src":"11329:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2538,"mutability":"mutable","name":"value","nameLocation":"11351:5:11","nodeType":"VariableDeclaration","scope":2553,"src":"11343:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2537,"name":"uint256","nodeType":"ElementaryTypeName","src":"11343:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2544,"initialValue":{"arguments":[{"id":2540,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2526,"src":"11376:5:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2541,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2528,"src":"11383:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2542,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2530,"src":"11390:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2539,"name":"tryParseHexUint","nodeType":"Identifier","overloadedDeclarations":[2575,2612],"referencedDeclaration":2612,"src":"11360:15:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2543,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11360:34:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11328:66:11"},{"condition":{"id":2546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"11408:8:11","subExpression":{"id":2545,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2536,"src":"11409:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2550,"nodeType":"IfStatement","src":"11404:41:11","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2547,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1790,"src":"11425:18:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":2548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11425:20:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2549,"nodeType":"RevertStatement","src":"11418:27:11"}},{"expression":{"id":2551,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2538,"src":"11462:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2534,"id":2552,"nodeType":"Return","src":"11455:12:11"}]},"documentation":{"id":2524,"nodeType":"StructuredDocumentation","src":"10903:307:11","text":" @dev Variant of {parseHexUint-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":2554,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"11224:12:11","nodeType":"FunctionDefinition","parameters":{"id":2531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2526,"mutability":"mutable","name":"input","nameLocation":"11251:5:11","nodeType":"VariableDeclaration","scope":2554,"src":"11237:19:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2525,"name":"string","nodeType":"ElementaryTypeName","src":"11237:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2528,"mutability":"mutable","name":"begin","nameLocation":"11266:5:11","nodeType":"VariableDeclaration","scope":2554,"src":"11258:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2527,"name":"uint256","nodeType":"ElementaryTypeName","src":"11258:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2530,"mutability":"mutable","name":"end","nameLocation":"11281:3:11","nodeType":"VariableDeclaration","scope":2554,"src":"11273:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2529,"name":"uint256","nodeType":"ElementaryTypeName","src":"11273:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11236:49:11"},"returnParameters":{"id":2534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2533,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2554,"src":"11309:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2532,"name":"uint256","nodeType":"ElementaryTypeName","src":"11309:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11308:9:11"},"scope":3129,"src":"11215:259:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2574,"nodeType":"Block","src":"11801:86:11","statements":[{"expression":{"arguments":[{"id":2565,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2557,"src":"11850:5:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2566,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11857:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2569,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2557,"src":"11866:5:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2568,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11860:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2567,"name":"bytes","nodeType":"ElementaryTypeName","src":"11860:5:11","typeDescriptions":{}}},"id":2570,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11860:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11873:6:11","memberName":"length","nodeType":"MemberAccess","src":"11860:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2564,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2715,"src":"11818:31:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2572,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11818:62:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2563,"id":2573,"nodeType":"Return","src":"11811:69:11"}]},"documentation":{"id":2555,"nodeType":"StructuredDocumentation","src":"11480:218:11","text":" @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":2575,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"11712:15:11","nodeType":"FunctionDefinition","parameters":{"id":2558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2557,"mutability":"mutable","name":"input","nameLocation":"11742:5:11","nodeType":"VariableDeclaration","scope":2575,"src":"11728:19:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2556,"name":"string","nodeType":"ElementaryTypeName","src":"11728:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11727:21:11"},"returnParameters":{"id":2563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2560,"mutability":"mutable","name":"success","nameLocation":"11777:7:11","nodeType":"VariableDeclaration","scope":2575,"src":"11772:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2559,"name":"bool","nodeType":"ElementaryTypeName","src":"11772:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2562,"mutability":"mutable","name":"value","nameLocation":"11794:5:11","nodeType":"VariableDeclaration","scope":2575,"src":"11786:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2561,"name":"uint256","nodeType":"ElementaryTypeName","src":"11786:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11771:29:11"},"scope":3129,"src":"11703:184:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2611,"nodeType":"Block","src":"12295:147:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2589,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2582,"src":"12309:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2592,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2578,"src":"12321:5:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2591,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12315:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2590,"name":"bytes","nodeType":"ElementaryTypeName","src":"12315:5:11","typeDescriptions":{}}},"id":2593,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12315:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12328:6:11","memberName":"length","nodeType":"MemberAccess","src":"12315:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12309:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2596,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2580,"src":"12338:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2597,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2582,"src":"12346:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12338:11:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12309:40:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2604,"nodeType":"IfStatement","src":"12305:63:11","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2600,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12359:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12366:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2602,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"12358:10:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2588,"id":2603,"nodeType":"Return","src":"12351:17:11"}},{"expression":{"arguments":[{"id":2606,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2578,"src":"12417:5:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2607,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2580,"src":"12424:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2608,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2582,"src":"12431:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2605,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2715,"src":"12385:31:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2609,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12385:50:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2588,"id":2610,"nodeType":"Return","src":"12378:57:11"}]},"documentation":{"id":2576,"nodeType":"StructuredDocumentation","src":"11893:241:11","text":" @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":2612,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"12148:15:11","nodeType":"FunctionDefinition","parameters":{"id":2583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2578,"mutability":"mutable","name":"input","nameLocation":"12187:5:11","nodeType":"VariableDeclaration","scope":2612,"src":"12173:19:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2577,"name":"string","nodeType":"ElementaryTypeName","src":"12173:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2580,"mutability":"mutable","name":"begin","nameLocation":"12210:5:11","nodeType":"VariableDeclaration","scope":2612,"src":"12202:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2579,"name":"uint256","nodeType":"ElementaryTypeName","src":"12202:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2582,"mutability":"mutable","name":"end","nameLocation":"12233:3:11","nodeType":"VariableDeclaration","scope":2612,"src":"12225:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2581,"name":"uint256","nodeType":"ElementaryTypeName","src":"12225:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12163:79:11"},"returnParameters":{"id":2588,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2585,"mutability":"mutable","name":"success","nameLocation":"12271:7:11","nodeType":"VariableDeclaration","scope":2612,"src":"12266:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2584,"name":"bool","nodeType":"ElementaryTypeName","src":"12266:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2587,"mutability":"mutable","name":"value","nameLocation":"12288:5:11","nodeType":"VariableDeclaration","scope":2612,"src":"12280:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2586,"name":"uint256","nodeType":"ElementaryTypeName","src":"12280:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12265:29:11"},"scope":3129,"src":"12139:303:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2714,"nodeType":"Block","src":"12851:881:11","statements":[{"assignments":[2627],"declarations":[{"constant":false,"id":2627,"mutability":"mutable","name":"buffer","nameLocation":"12874:6:11","nodeType":"VariableDeclaration","scope":2714,"src":"12861:19:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2626,"name":"bytes","nodeType":"ElementaryTypeName","src":"12861:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2632,"initialValue":{"arguments":[{"id":2630,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2615,"src":"12889:5:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2629,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12883:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2628,"name":"bytes","nodeType":"ElementaryTypeName","src":"12883:5:11","typeDescriptions":{}}},"id":2631,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12883:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"12861:34:11"},{"assignments":[2634],"declarations":[{"constant":false,"id":2634,"mutability":"mutable","name":"hasPrefix","nameLocation":"12948:9:11","nodeType":"VariableDeclaration","scope":2714,"src":"12943:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2633,"name":"bool","nodeType":"ElementaryTypeName","src":"12943:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2654,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2635,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2619,"src":"12961:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2636,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2617,"src":"12967:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2637,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12975:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12967:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12961:15:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2640,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12960:17:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":2652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2644,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2627,"src":"13011:6:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2645,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2617,"src":"13019:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2643,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3128,"src":"12988:22:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12988:37:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2642,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12981:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":2641,"name":"bytes2","nodeType":"ElementaryTypeName","src":"12981:6:11","typeDescriptions":{}}},"id":2647,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12981:45:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":2650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13037:4:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":2649,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13030:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":2648,"name":"bytes2","nodeType":"ElementaryTypeName","src":"13030:6:11","typeDescriptions":{}}},"id":2651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13030:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"12981:61:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12960:82:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"12943:99:11"},{"assignments":[2656],"declarations":[{"constant":false,"id":2656,"mutability":"mutable","name":"offset","nameLocation":"13131:6:11","nodeType":"VariableDeclaration","scope":2714,"src":"13123:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2655,"name":"uint256","nodeType":"ElementaryTypeName","src":"13123:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2662,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2657,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2634,"src":"13140:9:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13150:6:11","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6550,"src":"13140:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":2659,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13140:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":2660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13161:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"13140:22:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13123:39:11"},{"assignments":[2664],"declarations":[{"constant":false,"id":2664,"mutability":"mutable","name":"result","nameLocation":"13181:6:11","nodeType":"VariableDeclaration","scope":2714,"src":"13173:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2663,"name":"uint256","nodeType":"ElementaryTypeName","src":"13173:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2666,"initialValue":{"hexValue":"30","id":2665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13190:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13173:18:11"},{"body":{"id":2708,"nodeType":"Block","src":"13248:447:11","statements":[{"assignments":[2680],"declarations":[{"constant":false,"id":2680,"mutability":"mutable","name":"chr","nameLocation":"13268:3:11","nodeType":"VariableDeclaration","scope":2708,"src":"13262:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2679,"name":"uint8","nodeType":"ElementaryTypeName","src":"13262:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2690,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":2685,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2627,"src":"13317:6:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2686,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2668,"src":"13325:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2684,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3128,"src":"13294:22:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13294:33:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2683,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13287:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2682,"name":"bytes1","nodeType":"ElementaryTypeName","src":"13287:6:11","typeDescriptions":{}}},"id":2688,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13287:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2681,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2950,"src":"13274:12:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":2689,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13274:55:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"13262:67:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2691,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2680,"src":"13347:3:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3135","id":2692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13353:2:11","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"15"},"src":"13347:8:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2698,"nodeType":"IfStatement","src":"13343:31:11","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2694,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13365:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13372:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2696,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"13364:10:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2625,"id":2697,"nodeType":"Return","src":"13357:17:11"}},{"expression":{"id":2701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2699,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2664,"src":"13388:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3136","id":2700,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13398:2:11","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"13388:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2702,"nodeType":"ExpressionStatement","src":"13388:12:11"},{"id":2707,"nodeType":"UncheckedBlock","src":"13414:271:11","statements":[{"expression":{"id":2705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2703,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2664,"src":"13657:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2704,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2680,"src":"13667:3:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"13657:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2706,"nodeType":"ExpressionStatement","src":"13657:13:11"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2673,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2668,"src":"13234:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2674,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2619,"src":"13238:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13234:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2709,"initializationExpression":{"assignments":[2668],"declarations":[{"constant":false,"id":2668,"mutability":"mutable","name":"i","nameLocation":"13214:1:11","nodeType":"VariableDeclaration","scope":2709,"src":"13206:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2667,"name":"uint256","nodeType":"ElementaryTypeName","src":"13206:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2672,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2669,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2617,"src":"13218:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2670,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2656,"src":"13226:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13218:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13206:26:11"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":2677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"13243:3:11","subExpression":{"id":2676,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2668,"src":"13245:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2678,"nodeType":"ExpressionStatement","src":"13243:3:11"},"nodeType":"ForStatement","src":"13201:494:11"},{"expression":{"components":[{"hexValue":"74727565","id":2710,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13712:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":2711,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2664,"src":"13718:6:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2712,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13711:14:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2625,"id":2713,"nodeType":"Return","src":"13704:21:11"}]},"documentation":{"id":2613,"nodeType":"StructuredDocumentation","src":"12448:227:11","text":" @dev Implementation of {tryParseHexUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":2715,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseHexUintUncheckedBounds","nameLocation":"12689:31:11","nodeType":"FunctionDefinition","parameters":{"id":2620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2615,"mutability":"mutable","name":"input","nameLocation":"12744:5:11","nodeType":"VariableDeclaration","scope":2715,"src":"12730:19:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2614,"name":"string","nodeType":"ElementaryTypeName","src":"12730:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2617,"mutability":"mutable","name":"begin","nameLocation":"12767:5:11","nodeType":"VariableDeclaration","scope":2715,"src":"12759:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2616,"name":"uint256","nodeType":"ElementaryTypeName","src":"12759:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2619,"mutability":"mutable","name":"end","nameLocation":"12790:3:11","nodeType":"VariableDeclaration","scope":2715,"src":"12782:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2618,"name":"uint256","nodeType":"ElementaryTypeName","src":"12782:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12720:79:11"},"returnParameters":{"id":2625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2622,"mutability":"mutable","name":"success","nameLocation":"12827:7:11","nodeType":"VariableDeclaration","scope":2715,"src":"12822:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2621,"name":"bool","nodeType":"ElementaryTypeName","src":"12822:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2624,"mutability":"mutable","name":"value","nameLocation":"12844:5:11","nodeType":"VariableDeclaration","scope":2715,"src":"12836:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2623,"name":"uint256","nodeType":"ElementaryTypeName","src":"12836:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12821:29:11"},"scope":3129,"src":"12680:1052:11","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2733,"nodeType":"Block","src":"14030:67:11","statements":[{"expression":{"arguments":[{"id":2724,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2718,"src":"14060:5:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2725,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14067:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2728,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2718,"src":"14076:5:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2727,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14070:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2726,"name":"bytes","nodeType":"ElementaryTypeName","src":"14070:5:11","typeDescriptions":{}}},"id":2729,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14070:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14083:6:11","memberName":"length","nodeType":"MemberAccess","src":"14070:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2723,"name":"parseAddress","nodeType":"Identifier","overloadedDeclarations":[2734,2765],"referencedDeclaration":2765,"src":"14047:12:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (address)"}},"id":2731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14047:43:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2722,"id":2732,"nodeType":"Return","src":"14040:50:11"}]},"documentation":{"id":2716,"nodeType":"StructuredDocumentation","src":"13738:212:11","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":2734,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"13964:12:11","nodeType":"FunctionDefinition","parameters":{"id":2719,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2718,"mutability":"mutable","name":"input","nameLocation":"13991:5:11","nodeType":"VariableDeclaration","scope":2734,"src":"13977:19:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2717,"name":"string","nodeType":"ElementaryTypeName","src":"13977:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"13976:21:11"},"returnParameters":{"id":2722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2721,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2734,"src":"14021:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2720,"name":"address","nodeType":"ElementaryTypeName","src":"14021:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14020:9:11"},"scope":3129,"src":"13955:142:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2764,"nodeType":"Block","src":"14470:165:11","statements":[{"assignments":[2747,2749],"declarations":[{"constant":false,"id":2747,"mutability":"mutable","name":"success","nameLocation":"14486:7:11","nodeType":"VariableDeclaration","scope":2764,"src":"14481:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2746,"name":"bool","nodeType":"ElementaryTypeName","src":"14481:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2749,"mutability":"mutable","name":"value","nameLocation":"14503:5:11","nodeType":"VariableDeclaration","scope":2764,"src":"14495:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2748,"name":"address","nodeType":"ElementaryTypeName","src":"14495:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2755,"initialValue":{"arguments":[{"id":2751,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2737,"src":"14528:5:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2752,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"14535:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2753,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2741,"src":"14542:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2750,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[2786,2890],"referencedDeclaration":2890,"src":"14512:15:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":2754,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14512:34:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"nodeType":"VariableDeclarationStatement","src":"14480:66:11"},{"condition":{"id":2757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"14560:8:11","subExpression":{"id":2756,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2747,"src":"14561:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2761,"nodeType":"IfStatement","src":"14556:50:11","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2758,"name":"StringsInvalidAddressFormat","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1793,"src":"14577:27:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":2759,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14577:29:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2760,"nodeType":"RevertStatement","src":"14570:36:11"}},{"expression":{"id":2762,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2749,"src":"14623:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2745,"id":2763,"nodeType":"Return","src":"14616:12:11"}]},"documentation":{"id":2735,"nodeType":"StructuredDocumentation","src":"14103:259:11","text":" @dev Variant of {parseAddress-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":2765,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"14376:12:11","nodeType":"FunctionDefinition","parameters":{"id":2742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2737,"mutability":"mutable","name":"input","nameLocation":"14403:5:11","nodeType":"VariableDeclaration","scope":2765,"src":"14389:19:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2736,"name":"string","nodeType":"ElementaryTypeName","src":"14389:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2739,"mutability":"mutable","name":"begin","nameLocation":"14418:5:11","nodeType":"VariableDeclaration","scope":2765,"src":"14410:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2738,"name":"uint256","nodeType":"ElementaryTypeName","src":"14410:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2741,"mutability":"mutable","name":"end","nameLocation":"14433:3:11","nodeType":"VariableDeclaration","scope":2765,"src":"14425:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2740,"name":"uint256","nodeType":"ElementaryTypeName","src":"14425:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14388:49:11"},"returnParameters":{"id":2745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2744,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2765,"src":"14461:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2743,"name":"address","nodeType":"ElementaryTypeName","src":"14461:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14460:9:11"},"scope":3129,"src":"14367:268:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2785,"nodeType":"Block","src":"14942:70:11","statements":[{"expression":{"arguments":[{"id":2776,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2768,"src":"14975:5:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14982:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2780,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2768,"src":"14991:5:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2779,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14985:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2778,"name":"bytes","nodeType":"ElementaryTypeName","src":"14985:5:11","typeDescriptions":{}}},"id":2781,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14985:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14998:6:11","memberName":"length","nodeType":"MemberAccess","src":"14985:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2775,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[2786,2890],"referencedDeclaration":2890,"src":"14959:15:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":2783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14959:46:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":2774,"id":2784,"nodeType":"Return","src":"14952:53:11"}]},"documentation":{"id":2766,"nodeType":"StructuredDocumentation","src":"14641:198:11","text":" @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n formatted address. See {parseAddress-string} requirements."},"id":2786,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"14853:15:11","nodeType":"FunctionDefinition","parameters":{"id":2769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2768,"mutability":"mutable","name":"input","nameLocation":"14883:5:11","nodeType":"VariableDeclaration","scope":2786,"src":"14869:19:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2767,"name":"string","nodeType":"ElementaryTypeName","src":"14869:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14868:21:11"},"returnParameters":{"id":2774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2771,"mutability":"mutable","name":"success","nameLocation":"14918:7:11","nodeType":"VariableDeclaration","scope":2786,"src":"14913:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2770,"name":"bool","nodeType":"ElementaryTypeName","src":"14913:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2773,"mutability":"mutable","name":"value","nameLocation":"14935:5:11","nodeType":"VariableDeclaration","scope":2786,"src":"14927:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2772,"name":"address","nodeType":"ElementaryTypeName","src":"14927:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14912:29:11"},"scope":3129,"src":"14844:168:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2889,"nodeType":"Block","src":"15405:733:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2800,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2793,"src":"15419:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2803,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2789,"src":"15431:5:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2802,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15425:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2801,"name":"bytes","nodeType":"ElementaryTypeName","src":"15425:5:11","typeDescriptions":{}}},"id":2804,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15425:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15438:6:11","memberName":"length","nodeType":"MemberAccess","src":"15425:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15419:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2807,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2791,"src":"15448:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2808,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2793,"src":"15456:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15448:11:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15419:40:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2818,"nodeType":"IfStatement","src":"15415:72:11","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15469:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":2814,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15484:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2813,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15476:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2812,"name":"address","nodeType":"ElementaryTypeName","src":"15476:7:11","typeDescriptions":{}}},"id":2815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15476:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2816,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"15468:19:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":2799,"id":2817,"nodeType":"Return","src":"15461:26:11"}},{"assignments":[2820],"declarations":[{"constant":false,"id":2820,"mutability":"mutable","name":"hasPrefix","nameLocation":"15503:9:11","nodeType":"VariableDeclaration","scope":2889,"src":"15498:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2819,"name":"bool","nodeType":"ElementaryTypeName","src":"15498:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2843,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2821,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2793,"src":"15516:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2822,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2791,"src":"15522:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2823,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15530:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15522:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15516:15:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2826,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15515:17:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":2841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"arguments":[{"id":2832,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2789,"src":"15572:5:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2831,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15566:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2830,"name":"bytes","nodeType":"ElementaryTypeName","src":"15566:5:11","typeDescriptions":{}}},"id":2833,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15566:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2834,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2791,"src":"15580:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2829,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3128,"src":"15543:22:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2835,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15543:43:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2828,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15536:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":2827,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15536:6:11","typeDescriptions":{}}},"id":2836,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15536:51:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":2839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15598:4:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":2838,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15591:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":2837,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15591:6:11","typeDescriptions":{}}},"id":2840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15591:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"15536:67:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15515:88:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"15498:105:11"},{"assignments":[2845],"declarations":[{"constant":false,"id":2845,"mutability":"mutable","name":"expectedLength","nameLocation":"15692:14:11","nodeType":"VariableDeclaration","scope":2889,"src":"15684:22:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2844,"name":"uint256","nodeType":"ElementaryTypeName","src":"15684:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2853,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3430","id":2846,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15709:2:11","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2847,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2820,"src":"15714:9:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15724:6:11","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6550,"src":"15714:16:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":2849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15714:18:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":2850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15735:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15714:22:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15709:27:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15684:52:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2854,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2793,"src":"15801:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2855,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2791,"src":"15807:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15801:11:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2857,"name":"expectedLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2845,"src":"15816:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15801:29:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2887,"nodeType":"Block","src":"16081:51:11","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":2880,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16103:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":2883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16118:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2882,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16110:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2881,"name":"address","nodeType":"ElementaryTypeName","src":"16110:7:11","typeDescriptions":{}}},"id":2884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16110:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2885,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"16102:19:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":2799,"id":2886,"nodeType":"Return","src":"16095:26:11"}]},"id":2888,"nodeType":"IfStatement","src":"15797:335:11","trueBody":{"id":2879,"nodeType":"Block","src":"15832:243:11","statements":[{"assignments":[2860,2862],"declarations":[{"constant":false,"id":2860,"mutability":"mutable","name":"s","nameLocation":"15953:1:11","nodeType":"VariableDeclaration","scope":2879,"src":"15948:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2859,"name":"bool","nodeType":"ElementaryTypeName","src":"15948:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2862,"mutability":"mutable","name":"v","nameLocation":"15964:1:11","nodeType":"VariableDeclaration","scope":2879,"src":"15956:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2861,"name":"uint256","nodeType":"ElementaryTypeName","src":"15956:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2868,"initialValue":{"arguments":[{"id":2864,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2789,"src":"16001:5:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2865,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2791,"src":"16008:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2866,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2793,"src":"16015:3:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2863,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2715,"src":"15969:31:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2867,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15969:50:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"15947:72:11"},{"expression":{"components":[{"id":2869,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2860,"src":"16041:1:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"arguments":[{"arguments":[{"id":2874,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2862,"src":"16060:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2873,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16052:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2872,"name":"uint160","nodeType":"ElementaryTypeName","src":"16052:7:11","typeDescriptions":{}}},"id":2875,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16052:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2871,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16044:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2870,"name":"address","nodeType":"ElementaryTypeName","src":"16044:7:11","typeDescriptions":{}}},"id":2876,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16044:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2877,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16040:24:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":2799,"id":2878,"nodeType":"Return","src":"16033:31:11"}]}}]},"documentation":{"id":2787,"nodeType":"StructuredDocumentation","src":"15018:226:11","text":" @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n formatted address. See {parseAddress-string-uint256-uint256} requirements."},"id":2890,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"15258:15:11","nodeType":"FunctionDefinition","parameters":{"id":2794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2789,"mutability":"mutable","name":"input","nameLocation":"15297:5:11","nodeType":"VariableDeclaration","scope":2890,"src":"15283:19:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2788,"name":"string","nodeType":"ElementaryTypeName","src":"15283:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2791,"mutability":"mutable","name":"begin","nameLocation":"15320:5:11","nodeType":"VariableDeclaration","scope":2890,"src":"15312:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2790,"name":"uint256","nodeType":"ElementaryTypeName","src":"15312:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2793,"mutability":"mutable","name":"end","nameLocation":"15343:3:11","nodeType":"VariableDeclaration","scope":2890,"src":"15335:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2792,"name":"uint256","nodeType":"ElementaryTypeName","src":"15335:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15273:79:11"},"returnParameters":{"id":2799,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2796,"mutability":"mutable","name":"success","nameLocation":"15381:7:11","nodeType":"VariableDeclaration","scope":2890,"src":"15376:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2795,"name":"bool","nodeType":"ElementaryTypeName","src":"15376:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2798,"mutability":"mutable","name":"value","nameLocation":"15398:5:11","nodeType":"VariableDeclaration","scope":2890,"src":"15390:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2797,"name":"address","nodeType":"ElementaryTypeName","src":"15390:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15375:29:11"},"scope":3129,"src":"15249:889:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2949,"nodeType":"Block","src":"16207:461:11","statements":[{"assignments":[2898],"declarations":[{"constant":false,"id":2898,"mutability":"mutable","name":"value","nameLocation":"16223:5:11","nodeType":"VariableDeclaration","scope":2949,"src":"16217:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2897,"name":"uint8","nodeType":"ElementaryTypeName","src":"16217:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2903,"initialValue":{"arguments":[{"id":2901,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2892,"src":"16237:3:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2900,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16231:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2899,"name":"uint8","nodeType":"ElementaryTypeName","src":"16231:5:11","typeDescriptions":{}}},"id":2902,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16231:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"16217:24:11"},{"id":2946,"nodeType":"UncheckedBlock","src":"16401:238:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2904,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2898,"src":"16429:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3437","id":2905,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16437:2:11","typeDescriptions":{"typeIdentifier":"t_rational_47_by_1","typeString":"int_const 47"},"value":"47"},"src":"16429:10:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2907,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2898,"src":"16443:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3538","id":2908,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16451:2:11","typeDescriptions":{"typeIdentifier":"t_rational_58_by_1","typeString":"int_const 58"},"value":"58"},"src":"16443:10:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16429:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2915,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2898,"src":"16489:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":2916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16497:2:11","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"16489:10:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2918,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2898,"src":"16503:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"313033","id":2919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16511:3:11","typeDescriptions":{"typeIdentifier":"t_rational_103_by_1","typeString":"int_const 103"},"value":"103"},"src":"16503:11:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16489:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2926,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2898,"src":"16550:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3634","id":2927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16558:2:11","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"16550:10:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2929,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2898,"src":"16564:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3731","id":2930,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16572:2:11","typeDescriptions":{"typeIdentifier":"t_rational_71_by_1","typeString":"int_const 71"},"value":"71"},"src":"16564:10:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16550:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"expression":{"arguments":[{"id":2939,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16618:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2938,"name":"uint8","nodeType":"ElementaryTypeName","src":"16618:5:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":2937,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16613:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2940,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16613:11:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":2941,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16625:3:11","memberName":"max","nodeType":"MemberAccess","src":"16613:15:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":2896,"id":2942,"nodeType":"Return","src":"16606:22:11"},"id":2943,"nodeType":"IfStatement","src":"16546:82:11","trueBody":{"expression":{"id":2935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2933,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2898,"src":"16576:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3535","id":2934,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16585:2:11","typeDescriptions":{"typeIdentifier":"t_rational_55_by_1","typeString":"int_const 55"},"value":"55"},"src":"16576:11:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":2936,"nodeType":"ExpressionStatement","src":"16576:11:11"}},"id":2944,"nodeType":"IfStatement","src":"16485:143:11","trueBody":{"expression":{"id":2924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2922,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2898,"src":"16516:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3837","id":2923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16525:2:11","typeDescriptions":{"typeIdentifier":"t_rational_87_by_1","typeString":"int_const 87"},"value":"87"},"src":"16516:11:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":2925,"nodeType":"ExpressionStatement","src":"16516:11:11"}},"id":2945,"nodeType":"IfStatement","src":"16425:203:11","trueBody":{"expression":{"id":2913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2911,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2898,"src":"16455:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3438","id":2912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16464:2:11","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"src":"16455:11:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":2914,"nodeType":"ExpressionStatement","src":"16455:11:11"}}]},{"expression":{"id":2947,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2898,"src":"16656:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":2896,"id":2948,"nodeType":"Return","src":"16649:12:11"}]},"id":2950,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseChr","nameLocation":"16153:12:11","nodeType":"FunctionDefinition","parameters":{"id":2893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2892,"mutability":"mutable","name":"chr","nameLocation":"16173:3:11","nodeType":"VariableDeclaration","scope":2950,"src":"16166:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":2891,"name":"bytes1","nodeType":"ElementaryTypeName","src":"16166:6:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"src":"16165:12:11"},"returnParameters":{"id":2896,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2895,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2950,"src":"16200:5:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2894,"name":"uint8","nodeType":"ElementaryTypeName","src":"16200:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16199:7:11"},"scope":3129,"src":"16144:524:11","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3115,"nodeType":"Block","src":"17334:1331:11","statements":[{"assignments":[2959],"declarations":[{"constant":false,"id":2959,"mutability":"mutable","name":"buffer","nameLocation":"17357:6:11","nodeType":"VariableDeclaration","scope":3115,"src":"17344:19:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2958,"name":"bytes","nodeType":"ElementaryTypeName","src":"17344:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2964,"initialValue":{"arguments":[{"id":2962,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2953,"src":"17372:5:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2961,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17366:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2960,"name":"bytes","nodeType":"ElementaryTypeName","src":"17366:5:11","typeDescriptions":{}}},"id":2963,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17366:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"17344:34:11"},{"assignments":[2966],"declarations":[{"constant":false,"id":2966,"mutability":"mutable","name":"output","nameLocation":"17401:6:11","nodeType":"VariableDeclaration","scope":3115,"src":"17388:19:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2965,"name":"bytes","nodeType":"ElementaryTypeName","src":"17388:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2974,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17420:1:11","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":2970,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2959,"src":"17424:6:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17431:6:11","memberName":"length","nodeType":"MemberAccess","src":"17424:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17420:17:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2968,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"17410:9:11","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":2967,"name":"bytes","nodeType":"ElementaryTypeName","src":"17414:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":2973,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17410:28:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"17388:50:11"},{"assignments":[2976],"declarations":[{"constant":false,"id":2976,"mutability":"mutable","name":"outputLength","nameLocation":"17479:12:11","nodeType":"VariableDeclaration","scope":3115,"src":"17471:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2975,"name":"uint256","nodeType":"ElementaryTypeName","src":"17471:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2978,"initialValue":{"hexValue":"30","id":2977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17494:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"17471:24:11"},{"body":{"id":3107,"nodeType":"Block","src":"17546:854:11","statements":[{"assignments":[2990],"declarations":[{"constant":false,"id":2990,"mutability":"mutable","name":"char","nameLocation":"17567:4:11","nodeType":"VariableDeclaration","scope":3107,"src":"17560:11:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":2989,"name":"bytes1","nodeType":"ElementaryTypeName","src":"17560:6:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":2998,"initialValue":{"arguments":[{"arguments":[{"id":2994,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2959,"src":"17604:6:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2995,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2980,"src":"17612:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2993,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3128,"src":"17581:22:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2996,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17581:33:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2992,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17574:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2991,"name":"bytes1","nodeType":"ElementaryTypeName","src":"17574:6:11","typeDescriptions":{}}},"id":2997,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17574:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"17560:55:11"},{"condition":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2999,"name":"SPECIAL_CHARS_LOOKUP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1780,"src":"17635:20:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3000,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17659:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"arguments":[{"id":3003,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2990,"src":"17670:4:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":3002,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17664:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3001,"name":"uint8","nodeType":"ElementaryTypeName","src":"17664:5:11","typeDescriptions":{}}},"id":3004,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17664:11:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"17659:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3006,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17658:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17635:41:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3008,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17634:43:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3009,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17681:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17634:48:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3011,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17633:50:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3105,"nodeType":"Block","src":"18328:62:11","statements":[{"expression":{"id":3103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3098,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2966,"src":"18346:6:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3101,"indexExpression":{"id":3100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18353:14:11","subExpression":{"id":3099,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2976,"src":"18353:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18346:22:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3102,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2990,"src":"18371:4:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"18346:29:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3104,"nodeType":"ExpressionStatement","src":"18346:29:11"}]},"id":3106,"nodeType":"IfStatement","src":"17629:761:11","trueBody":{"id":3097,"nodeType":"Block","src":"17685:637:11","statements":[{"expression":{"id":3017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3012,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2966,"src":"17703:6:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3015,"indexExpression":{"id":3014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17710:14:11","subExpression":{"id":3013,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2976,"src":"17710:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17703:22:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"5c","id":3016,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17728:4:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_731553fa98541ade8b78284229adfe09a819380dee9244baac20dd1e0aa24095","typeString":"literal_string \"\\\""},"value":"\\"},"src":"17703:29:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3018,"nodeType":"ExpressionStatement","src":"17703:29:11"},{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3019,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2990,"src":"17754:4:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783038","id":3020,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17762:4:11","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x08"},"src":"17754:12:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3029,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2990,"src":"17823:4:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783039","id":3030,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17831:4:11","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"0x09"},"src":"17823:12:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3039,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2990,"src":"17892:4:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783061","id":3040,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17900:4:11","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"0x0a"},"src":"17892:12:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3049,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2990,"src":"17961:4:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783063","id":3050,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17969:4:11","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"0x0c"},"src":"17961:12:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3059,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2990,"src":"18030:4:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783064","id":3060,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18038:4:11","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"0x0d"},"src":"18030:12:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3069,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2990,"src":"18099:4:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783563","id":3070,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18107:4:11","typeDescriptions":{"typeIdentifier":"t_rational_92_by_1","typeString":"int_const 92"},"value":"0x5c"},"src":"18099:12:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3079,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2990,"src":"18169:4:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783232","id":3080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18177:4:11","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"src":"18169:12:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3090,"nodeType":"IfStatement","src":"18165:143:11","trueBody":{"id":3089,"nodeType":"Block","src":"18183:125:11","statements":[{"expression":{"id":3087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3082,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2966,"src":"18261:6:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3085,"indexExpression":{"id":3084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18268:14:11","subExpression":{"id":3083,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2976,"src":"18268:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18261:22:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"22","id":3086,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18286:3:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0","typeString":"literal_string \"\"\""},"value":"\""},"src":"18261:28:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3088,"nodeType":"ExpressionStatement","src":"18261:28:11"}]}},"id":3091,"nodeType":"IfStatement","src":"18095:213:11","trueBody":{"expression":{"id":3077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3072,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2966,"src":"18113:6:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3075,"indexExpression":{"id":3074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18120:14:11","subExpression":{"id":3073,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2976,"src":"18120:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18113:22:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"5c","id":3076,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18138:4:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_731553fa98541ade8b78284229adfe09a819380dee9244baac20dd1e0aa24095","typeString":"literal_string \"\\\""},"value":"\\"},"src":"18113:29:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3078,"nodeType":"ExpressionStatement","src":"18113:29:11"}},"id":3092,"nodeType":"IfStatement","src":"18026:282:11","trueBody":{"expression":{"id":3067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3062,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2966,"src":"18044:6:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3065,"indexExpression":{"id":3064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18051:14:11","subExpression":{"id":3063,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2976,"src":"18051:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18044:22:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"72","id":3066,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18069:3:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_414f72a4d550cad29f17d9d99a4af64b3776ec5538cd440cef0f03fef2e9e010","typeString":"literal_string \"r\""},"value":"r"},"src":"18044:28:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3068,"nodeType":"ExpressionStatement","src":"18044:28:11"}},"id":3093,"nodeType":"IfStatement","src":"17957:351:11","trueBody":{"expression":{"id":3057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3052,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2966,"src":"17975:6:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3055,"indexExpression":{"id":3054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17982:14:11","subExpression":{"id":3053,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2976,"src":"17982:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17975:22:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66","id":3056,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18000:3:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_d1e8aeb79500496ef3dc2e57ba746a8315d048b7a664a2bf948db4fa91960483","typeString":"literal_string \"f\""},"value":"f"},"src":"17975:28:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3058,"nodeType":"ExpressionStatement","src":"17975:28:11"}},"id":3094,"nodeType":"IfStatement","src":"17888:420:11","trueBody":{"expression":{"id":3047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3042,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2966,"src":"17906:6:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3045,"indexExpression":{"id":3044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17913:14:11","subExpression":{"id":3043,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2976,"src":"17913:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17906:22:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"6e","id":3046,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17931:3:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_4b4ecedb4964a40fe416b16c7bd8b46092040ec42ef0aa69e59f09872f105cf3","typeString":"literal_string \"n\""},"value":"n"},"src":"17906:28:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3048,"nodeType":"ExpressionStatement","src":"17906:28:11"}},"id":3095,"nodeType":"IfStatement","src":"17819:489:11","trueBody":{"expression":{"id":3037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3032,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2966,"src":"17837:6:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3035,"indexExpression":{"id":3034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17844:14:11","subExpression":{"id":3033,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2976,"src":"17844:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17837:22:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74","id":3036,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17862:3:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_cac1bb71f0a97c8ac94ca9546b43178a9ad254c7b757ac07433aa6df35cd8089","typeString":"literal_string \"t\""},"value":"t"},"src":"17837:28:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3038,"nodeType":"ExpressionStatement","src":"17837:28:11"}},"id":3096,"nodeType":"IfStatement","src":"17750:558:11","trueBody":{"expression":{"id":3027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3022,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2966,"src":"17768:6:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3025,"indexExpression":{"id":3024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17775:14:11","subExpression":{"id":3023,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2976,"src":"17775:12:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17768:22:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"62","id":3026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17793:3:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_b5553de315e0edf504d9150af82dafa5c4667fa618ed0a6f19c69b41166c5510","typeString":"literal_string \"b\""},"value":"b"},"src":"17768:28:11","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3028,"nodeType":"ExpressionStatement","src":"17768:28:11"}}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2982,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2980,"src":"17522:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2983,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2959,"src":"17526:6:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17533:6:11","memberName":"length","nodeType":"MemberAccess","src":"17526:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17522:17:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3108,"initializationExpression":{"assignments":[2980],"declarations":[{"constant":false,"id":2980,"mutability":"mutable","name":"i","nameLocation":"17519:1:11","nodeType":"VariableDeclaration","scope":3108,"src":"17511:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2979,"name":"uint256","nodeType":"ElementaryTypeName","src":"17511:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2981,"nodeType":"VariableDeclarationStatement","src":"17511:9:11"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":2987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"17541:3:11","subExpression":{"id":2986,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2980,"src":"17543:1:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2988,"nodeType":"ExpressionStatement","src":"17541:3:11"},"nodeType":"ForStatement","src":"17506:894:11"},{"AST":{"nativeSrc":"18498:129:11","nodeType":"YulBlock","src":"18498:129:11","statements":[{"expression":{"arguments":[{"name":"output","nativeSrc":"18519:6:11","nodeType":"YulIdentifier","src":"18519:6:11"},{"name":"outputLength","nativeSrc":"18527:12:11","nodeType":"YulIdentifier","src":"18527:12:11"}],"functionName":{"name":"mstore","nativeSrc":"18512:6:11","nodeType":"YulIdentifier","src":"18512:6:11"},"nativeSrc":"18512:28:11","nodeType":"YulFunctionCall","src":"18512:28:11"},"nativeSrc":"18512:28:11","nodeType":"YulExpressionStatement","src":"18512:28:11"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"18560:4:11","nodeType":"YulLiteral","src":"18560:4:11","type":"","value":"0x40"},{"arguments":[{"name":"output","nativeSrc":"18570:6:11","nodeType":"YulIdentifier","src":"18570:6:11"},{"arguments":[{"kind":"number","nativeSrc":"18582:1:11","nodeType":"YulLiteral","src":"18582:1:11","type":"","value":"5"},{"arguments":[{"kind":"number","nativeSrc":"18589:1:11","nodeType":"YulLiteral","src":"18589:1:11","type":"","value":"5"},{"arguments":[{"name":"outputLength","nativeSrc":"18596:12:11","nodeType":"YulIdentifier","src":"18596:12:11"},{"kind":"number","nativeSrc":"18610:2:11","nodeType":"YulLiteral","src":"18610:2:11","type":"","value":"63"}],"functionName":{"name":"add","nativeSrc":"18592:3:11","nodeType":"YulIdentifier","src":"18592:3:11"},"nativeSrc":"18592:21:11","nodeType":"YulFunctionCall","src":"18592:21:11"}],"functionName":{"name":"shr","nativeSrc":"18585:3:11","nodeType":"YulIdentifier","src":"18585:3:11"},"nativeSrc":"18585:29:11","nodeType":"YulFunctionCall","src":"18585:29:11"}],"functionName":{"name":"shl","nativeSrc":"18578:3:11","nodeType":"YulIdentifier","src":"18578:3:11"},"nativeSrc":"18578:37:11","nodeType":"YulFunctionCall","src":"18578:37:11"}],"functionName":{"name":"add","nativeSrc":"18566:3:11","nodeType":"YulIdentifier","src":"18566:3:11"},"nativeSrc":"18566:50:11","nodeType":"YulFunctionCall","src":"18566:50:11"}],"functionName":{"name":"mstore","nativeSrc":"18553:6:11","nodeType":"YulIdentifier","src":"18553:6:11"},"nativeSrc":"18553:64:11","nodeType":"YulFunctionCall","src":"18553:64:11"},"nativeSrc":"18553:64:11","nodeType":"YulExpressionStatement","src":"18553:64:11"}]},"evmVersion":"paris","externalReferences":[{"declaration":2966,"isOffset":false,"isSlot":false,"src":"18519:6:11","valueSize":1},{"declaration":2966,"isOffset":false,"isSlot":false,"src":"18570:6:11","valueSize":1},{"declaration":2976,"isOffset":false,"isSlot":false,"src":"18527:12:11","valueSize":1},{"declaration":2976,"isOffset":false,"isSlot":false,"src":"18596:12:11","valueSize":1}],"flags":["memory-safe"],"id":3109,"nodeType":"InlineAssembly","src":"18473:154:11"},{"expression":{"arguments":[{"id":3112,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2966,"src":"18651:6:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3111,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18644:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":3110,"name":"string","nodeType":"ElementaryTypeName","src":"18644:6:11","typeDescriptions":{}}},"id":3113,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18644:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2957,"id":3114,"nodeType":"Return","src":"18637:21:11"}]},"documentation":{"id":2951,"nodeType":"StructuredDocumentation","src":"16674:576:11","text":" @dev Escape special characters in JSON strings. This can be useful to prevent JSON injection in NFT metadata.\n WARNING: This function should only be used in double quoted JSON strings. Single quotes are not escaped.\n NOTE: This function escapes all unicode characters, and not just the ones in ranges defined in section 2.5 of\n RFC-4627 (U+0000 to U+001F, U+0022 and U+005C). ECMAScript's `JSON.parse` does recover escaped unicode\n characters that are not in this range, but other tooling may provide different results."},"id":3116,"implemented":true,"kind":"function","modifiers":[],"name":"escapeJSON","nameLocation":"17264:10:11","nodeType":"FunctionDefinition","parameters":{"id":2954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2953,"mutability":"mutable","name":"input","nameLocation":"17289:5:11","nodeType":"VariableDeclaration","scope":3116,"src":"17275:19:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2952,"name":"string","nodeType":"ElementaryTypeName","src":"17275:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17274:21:11"},"returnParameters":{"id":2957,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2956,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3116,"src":"17319:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2955,"name":"string","nodeType":"ElementaryTypeName","src":"17319:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17318:15:11"},"scope":3129,"src":"17255:1410:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3127,"nodeType":"Block","src":"19050:225:11","statements":[{"AST":{"nativeSrc":"19199:70:11","nodeType":"YulBlock","src":"19199:70:11","statements":[{"nativeSrc":"19213:46:11","nodeType":"YulAssignment","src":"19213:46:11","value":{"arguments":[{"arguments":[{"name":"buffer","nativeSrc":"19232:6:11","nodeType":"YulIdentifier","src":"19232:6:11"},{"arguments":[{"kind":"number","nativeSrc":"19244:4:11","nodeType":"YulLiteral","src":"19244:4:11","type":"","value":"0x20"},{"name":"offset","nativeSrc":"19250:6:11","nodeType":"YulIdentifier","src":"19250:6:11"}],"functionName":{"name":"add","nativeSrc":"19240:3:11","nodeType":"YulIdentifier","src":"19240:3:11"},"nativeSrc":"19240:17:11","nodeType":"YulFunctionCall","src":"19240:17:11"}],"functionName":{"name":"add","nativeSrc":"19228:3:11","nodeType":"YulIdentifier","src":"19228:3:11"},"nativeSrc":"19228:30:11","nodeType":"YulFunctionCall","src":"19228:30:11"}],"functionName":{"name":"mload","nativeSrc":"19222:5:11","nodeType":"YulIdentifier","src":"19222:5:11"},"nativeSrc":"19222:37:11","nodeType":"YulFunctionCall","src":"19222:37:11"},"variableNames":[{"name":"value","nativeSrc":"19213:5:11","nodeType":"YulIdentifier","src":"19213:5:11"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3119,"isOffset":false,"isSlot":false,"src":"19232:6:11","valueSize":1},{"declaration":3121,"isOffset":false,"isSlot":false,"src":"19250:6:11","valueSize":1},{"declaration":3124,"isOffset":false,"isSlot":false,"src":"19213:5:11","valueSize":1}],"flags":["memory-safe"],"id":3126,"nodeType":"InlineAssembly","src":"19174:95:11"}]},"documentation":{"id":3117,"nodeType":"StructuredDocumentation","src":"18671:268:11","text":" @dev Reads a bytes32 from a bytes array without bounds checking.\n NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n assembly block as such would prevent some optimizations."},"id":3128,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeReadBytesOffset","nameLocation":"18953:22:11","nodeType":"FunctionDefinition","parameters":{"id":3122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3119,"mutability":"mutable","name":"buffer","nameLocation":"18989:6:11","nodeType":"VariableDeclaration","scope":3128,"src":"18976:19:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3118,"name":"bytes","nodeType":"ElementaryTypeName","src":"18976:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3121,"mutability":"mutable","name":"offset","nameLocation":"19005:6:11","nodeType":"VariableDeclaration","scope":3128,"src":"18997:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3120,"name":"uint256","nodeType":"ElementaryTypeName","src":"18997:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18975:37:11"},"returnParameters":{"id":3125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3124,"mutability":"mutable","name":"value","nameLocation":"19043:5:11","nodeType":"VariableDeclaration","scope":3128,"src":"19035:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3123,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19035:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"19034:15:11"},"scope":3129,"src":"18944:331:11","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":3130,"src":"297:18980:11","usedErrors":[1787,1790,1793],"usedEvents":[]}],"src":"101:19177:11"},"id":11},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[3153],"IERC165":[3165]},"id":3154,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3131,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"114:24:12"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":3133,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3154,"sourceUnit":3166,"src":"140:38:12","symbolAliases":[{"foreign":{"id":3132,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3165,"src":"148:7:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":3135,"name":"IERC165","nameLocations":["688:7:12"],"nodeType":"IdentifierPath","referencedDeclaration":3165,"src":"688:7:12"},"id":3136,"nodeType":"InheritanceSpecifier","src":"688:7:12"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":3134,"nodeType":"StructuredDocumentation","src":"180:479:12","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"},"fullyImplemented":true,"id":3153,"linearizedBaseContracts":[3153,3165],"name":"ERC165","nameLocation":"678:6:12","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[3164],"body":{"id":3151,"nodeType":"Block","src":"845:64:12","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":3149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3144,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3139,"src":"862:11:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":3146,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3165,"src":"882:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$3165_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$3165_$","typeString":"type(contract IERC165)"}],"id":3145,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"877:4:12","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"877:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$3165","typeString":"type(contract IERC165)"}},"id":3148,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"891:11:12","memberName":"interfaceId","nodeType":"MemberAccess","src":"877:25:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"862:40:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3143,"id":3150,"nodeType":"Return","src":"855:47:12"}]},"documentation":{"id":3137,"nodeType":"StructuredDocumentation","src":"702:56:12","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":3152,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"772:17:12","nodeType":"FunctionDefinition","parameters":{"id":3140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3139,"mutability":"mutable","name":"interfaceId","nameLocation":"797:11:12","nodeType":"VariableDeclaration","scope":3152,"src":"790:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3138,"name":"bytes4","nodeType":"ElementaryTypeName","src":"790:6:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"789:20:12"},"returnParameters":{"id":3143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3142,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3152,"src":"839:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3141,"name":"bool","nodeType":"ElementaryTypeName","src":"839:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"838:6:12"},"scope":3153,"src":"763:146:12","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":3154,"src":"660:251:12","usedErrors":[],"usedEvents":[]}],"src":"114:798:12"},"id":12},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[3165]},"id":3166,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3155,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:13"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":3156,"nodeType":"StructuredDocumentation","src":"141:280:13","text":" @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":3165,"linearizedBaseContracts":[3165],"name":"IERC165","nameLocation":"432:7:13","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3157,"nodeType":"StructuredDocumentation","src":"446:340:13","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":3164,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"800:17:13","nodeType":"FunctionDefinition","parameters":{"id":3160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3159,"mutability":"mutable","name":"interfaceId","nameLocation":"825:11:13","nodeType":"VariableDeclaration","scope":3164,"src":"818:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3158,"name":"bytes4","nodeType":"ElementaryTypeName","src":"818:6:13","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"817:20:13"},"returnParameters":{"id":3163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3162,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3164,"src":"861:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3161,"name":"bool","nodeType":"ElementaryTypeName","src":"861:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"860:6:13"},"scope":3165,"src":"791:76:13","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3166,"src":"422:447:13","usedErrors":[],"usedEvents":[]}],"src":"115:755:13"},"id":13},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[4786],"Panic":[1658],"SafeCast":[6551]},"id":4787,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3167,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:14"},{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","file":"../Panic.sol","id":3169,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4787,"sourceUnit":1659,"src":"129:35:14","symbolAliases":[{"foreign":{"id":3168,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1658,"src":"137:5:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":3171,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4787,"sourceUnit":6552,"src":"165:40:14","symbolAliases":[{"foreign":{"id":3170,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6551,"src":"173:8:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":3172,"nodeType":"StructuredDocumentation","src":"207:73:14","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":4786,"linearizedBaseContracts":[4786],"name":"Math","nameLocation":"289:4:14","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":3177,"members":[{"id":3173,"name":"Floor","nameLocation":"324:5:14","nodeType":"EnumValue","src":"324:5:14"},{"id":3174,"name":"Ceil","nameLocation":"367:4:14","nodeType":"EnumValue","src":"367:4:14"},{"id":3175,"name":"Trunc","nameLocation":"409:5:14","nodeType":"EnumValue","src":"409:5:14"},{"id":3176,"name":"Expand","nameLocation":"439:6:14","nodeType":"EnumValue","src":"439:6:14"}],"name":"Rounding","nameLocation":"305:8:14","nodeType":"EnumDefinition","src":"300:169:14"},{"body":{"id":3190,"nodeType":"Block","src":"731:112:14","statements":[{"AST":{"nativeSrc":"766:71:14","nodeType":"YulBlock","src":"766:71:14","statements":[{"nativeSrc":"780:16:14","nodeType":"YulAssignment","src":"780:16:14","value":{"arguments":[{"name":"a","nativeSrc":"791:1:14","nodeType":"YulIdentifier","src":"791:1:14"},{"name":"b","nativeSrc":"794:1:14","nodeType":"YulIdentifier","src":"794:1:14"}],"functionName":{"name":"add","nativeSrc":"787:3:14","nodeType":"YulIdentifier","src":"787:3:14"},"nativeSrc":"787:9:14","nodeType":"YulFunctionCall","src":"787:9:14"},"variableNames":[{"name":"low","nativeSrc":"780:3:14","nodeType":"YulIdentifier","src":"780:3:14"}]},{"nativeSrc":"809:18:14","nodeType":"YulAssignment","src":"809:18:14","value":{"arguments":[{"name":"low","nativeSrc":"820:3:14","nodeType":"YulIdentifier","src":"820:3:14"},{"name":"a","nativeSrc":"825:1:14","nodeType":"YulIdentifier","src":"825:1:14"}],"functionName":{"name":"lt","nativeSrc":"817:2:14","nodeType":"YulIdentifier","src":"817:2:14"},"nativeSrc":"817:10:14","nodeType":"YulFunctionCall","src":"817:10:14"},"variableNames":[{"name":"high","nativeSrc":"809:4:14","nodeType":"YulIdentifier","src":"809:4:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3180,"isOffset":false,"isSlot":false,"src":"791:1:14","valueSize":1},{"declaration":3180,"isOffset":false,"isSlot":false,"src":"825:1:14","valueSize":1},{"declaration":3182,"isOffset":false,"isSlot":false,"src":"794:1:14","valueSize":1},{"declaration":3185,"isOffset":false,"isSlot":false,"src":"809:4:14","valueSize":1},{"declaration":3187,"isOffset":false,"isSlot":false,"src":"780:3:14","valueSize":1},{"declaration":3187,"isOffset":false,"isSlot":false,"src":"820:3:14","valueSize":1}],"flags":["memory-safe"],"id":3189,"nodeType":"InlineAssembly","src":"741:96:14"}]},"documentation":{"id":3178,"nodeType":"StructuredDocumentation","src":"475:163:14","text":" @dev Return the 512-bit addition of two uint256.\n The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low."},"id":3191,"implemented":true,"kind":"function","modifiers":[],"name":"add512","nameLocation":"652:6:14","nodeType":"FunctionDefinition","parameters":{"id":3183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3180,"mutability":"mutable","name":"a","nameLocation":"667:1:14","nodeType":"VariableDeclaration","scope":3191,"src":"659:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3179,"name":"uint256","nodeType":"ElementaryTypeName","src":"659:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3182,"mutability":"mutable","name":"b","nameLocation":"678:1:14","nodeType":"VariableDeclaration","scope":3191,"src":"670:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3181,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"658:22:14"},"returnParameters":{"id":3188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3185,"mutability":"mutable","name":"high","nameLocation":"712:4:14","nodeType":"VariableDeclaration","scope":3191,"src":"704:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3184,"name":"uint256","nodeType":"ElementaryTypeName","src":"704:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3187,"mutability":"mutable","name":"low","nameLocation":"726:3:14","nodeType":"VariableDeclaration","scope":3191,"src":"718:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3186,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"703:27:14"},"scope":4786,"src":"643:200:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3204,"nodeType":"Block","src":"1115:462:14","statements":[{"AST":{"nativeSrc":"1437:134:14","nodeType":"YulBlock","src":"1437:134:14","statements":[{"nativeSrc":"1451:30:14","nodeType":"YulVariableDeclaration","src":"1451:30:14","value":{"arguments":[{"name":"a","nativeSrc":"1468:1:14","nodeType":"YulIdentifier","src":"1468:1:14"},{"name":"b","nativeSrc":"1471:1:14","nodeType":"YulIdentifier","src":"1471:1:14"},{"arguments":[{"kind":"number","nativeSrc":"1478:1:14","nodeType":"YulLiteral","src":"1478:1:14","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"1474:3:14","nodeType":"YulIdentifier","src":"1474:3:14"},"nativeSrc":"1474:6:14","nodeType":"YulFunctionCall","src":"1474:6:14"}],"functionName":{"name":"mulmod","nativeSrc":"1461:6:14","nodeType":"YulIdentifier","src":"1461:6:14"},"nativeSrc":"1461:20:14","nodeType":"YulFunctionCall","src":"1461:20:14"},"variables":[{"name":"mm","nativeSrc":"1455:2:14","nodeType":"YulTypedName","src":"1455:2:14","type":""}]},{"nativeSrc":"1494:16:14","nodeType":"YulAssignment","src":"1494:16:14","value":{"arguments":[{"name":"a","nativeSrc":"1505:1:14","nodeType":"YulIdentifier","src":"1505:1:14"},{"name":"b","nativeSrc":"1508:1:14","nodeType":"YulIdentifier","src":"1508:1:14"}],"functionName":{"name":"mul","nativeSrc":"1501:3:14","nodeType":"YulIdentifier","src":"1501:3:14"},"nativeSrc":"1501:9:14","nodeType":"YulFunctionCall","src":"1501:9:14"},"variableNames":[{"name":"low","nativeSrc":"1494:3:14","nodeType":"YulIdentifier","src":"1494:3:14"}]},{"nativeSrc":"1523:38:14","nodeType":"YulAssignment","src":"1523:38:14","value":{"arguments":[{"arguments":[{"name":"mm","nativeSrc":"1539:2:14","nodeType":"YulIdentifier","src":"1539:2:14"},{"name":"low","nativeSrc":"1543:3:14","nodeType":"YulIdentifier","src":"1543:3:14"}],"functionName":{"name":"sub","nativeSrc":"1535:3:14","nodeType":"YulIdentifier","src":"1535:3:14"},"nativeSrc":"1535:12:14","nodeType":"YulFunctionCall","src":"1535:12:14"},{"arguments":[{"name":"mm","nativeSrc":"1552:2:14","nodeType":"YulIdentifier","src":"1552:2:14"},{"name":"low","nativeSrc":"1556:3:14","nodeType":"YulIdentifier","src":"1556:3:14"}],"functionName":{"name":"lt","nativeSrc":"1549:2:14","nodeType":"YulIdentifier","src":"1549:2:14"},"nativeSrc":"1549:11:14","nodeType":"YulFunctionCall","src":"1549:11:14"}],"functionName":{"name":"sub","nativeSrc":"1531:3:14","nodeType":"YulIdentifier","src":"1531:3:14"},"nativeSrc":"1531:30:14","nodeType":"YulFunctionCall","src":"1531:30:14"},"variableNames":[{"name":"high","nativeSrc":"1523:4:14","nodeType":"YulIdentifier","src":"1523:4:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3194,"isOffset":false,"isSlot":false,"src":"1468:1:14","valueSize":1},{"declaration":3194,"isOffset":false,"isSlot":false,"src":"1505:1:14","valueSize":1},{"declaration":3196,"isOffset":false,"isSlot":false,"src":"1471:1:14","valueSize":1},{"declaration":3196,"isOffset":false,"isSlot":false,"src":"1508:1:14","valueSize":1},{"declaration":3199,"isOffset":false,"isSlot":false,"src":"1523:4:14","valueSize":1},{"declaration":3201,"isOffset":false,"isSlot":false,"src":"1494:3:14","valueSize":1},{"declaration":3201,"isOffset":false,"isSlot":false,"src":"1543:3:14","valueSize":1},{"declaration":3201,"isOffset":false,"isSlot":false,"src":"1556:3:14","valueSize":1}],"flags":["memory-safe"],"id":3203,"nodeType":"InlineAssembly","src":"1412:159:14"}]},"documentation":{"id":3192,"nodeType":"StructuredDocumentation","src":"849:173:14","text":" @dev Return the 512-bit multiplication of two uint256.\n The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low."},"id":3205,"implemented":true,"kind":"function","modifiers":[],"name":"mul512","nameLocation":"1036:6:14","nodeType":"FunctionDefinition","parameters":{"id":3197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3194,"mutability":"mutable","name":"a","nameLocation":"1051:1:14","nodeType":"VariableDeclaration","scope":3205,"src":"1043:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3193,"name":"uint256","nodeType":"ElementaryTypeName","src":"1043:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3196,"mutability":"mutable","name":"b","nameLocation":"1062:1:14","nodeType":"VariableDeclaration","scope":3205,"src":"1054:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3195,"name":"uint256","nodeType":"ElementaryTypeName","src":"1054:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1042:22:14"},"returnParameters":{"id":3202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3199,"mutability":"mutable","name":"high","nameLocation":"1096:4:14","nodeType":"VariableDeclaration","scope":3205,"src":"1088:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3198,"name":"uint256","nodeType":"ElementaryTypeName","src":"1088:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3201,"mutability":"mutable","name":"low","nameLocation":"1110:3:14","nodeType":"VariableDeclaration","scope":3205,"src":"1102:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3200,"name":"uint256","nodeType":"ElementaryTypeName","src":"1102:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1087:27:14"},"scope":4786,"src":"1027:550:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3239,"nodeType":"Block","src":"1784:149:14","statements":[{"id":3238,"nodeType":"UncheckedBlock","src":"1794:133:14","statements":[{"assignments":[3218],"declarations":[{"constant":false,"id":3218,"mutability":"mutable","name":"c","nameLocation":"1826:1:14","nodeType":"VariableDeclaration","scope":3238,"src":"1818:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3217,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3222,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3219,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3208,"src":"1830:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3220,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3210,"src":"1834:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1830:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1818:17:14"},{"expression":{"id":3227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3223,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3213,"src":"1849:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3224,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3218,"src":"1859:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3225,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3208,"src":"1864:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1859:6:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1849:16:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3228,"nodeType":"ExpressionStatement","src":"1849:16:14"},{"expression":{"id":3236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3229,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3215,"src":"1879:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3230,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3218,"src":"1888:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3233,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3213,"src":"1908:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3231,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6551,"src":"1892:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6551_$","typeString":"type(library SafeCast)"}},"id":3232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1901:6:14","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6550,"src":"1892:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3234,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1892:24:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1888:28:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1879:37:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3237,"nodeType":"ExpressionStatement","src":"1879:37:14"}]}]},"documentation":{"id":3206,"nodeType":"StructuredDocumentation","src":"1583:105:14","text":" @dev Returns the addition of two unsigned integers, with a success flag (no overflow)."},"id":3240,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"1702:6:14","nodeType":"FunctionDefinition","parameters":{"id":3211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3208,"mutability":"mutable","name":"a","nameLocation":"1717:1:14","nodeType":"VariableDeclaration","scope":3240,"src":"1709:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3207,"name":"uint256","nodeType":"ElementaryTypeName","src":"1709:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3210,"mutability":"mutable","name":"b","nameLocation":"1728:1:14","nodeType":"VariableDeclaration","scope":3240,"src":"1720:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3209,"name":"uint256","nodeType":"ElementaryTypeName","src":"1720:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1708:22:14"},"returnParameters":{"id":3216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3213,"mutability":"mutable","name":"success","nameLocation":"1759:7:14","nodeType":"VariableDeclaration","scope":3240,"src":"1754:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3212,"name":"bool","nodeType":"ElementaryTypeName","src":"1754:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3215,"mutability":"mutable","name":"result","nameLocation":"1776:6:14","nodeType":"VariableDeclaration","scope":3240,"src":"1768:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3214,"name":"uint256","nodeType":"ElementaryTypeName","src":"1768:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1753:30:14"},"scope":4786,"src":"1693:240:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3274,"nodeType":"Block","src":"2143:149:14","statements":[{"id":3273,"nodeType":"UncheckedBlock","src":"2153:133:14","statements":[{"assignments":[3253],"declarations":[{"constant":false,"id":3253,"mutability":"mutable","name":"c","nameLocation":"2185:1:14","nodeType":"VariableDeclaration","scope":3273,"src":"2177:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3252,"name":"uint256","nodeType":"ElementaryTypeName","src":"2177:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3257,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3254,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3243,"src":"2189:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3255,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3245,"src":"2193:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2189:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2177:17:14"},{"expression":{"id":3262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3258,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3248,"src":"2208:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3259,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3253,"src":"2218:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":3260,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3243,"src":"2223:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2218:6:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2208:16:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3263,"nodeType":"ExpressionStatement","src":"2208:16:14"},{"expression":{"id":3271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3264,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3250,"src":"2238:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3265,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3253,"src":"2247:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3268,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3248,"src":"2267:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3266,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6551,"src":"2251:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6551_$","typeString":"type(library SafeCast)"}},"id":3267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2260:6:14","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6550,"src":"2251:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2251:24:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2247:28:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2238:37:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3272,"nodeType":"ExpressionStatement","src":"2238:37:14"}]}]},"documentation":{"id":3241,"nodeType":"StructuredDocumentation","src":"1939:108:14","text":" @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow)."},"id":3275,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"2061:6:14","nodeType":"FunctionDefinition","parameters":{"id":3246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3243,"mutability":"mutable","name":"a","nameLocation":"2076:1:14","nodeType":"VariableDeclaration","scope":3275,"src":"2068:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3242,"name":"uint256","nodeType":"ElementaryTypeName","src":"2068:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3245,"mutability":"mutable","name":"b","nameLocation":"2087:1:14","nodeType":"VariableDeclaration","scope":3275,"src":"2079:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3244,"name":"uint256","nodeType":"ElementaryTypeName","src":"2079:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2067:22:14"},"returnParameters":{"id":3251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3248,"mutability":"mutable","name":"success","nameLocation":"2118:7:14","nodeType":"VariableDeclaration","scope":3275,"src":"2113:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3247,"name":"bool","nodeType":"ElementaryTypeName","src":"2113:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3250,"mutability":"mutable","name":"result","nameLocation":"2135:6:14","nodeType":"VariableDeclaration","scope":3275,"src":"2127:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3249,"name":"uint256","nodeType":"ElementaryTypeName","src":"2127:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2112:30:14"},"scope":4786,"src":"2052:240:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3304,"nodeType":"Block","src":"2505:391:14","statements":[{"id":3303,"nodeType":"UncheckedBlock","src":"2515:375:14","statements":[{"assignments":[3288],"declarations":[{"constant":false,"id":3288,"mutability":"mutable","name":"c","nameLocation":"2547:1:14","nodeType":"VariableDeclaration","scope":3303,"src":"2539:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3287,"name":"uint256","nodeType":"ElementaryTypeName","src":"2539:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3292,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3289,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3278,"src":"2551:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3290,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3280,"src":"2555:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2551:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2539:17:14"},{"AST":{"nativeSrc":"2595:188:14","nodeType":"YulBlock","src":"2595:188:14","statements":[{"nativeSrc":"2727:42:14","nodeType":"YulAssignment","src":"2727:42:14","value":{"arguments":[{"arguments":[{"arguments":[{"name":"c","nativeSrc":"2748:1:14","nodeType":"YulIdentifier","src":"2748:1:14"},{"name":"a","nativeSrc":"2751:1:14","nodeType":"YulIdentifier","src":"2751:1:14"}],"functionName":{"name":"div","nativeSrc":"2744:3:14","nodeType":"YulIdentifier","src":"2744:3:14"},"nativeSrc":"2744:9:14","nodeType":"YulFunctionCall","src":"2744:9:14"},{"name":"b","nativeSrc":"2755:1:14","nodeType":"YulIdentifier","src":"2755:1:14"}],"functionName":{"name":"eq","nativeSrc":"2741:2:14","nodeType":"YulIdentifier","src":"2741:2:14"},"nativeSrc":"2741:16:14","nodeType":"YulFunctionCall","src":"2741:16:14"},{"arguments":[{"name":"a","nativeSrc":"2766:1:14","nodeType":"YulIdentifier","src":"2766:1:14"}],"functionName":{"name":"iszero","nativeSrc":"2759:6:14","nodeType":"YulIdentifier","src":"2759:6:14"},"nativeSrc":"2759:9:14","nodeType":"YulFunctionCall","src":"2759:9:14"}],"functionName":{"name":"or","nativeSrc":"2738:2:14","nodeType":"YulIdentifier","src":"2738:2:14"},"nativeSrc":"2738:31:14","nodeType":"YulFunctionCall","src":"2738:31:14"},"variableNames":[{"name":"success","nativeSrc":"2727:7:14","nodeType":"YulIdentifier","src":"2727:7:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3278,"isOffset":false,"isSlot":false,"src":"2751:1:14","valueSize":1},{"declaration":3278,"isOffset":false,"isSlot":false,"src":"2766:1:14","valueSize":1},{"declaration":3280,"isOffset":false,"isSlot":false,"src":"2755:1:14","valueSize":1},{"declaration":3288,"isOffset":false,"isSlot":false,"src":"2748:1:14","valueSize":1},{"declaration":3283,"isOffset":false,"isSlot":false,"src":"2727:7:14","valueSize":1}],"flags":["memory-safe"],"id":3293,"nodeType":"InlineAssembly","src":"2570:213:14"},{"expression":{"id":3301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3294,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3285,"src":"2842:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3295,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3288,"src":"2851:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3298,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3283,"src":"2871:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3296,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6551,"src":"2855:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6551_$","typeString":"type(library SafeCast)"}},"id":3297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2864:6:14","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6550,"src":"2855:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3299,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2855:24:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2851:28:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2842:37:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3302,"nodeType":"ExpressionStatement","src":"2842:37:14"}]}]},"documentation":{"id":3276,"nodeType":"StructuredDocumentation","src":"2298:111:14","text":" @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow)."},"id":3305,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"2423:6:14","nodeType":"FunctionDefinition","parameters":{"id":3281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3278,"mutability":"mutable","name":"a","nameLocation":"2438:1:14","nodeType":"VariableDeclaration","scope":3305,"src":"2430:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3277,"name":"uint256","nodeType":"ElementaryTypeName","src":"2430:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3280,"mutability":"mutable","name":"b","nameLocation":"2449:1:14","nodeType":"VariableDeclaration","scope":3305,"src":"2441:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3279,"name":"uint256","nodeType":"ElementaryTypeName","src":"2441:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2429:22:14"},"returnParameters":{"id":3286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3283,"mutability":"mutable","name":"success","nameLocation":"2480:7:14","nodeType":"VariableDeclaration","scope":3305,"src":"2475:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3282,"name":"bool","nodeType":"ElementaryTypeName","src":"2475:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3285,"mutability":"mutable","name":"result","nameLocation":"2497:6:14","nodeType":"VariableDeclaration","scope":3305,"src":"2489:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3284,"name":"uint256","nodeType":"ElementaryTypeName","src":"2489:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2474:30:14"},"scope":4786,"src":"2414:482:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3325,"nodeType":"Block","src":"3111:231:14","statements":[{"id":3324,"nodeType":"UncheckedBlock","src":"3121:215:14","statements":[{"expression":{"id":3321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3317,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3313,"src":"3145:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3318,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3310,"src":"3155:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3319,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3159:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3155:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3145:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3322,"nodeType":"ExpressionStatement","src":"3145:15:14"},{"AST":{"nativeSrc":"3199:127:14","nodeType":"YulBlock","src":"3199:127:14","statements":[{"nativeSrc":"3293:19:14","nodeType":"YulAssignment","src":"3293:19:14","value":{"arguments":[{"name":"a","nativeSrc":"3307:1:14","nodeType":"YulIdentifier","src":"3307:1:14"},{"name":"b","nativeSrc":"3310:1:14","nodeType":"YulIdentifier","src":"3310:1:14"}],"functionName":{"name":"div","nativeSrc":"3303:3:14","nodeType":"YulIdentifier","src":"3303:3:14"},"nativeSrc":"3303:9:14","nodeType":"YulFunctionCall","src":"3303:9:14"},"variableNames":[{"name":"result","nativeSrc":"3293:6:14","nodeType":"YulIdentifier","src":"3293:6:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3308,"isOffset":false,"isSlot":false,"src":"3307:1:14","valueSize":1},{"declaration":3310,"isOffset":false,"isSlot":false,"src":"3310:1:14","valueSize":1},{"declaration":3315,"isOffset":false,"isSlot":false,"src":"3293:6:14","valueSize":1}],"flags":["memory-safe"],"id":3323,"nodeType":"InlineAssembly","src":"3174:152:14"}]}]},"documentation":{"id":3306,"nodeType":"StructuredDocumentation","src":"2902:113:14","text":" @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."},"id":3326,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"3029:6:14","nodeType":"FunctionDefinition","parameters":{"id":3311,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3308,"mutability":"mutable","name":"a","nameLocation":"3044:1:14","nodeType":"VariableDeclaration","scope":3326,"src":"3036:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3307,"name":"uint256","nodeType":"ElementaryTypeName","src":"3036:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3310,"mutability":"mutable","name":"b","nameLocation":"3055:1:14","nodeType":"VariableDeclaration","scope":3326,"src":"3047:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3309,"name":"uint256","nodeType":"ElementaryTypeName","src":"3047:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3035:22:14"},"returnParameters":{"id":3316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3313,"mutability":"mutable","name":"success","nameLocation":"3086:7:14","nodeType":"VariableDeclaration","scope":3326,"src":"3081:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3312,"name":"bool","nodeType":"ElementaryTypeName","src":"3081:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3315,"mutability":"mutable","name":"result","nameLocation":"3103:6:14","nodeType":"VariableDeclaration","scope":3326,"src":"3095:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3314,"name":"uint256","nodeType":"ElementaryTypeName","src":"3095:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3080:30:14"},"scope":4786,"src":"3020:322:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3346,"nodeType":"Block","src":"3567:231:14","statements":[{"id":3345,"nodeType":"UncheckedBlock","src":"3577:215:14","statements":[{"expression":{"id":3342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3338,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3334,"src":"3601:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3339,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3331,"src":"3611:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3615:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3611:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3601:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3343,"nodeType":"ExpressionStatement","src":"3601:15:14"},{"AST":{"nativeSrc":"3655:127:14","nodeType":"YulBlock","src":"3655:127:14","statements":[{"nativeSrc":"3749:19:14","nodeType":"YulAssignment","src":"3749:19:14","value":{"arguments":[{"name":"a","nativeSrc":"3763:1:14","nodeType":"YulIdentifier","src":"3763:1:14"},{"name":"b","nativeSrc":"3766:1:14","nodeType":"YulIdentifier","src":"3766:1:14"}],"functionName":{"name":"mod","nativeSrc":"3759:3:14","nodeType":"YulIdentifier","src":"3759:3:14"},"nativeSrc":"3759:9:14","nodeType":"YulFunctionCall","src":"3759:9:14"},"variableNames":[{"name":"result","nativeSrc":"3749:6:14","nodeType":"YulIdentifier","src":"3749:6:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3329,"isOffset":false,"isSlot":false,"src":"3763:1:14","valueSize":1},{"declaration":3331,"isOffset":false,"isSlot":false,"src":"3766:1:14","valueSize":1},{"declaration":3336,"isOffset":false,"isSlot":false,"src":"3749:6:14","valueSize":1}],"flags":["memory-safe"],"id":3344,"nodeType":"InlineAssembly","src":"3630:152:14"}]}]},"documentation":{"id":3327,"nodeType":"StructuredDocumentation","src":"3348:123:14","text":" @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."},"id":3347,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"3485:6:14","nodeType":"FunctionDefinition","parameters":{"id":3332,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3329,"mutability":"mutable","name":"a","nameLocation":"3500:1:14","nodeType":"VariableDeclaration","scope":3347,"src":"3492:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3328,"name":"uint256","nodeType":"ElementaryTypeName","src":"3492:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3331,"mutability":"mutable","name":"b","nameLocation":"3511:1:14","nodeType":"VariableDeclaration","scope":3347,"src":"3503:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3330,"name":"uint256","nodeType":"ElementaryTypeName","src":"3503:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3491:22:14"},"returnParameters":{"id":3337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3334,"mutability":"mutable","name":"success","nameLocation":"3542:7:14","nodeType":"VariableDeclaration","scope":3347,"src":"3537:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3333,"name":"bool","nodeType":"ElementaryTypeName","src":"3537:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3336,"mutability":"mutable","name":"result","nameLocation":"3559:6:14","nodeType":"VariableDeclaration","scope":3347,"src":"3551:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3335,"name":"uint256","nodeType":"ElementaryTypeName","src":"3551:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3536:30:14"},"scope":4786,"src":"3476:322:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3376,"nodeType":"Block","src":"3989:122:14","statements":[{"assignments":[3358,3360],"declarations":[{"constant":false,"id":3358,"mutability":"mutable","name":"success","nameLocation":"4005:7:14","nodeType":"VariableDeclaration","scope":3376,"src":"4000:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3357,"name":"bool","nodeType":"ElementaryTypeName","src":"4000:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3360,"mutability":"mutable","name":"result","nameLocation":"4022:6:14","nodeType":"VariableDeclaration","scope":3376,"src":"4014:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3359,"name":"uint256","nodeType":"ElementaryTypeName","src":"4014:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3365,"initialValue":{"arguments":[{"id":3362,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3350,"src":"4039:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3363,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3352,"src":"4042:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3361,"name":"tryAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3240,"src":"4032:6:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":3364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4032:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"3999:45:14"},{"expression":{"arguments":[{"id":3367,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3358,"src":"4069:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3368,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3360,"src":"4078:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":3371,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4091:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3370,"name":"uint256","nodeType":"ElementaryTypeName","src":"4091:7:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":3369,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4086:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3372,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4086:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":3373,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4100:3:14","memberName":"max","nodeType":"MemberAccess","src":"4086:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3366,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3454,"src":"4061:7:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3374,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4061:43:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3356,"id":3375,"nodeType":"Return","src":"4054:50:14"}]},"documentation":{"id":3348,"nodeType":"StructuredDocumentation","src":"3804:103:14","text":" @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":3377,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingAdd","nameLocation":"3921:13:14","nodeType":"FunctionDefinition","parameters":{"id":3353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3350,"mutability":"mutable","name":"a","nameLocation":"3943:1:14","nodeType":"VariableDeclaration","scope":3377,"src":"3935:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3349,"name":"uint256","nodeType":"ElementaryTypeName","src":"3935:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3352,"mutability":"mutable","name":"b","nameLocation":"3954:1:14","nodeType":"VariableDeclaration","scope":3377,"src":"3946:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3351,"name":"uint256","nodeType":"ElementaryTypeName","src":"3946:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3934:22:14"},"returnParameters":{"id":3356,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3355,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3377,"src":"3980:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3354,"name":"uint256","nodeType":"ElementaryTypeName","src":"3980:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3979:9:14"},"scope":4786,"src":"3912:199:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3396,"nodeType":"Block","src":"4294:73:14","statements":[{"assignments":[null,3388],"declarations":[null,{"constant":false,"id":3388,"mutability":"mutable","name":"result","nameLocation":"4315:6:14","nodeType":"VariableDeclaration","scope":3396,"src":"4307:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3387,"name":"uint256","nodeType":"ElementaryTypeName","src":"4307:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3393,"initialValue":{"arguments":[{"id":3390,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3380,"src":"4332:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3391,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3382,"src":"4335:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3389,"name":"trySub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3275,"src":"4325:6:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":3392,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4325:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4304:33:14"},{"expression":{"id":3394,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3388,"src":"4354:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3386,"id":3395,"nodeType":"Return","src":"4347:13:14"}]},"documentation":{"id":3378,"nodeType":"StructuredDocumentation","src":"4117:95:14","text":" @dev Unsigned saturating subtraction, bounds to zero instead of overflowing."},"id":3397,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingSub","nameLocation":"4226:13:14","nodeType":"FunctionDefinition","parameters":{"id":3383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3380,"mutability":"mutable","name":"a","nameLocation":"4248:1:14","nodeType":"VariableDeclaration","scope":3397,"src":"4240:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3379,"name":"uint256","nodeType":"ElementaryTypeName","src":"4240:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3382,"mutability":"mutable","name":"b","nameLocation":"4259:1:14","nodeType":"VariableDeclaration","scope":3397,"src":"4251:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3381,"name":"uint256","nodeType":"ElementaryTypeName","src":"4251:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4239:22:14"},"returnParameters":{"id":3386,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3385,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3397,"src":"4285:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3384,"name":"uint256","nodeType":"ElementaryTypeName","src":"4285:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4284:9:14"},"scope":4786,"src":"4217:150:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3426,"nodeType":"Block","src":"4564:122:14","statements":[{"assignments":[3408,3410],"declarations":[{"constant":false,"id":3408,"mutability":"mutable","name":"success","nameLocation":"4580:7:14","nodeType":"VariableDeclaration","scope":3426,"src":"4575:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3407,"name":"bool","nodeType":"ElementaryTypeName","src":"4575:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3410,"mutability":"mutable","name":"result","nameLocation":"4597:6:14","nodeType":"VariableDeclaration","scope":3426,"src":"4589:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3409,"name":"uint256","nodeType":"ElementaryTypeName","src":"4589:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3415,"initialValue":{"arguments":[{"id":3412,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3400,"src":"4614:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3413,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3402,"src":"4617:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3411,"name":"tryMul","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3305,"src":"4607:6:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":3414,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4607:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4574:45:14"},{"expression":{"arguments":[{"id":3417,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3408,"src":"4644:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3418,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3410,"src":"4653:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":3421,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4666:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3420,"name":"uint256","nodeType":"ElementaryTypeName","src":"4666:7:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":3419,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4661:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3422,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4661:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":3423,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4675:3:14","memberName":"max","nodeType":"MemberAccess","src":"4661:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3416,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3454,"src":"4636:7:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3424,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4636:43:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3406,"id":3425,"nodeType":"Return","src":"4629:50:14"}]},"documentation":{"id":3398,"nodeType":"StructuredDocumentation","src":"4373:109:14","text":" @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":3427,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingMul","nameLocation":"4496:13:14","nodeType":"FunctionDefinition","parameters":{"id":3403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3400,"mutability":"mutable","name":"a","nameLocation":"4518:1:14","nodeType":"VariableDeclaration","scope":3427,"src":"4510:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3399,"name":"uint256","nodeType":"ElementaryTypeName","src":"4510:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3402,"mutability":"mutable","name":"b","nameLocation":"4529:1:14","nodeType":"VariableDeclaration","scope":3427,"src":"4521:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3401,"name":"uint256","nodeType":"ElementaryTypeName","src":"4521:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4509:22:14"},"returnParameters":{"id":3406,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3405,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3427,"src":"4555:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3404,"name":"uint256","nodeType":"ElementaryTypeName","src":"4555:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4554:9:14"},"scope":4786,"src":"4487:199:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3453,"nodeType":"Block","src":"5158:207:14","statements":[{"id":3452,"nodeType":"UncheckedBlock","src":"5168:191:14","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3439,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3434,"src":"5306:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3440,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3432,"src":"5312:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3441,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3434,"src":"5316:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5312:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3443,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5311:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3446,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3430,"src":"5337:9:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3444,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6551,"src":"5321:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6551_$","typeString":"type(library SafeCast)"}},"id":3445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5330:6:14","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6550,"src":"5321:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5321:26:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5311:36:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3449,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5310:38:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5306:42:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3438,"id":3451,"nodeType":"Return","src":"5299:49:14"}]}]},"documentation":{"id":3428,"nodeType":"StructuredDocumentation","src":"4692:374:14","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":3454,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"5080:7:14","nodeType":"FunctionDefinition","parameters":{"id":3435,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3430,"mutability":"mutable","name":"condition","nameLocation":"5093:9:14","nodeType":"VariableDeclaration","scope":3454,"src":"5088:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3429,"name":"bool","nodeType":"ElementaryTypeName","src":"5088:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3432,"mutability":"mutable","name":"a","nameLocation":"5112:1:14","nodeType":"VariableDeclaration","scope":3454,"src":"5104:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3431,"name":"uint256","nodeType":"ElementaryTypeName","src":"5104:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3434,"mutability":"mutable","name":"b","nameLocation":"5123:1:14","nodeType":"VariableDeclaration","scope":3454,"src":"5115:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3433,"name":"uint256","nodeType":"ElementaryTypeName","src":"5115:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5087:38:14"},"returnParameters":{"id":3438,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3437,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3454,"src":"5149:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3436,"name":"uint256","nodeType":"ElementaryTypeName","src":"5149:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5148:9:14"},"scope":4786,"src":"5071:294:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3472,"nodeType":"Block","src":"5502:44:14","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3465,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3457,"src":"5527:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3466,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3459,"src":"5531:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5527:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3468,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3457,"src":"5534:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3469,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3459,"src":"5537:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3464,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3454,"src":"5519:7:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5519:20:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3463,"id":3471,"nodeType":"Return","src":"5512:27:14"}]},"documentation":{"id":3455,"nodeType":"StructuredDocumentation","src":"5371:59:14","text":" @dev Returns the largest of two numbers."},"id":3473,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"5444:3:14","nodeType":"FunctionDefinition","parameters":{"id":3460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3457,"mutability":"mutable","name":"a","nameLocation":"5456:1:14","nodeType":"VariableDeclaration","scope":3473,"src":"5448:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3456,"name":"uint256","nodeType":"ElementaryTypeName","src":"5448:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3459,"mutability":"mutable","name":"b","nameLocation":"5467:1:14","nodeType":"VariableDeclaration","scope":3473,"src":"5459:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3458,"name":"uint256","nodeType":"ElementaryTypeName","src":"5459:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5447:22:14"},"returnParameters":{"id":3463,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3462,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3473,"src":"5493:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3461,"name":"uint256","nodeType":"ElementaryTypeName","src":"5493:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5492:9:14"},"scope":4786,"src":"5435:111:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3491,"nodeType":"Block","src":"5684:44:14","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3484,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3476,"src":"5709:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3485,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3478,"src":"5713:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5709:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3487,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3476,"src":"5716:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3488,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3478,"src":"5719:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3483,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3454,"src":"5701:7:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3489,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5701:20:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3482,"id":3490,"nodeType":"Return","src":"5694:27:14"}]},"documentation":{"id":3474,"nodeType":"StructuredDocumentation","src":"5552:60:14","text":" @dev Returns the smallest of two numbers."},"id":3492,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"5626:3:14","nodeType":"FunctionDefinition","parameters":{"id":3479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3476,"mutability":"mutable","name":"a","nameLocation":"5638:1:14","nodeType":"VariableDeclaration","scope":3492,"src":"5630:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3475,"name":"uint256","nodeType":"ElementaryTypeName","src":"5630:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3478,"mutability":"mutable","name":"b","nameLocation":"5649:1:14","nodeType":"VariableDeclaration","scope":3492,"src":"5641:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3477,"name":"uint256","nodeType":"ElementaryTypeName","src":"5641:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5629:22:14"},"returnParameters":{"id":3482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3481,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3492,"src":"5675:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3480,"name":"uint256","nodeType":"ElementaryTypeName","src":"5675:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5674:9:14"},"scope":4786,"src":"5617:111:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3514,"nodeType":"Block","src":"5912:82:14","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3502,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3495,"src":"5967:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":3503,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3497,"src":"5971:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5967:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3505,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5966:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3506,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3495,"src":"5977:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3507,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3497,"src":"5981:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5977:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3509,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5976:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":3510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5986:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"5976:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5966:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3501,"id":3513,"nodeType":"Return","src":"5959:28:14"}]},"documentation":{"id":3493,"nodeType":"StructuredDocumentation","src":"5734:102:14","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":3515,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"5850:7:14","nodeType":"FunctionDefinition","parameters":{"id":3498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3495,"mutability":"mutable","name":"a","nameLocation":"5866:1:14","nodeType":"VariableDeclaration","scope":3515,"src":"5858:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3494,"name":"uint256","nodeType":"ElementaryTypeName","src":"5858:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3497,"mutability":"mutable","name":"b","nameLocation":"5877:1:14","nodeType":"VariableDeclaration","scope":3515,"src":"5869:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3496,"name":"uint256","nodeType":"ElementaryTypeName","src":"5869:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5857:22:14"},"returnParameters":{"id":3501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3500,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3515,"src":"5903:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3499,"name":"uint256","nodeType":"ElementaryTypeName","src":"5903:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5902:9:14"},"scope":4786,"src":"5841:153:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3555,"nodeType":"Block","src":"6286:633:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3525,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3520,"src":"6300:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6305:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6300:6:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3536,"nodeType":"IfStatement","src":"6296:150:14","trueBody":{"id":3535,"nodeType":"Block","src":"6308:138:14","statements":[{"expression":{"arguments":[{"expression":{"id":3531,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1658,"src":"6412:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1658_$","typeString":"type(library Panic)"}},"id":3532,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6418:16:14","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1625,"src":"6412:22:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3528,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1658,"src":"6400:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1658_$","typeString":"type(library Panic)"}},"id":3530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6406:5:14","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1657,"src":"6400:11:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6400:35:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3534,"nodeType":"ExpressionStatement","src":"6400:35:14"}]}},{"id":3554,"nodeType":"UncheckedBlock","src":"6829:84:14","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3539,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3518,"src":"6876:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6880:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6876:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3537,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6551,"src":"6860:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6551_$","typeString":"type(library SafeCast)"}},"id":3538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6869:6:14","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6550,"src":"6860:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3542,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6860:22:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3543,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3518,"src":"6887:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3544,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6891:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6887:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3546,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6886:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3547,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3520,"src":"6896:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6886:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6900:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6886:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3551,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6885:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6860:42:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3524,"id":3553,"nodeType":"Return","src":"6853:49:14"}]}]},"documentation":{"id":3516,"nodeType":"StructuredDocumentation","src":"6000:210:14","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":3556,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"6224:7:14","nodeType":"FunctionDefinition","parameters":{"id":3521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3518,"mutability":"mutable","name":"a","nameLocation":"6240:1:14","nodeType":"VariableDeclaration","scope":3556,"src":"6232:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3517,"name":"uint256","nodeType":"ElementaryTypeName","src":"6232:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3520,"mutability":"mutable","name":"b","nameLocation":"6251:1:14","nodeType":"VariableDeclaration","scope":3556,"src":"6243:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3519,"name":"uint256","nodeType":"ElementaryTypeName","src":"6243:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6231:22:14"},"returnParameters":{"id":3524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3523,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3556,"src":"6277:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3522,"name":"uint256","nodeType":"ElementaryTypeName","src":"6277:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6276:9:14"},"scope":4786,"src":"6215:704:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3691,"nodeType":"Block","src":"7340:3585:14","statements":[{"id":3690,"nodeType":"UncheckedBlock","src":"7350:3569:14","statements":[{"assignments":[3569,3571],"declarations":[{"constant":false,"id":3569,"mutability":"mutable","name":"high","nameLocation":"7383:4:14","nodeType":"VariableDeclaration","scope":3690,"src":"7375:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3568,"name":"uint256","nodeType":"ElementaryTypeName","src":"7375:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3571,"mutability":"mutable","name":"low","nameLocation":"7397:3:14","nodeType":"VariableDeclaration","scope":3690,"src":"7389:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3570,"name":"uint256","nodeType":"ElementaryTypeName","src":"7389:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3576,"initialValue":{"arguments":[{"id":3573,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3559,"src":"7411:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3574,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3561,"src":"7414:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3572,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3205,"src":"7404:6:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":3575,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7404:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"7374:42:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3577,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3569,"src":"7498:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7506:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7498:9:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3585,"nodeType":"IfStatement","src":"7494:365:14","trueBody":{"id":3584,"nodeType":"Block","src":"7509:350:14","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3580,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3571,"src":"7827:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3581,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3563,"src":"7833:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7827:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3567,"id":3583,"nodeType":"Return","src":"7820:24:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3586,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3563,"src":"7969:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":3587,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3569,"src":"7984:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7969:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3604,"nodeType":"IfStatement","src":"7965:142:14","trueBody":{"id":3603,"nodeType":"Block","src":"7990:117:14","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3593,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3563,"src":"8028:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8043:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8028:16:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":3596,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1658,"src":"8046:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1658_$","typeString":"type(library Panic)"}},"id":3597,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8052:16:14","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1625,"src":"8046:22:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3598,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1658,"src":"8070:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1658_$","typeString":"type(library Panic)"}},"id":3599,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8076:14:14","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":1621,"src":"8070:20:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3592,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3454,"src":"8020:7:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3600,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8020:71:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3589,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1658,"src":"8008:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1658_$","typeString":"type(library Panic)"}},"id":3591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8014:5:14","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1657,"src":"8008:11:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3601,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8008:84:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3602,"nodeType":"ExpressionStatement","src":"8008:84:14"}]}},{"assignments":[3606],"declarations":[{"constant":false,"id":3606,"mutability":"mutable","name":"remainder","nameLocation":"8367:9:14","nodeType":"VariableDeclaration","scope":3690,"src":"8359:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3605,"name":"uint256","nodeType":"ElementaryTypeName","src":"8359:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3607,"nodeType":"VariableDeclarationStatement","src":"8359:17:14"},{"AST":{"nativeSrc":"8415:283:14","nodeType":"YulBlock","src":"8415:283:14","statements":[{"nativeSrc":"8484:38:14","nodeType":"YulAssignment","src":"8484:38:14","value":{"arguments":[{"name":"x","nativeSrc":"8504:1:14","nodeType":"YulIdentifier","src":"8504:1:14"},{"name":"y","nativeSrc":"8507:1:14","nodeType":"YulIdentifier","src":"8507:1:14"},{"name":"denominator","nativeSrc":"8510:11:14","nodeType":"YulIdentifier","src":"8510:11:14"}],"functionName":{"name":"mulmod","nativeSrc":"8497:6:14","nodeType":"YulIdentifier","src":"8497:6:14"},"nativeSrc":"8497:25:14","nodeType":"YulFunctionCall","src":"8497:25:14"},"variableNames":[{"name":"remainder","nativeSrc":"8484:9:14","nodeType":"YulIdentifier","src":"8484:9:14"}]},{"nativeSrc":"8604:37:14","nodeType":"YulAssignment","src":"8604:37:14","value":{"arguments":[{"name":"high","nativeSrc":"8616:4:14","nodeType":"YulIdentifier","src":"8616:4:14"},{"arguments":[{"name":"remainder","nativeSrc":"8625:9:14","nodeType":"YulIdentifier","src":"8625:9:14"},{"name":"low","nativeSrc":"8636:3:14","nodeType":"YulIdentifier","src":"8636:3:14"}],"functionName":{"name":"gt","nativeSrc":"8622:2:14","nodeType":"YulIdentifier","src":"8622:2:14"},"nativeSrc":"8622:18:14","nodeType":"YulFunctionCall","src":"8622:18:14"}],"functionName":{"name":"sub","nativeSrc":"8612:3:14","nodeType":"YulIdentifier","src":"8612:3:14"},"nativeSrc":"8612:29:14","nodeType":"YulFunctionCall","src":"8612:29:14"},"variableNames":[{"name":"high","nativeSrc":"8604:4:14","nodeType":"YulIdentifier","src":"8604:4:14"}]},{"nativeSrc":"8658:26:14","nodeType":"YulAssignment","src":"8658:26:14","value":{"arguments":[{"name":"low","nativeSrc":"8669:3:14","nodeType":"YulIdentifier","src":"8669:3:14"},{"name":"remainder","nativeSrc":"8674:9:14","nodeType":"YulIdentifier","src":"8674:9:14"}],"functionName":{"name":"sub","nativeSrc":"8665:3:14","nodeType":"YulIdentifier","src":"8665:3:14"},"nativeSrc":"8665:19:14","nodeType":"YulFunctionCall","src":"8665:19:14"},"variableNames":[{"name":"low","nativeSrc":"8658:3:14","nodeType":"YulIdentifier","src":"8658:3:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3563,"isOffset":false,"isSlot":false,"src":"8510:11:14","valueSize":1},{"declaration":3569,"isOffset":false,"isSlot":false,"src":"8604:4:14","valueSize":1},{"declaration":3569,"isOffset":false,"isSlot":false,"src":"8616:4:14","valueSize":1},{"declaration":3571,"isOffset":false,"isSlot":false,"src":"8636:3:14","valueSize":1},{"declaration":3571,"isOffset":false,"isSlot":false,"src":"8658:3:14","valueSize":1},{"declaration":3571,"isOffset":false,"isSlot":false,"src":"8669:3:14","valueSize":1},{"declaration":3606,"isOffset":false,"isSlot":false,"src":"8484:9:14","valueSize":1},{"declaration":3606,"isOffset":false,"isSlot":false,"src":"8625:9:14","valueSize":1},{"declaration":3606,"isOffset":false,"isSlot":false,"src":"8674:9:14","valueSize":1},{"declaration":3559,"isOffset":false,"isSlot":false,"src":"8504:1:14","valueSize":1},{"declaration":3561,"isOffset":false,"isSlot":false,"src":"8507:1:14","valueSize":1}],"flags":["memory-safe"],"id":3608,"nodeType":"InlineAssembly","src":"8390:308:14"},{"assignments":[3610],"declarations":[{"constant":false,"id":3610,"mutability":"mutable","name":"twos","nameLocation":"8910:4:14","nodeType":"VariableDeclaration","scope":3690,"src":"8902:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3609,"name":"uint256","nodeType":"ElementaryTypeName","src":"8902:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3617,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3611,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3563,"src":"8917:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":3612,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8932:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3613,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3563,"src":"8936:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8932:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3615,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8931:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8917:31:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8902:46:14"},{"AST":{"nativeSrc":"8987:359:14","nodeType":"YulBlock","src":"8987:359:14","statements":[{"nativeSrc":"9052:37:14","nodeType":"YulAssignment","src":"9052:37:14","value":{"arguments":[{"name":"denominator","nativeSrc":"9071:11:14","nodeType":"YulIdentifier","src":"9071:11:14"},{"name":"twos","nativeSrc":"9084:4:14","nodeType":"YulIdentifier","src":"9084:4:14"}],"functionName":{"name":"div","nativeSrc":"9067:3:14","nodeType":"YulIdentifier","src":"9067:3:14"},"nativeSrc":"9067:22:14","nodeType":"YulFunctionCall","src":"9067:22:14"},"variableNames":[{"name":"denominator","nativeSrc":"9052:11:14","nodeType":"YulIdentifier","src":"9052:11:14"}]},{"nativeSrc":"9153:21:14","nodeType":"YulAssignment","src":"9153:21:14","value":{"arguments":[{"name":"low","nativeSrc":"9164:3:14","nodeType":"YulIdentifier","src":"9164:3:14"},{"name":"twos","nativeSrc":"9169:4:14","nodeType":"YulIdentifier","src":"9169:4:14"}],"functionName":{"name":"div","nativeSrc":"9160:3:14","nodeType":"YulIdentifier","src":"9160:3:14"},"nativeSrc":"9160:14:14","nodeType":"YulFunctionCall","src":"9160:14:14"},"variableNames":[{"name":"low","nativeSrc":"9153:3:14","nodeType":"YulIdentifier","src":"9153:3:14"}]},{"nativeSrc":"9293:39:14","nodeType":"YulAssignment","src":"9293:39:14","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"9313:1:14","nodeType":"YulLiteral","src":"9313:1:14","type":"","value":"0"},{"name":"twos","nativeSrc":"9316:4:14","nodeType":"YulIdentifier","src":"9316:4:14"}],"functionName":{"name":"sub","nativeSrc":"9309:3:14","nodeType":"YulIdentifier","src":"9309:3:14"},"nativeSrc":"9309:12:14","nodeType":"YulFunctionCall","src":"9309:12:14"},{"name":"twos","nativeSrc":"9323:4:14","nodeType":"YulIdentifier","src":"9323:4:14"}],"functionName":{"name":"div","nativeSrc":"9305:3:14","nodeType":"YulIdentifier","src":"9305:3:14"},"nativeSrc":"9305:23:14","nodeType":"YulFunctionCall","src":"9305:23:14"},{"kind":"number","nativeSrc":"9330:1:14","nodeType":"YulLiteral","src":"9330:1:14","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"9301:3:14","nodeType":"YulIdentifier","src":"9301:3:14"},"nativeSrc":"9301:31:14","nodeType":"YulFunctionCall","src":"9301:31:14"},"variableNames":[{"name":"twos","nativeSrc":"9293:4:14","nodeType":"YulIdentifier","src":"9293:4:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3563,"isOffset":false,"isSlot":false,"src":"9052:11:14","valueSize":1},{"declaration":3563,"isOffset":false,"isSlot":false,"src":"9071:11:14","valueSize":1},{"declaration":3571,"isOffset":false,"isSlot":false,"src":"9153:3:14","valueSize":1},{"declaration":3571,"isOffset":false,"isSlot":false,"src":"9164:3:14","valueSize":1},{"declaration":3610,"isOffset":false,"isSlot":false,"src":"9084:4:14","valueSize":1},{"declaration":3610,"isOffset":false,"isSlot":false,"src":"9169:4:14","valueSize":1},{"declaration":3610,"isOffset":false,"isSlot":false,"src":"9293:4:14","valueSize":1},{"declaration":3610,"isOffset":false,"isSlot":false,"src":"9316:4:14","valueSize":1},{"declaration":3610,"isOffset":false,"isSlot":false,"src":"9323:4:14","valueSize":1}],"flags":["memory-safe"],"id":3618,"nodeType":"InlineAssembly","src":"8962:384:14"},{"expression":{"id":3623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3619,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3571,"src":"9409:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3620,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3569,"src":"9416:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3621,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3610,"src":"9423:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9416:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9409:18:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3624,"nodeType":"ExpressionStatement","src":"9409:18:14"},{"assignments":[3626],"declarations":[{"constant":false,"id":3626,"mutability":"mutable","name":"inverse","nameLocation":"9770:7:14","nodeType":"VariableDeclaration","scope":3690,"src":"9762:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3625,"name":"uint256","nodeType":"ElementaryTypeName","src":"9762:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3633,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":3627,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9781:1:14","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3628,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3563,"src":"9785:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9781:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3630,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9780:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":3631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9800:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9780:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9762:39:14"},{"expression":{"id":3640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3634,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3626,"src":"10018:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10029:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3636,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3563,"src":"10033:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3637,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3626,"src":"10047:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10033:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10029:25:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10018:36:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3641,"nodeType":"ExpressionStatement","src":"10018:36:14"},{"expression":{"id":3648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3642,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3626,"src":"10088:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10099:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3644,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3563,"src":"10103:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3645,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3626,"src":"10117:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10103:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10099:25:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10088:36:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3649,"nodeType":"ExpressionStatement","src":"10088:36:14"},{"expression":{"id":3656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3650,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3626,"src":"10160:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10171:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3652,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3563,"src":"10175:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3653,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3626,"src":"10189:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10175:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10171:25:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10160:36:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3657,"nodeType":"ExpressionStatement","src":"10160:36:14"},{"expression":{"id":3664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3658,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3626,"src":"10231:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10242:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3660,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3563,"src":"10246:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3661,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3626,"src":"10260:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10246:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10242:25:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10231:36:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3665,"nodeType":"ExpressionStatement","src":"10231:36:14"},{"expression":{"id":3672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3666,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3626,"src":"10304:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10315:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3668,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3563,"src":"10319:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3669,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3626,"src":"10333:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10319:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10315:25:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10304:36:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3673,"nodeType":"ExpressionStatement","src":"10304:36:14"},{"expression":{"id":3680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3674,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3626,"src":"10378:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10389:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3676,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3563,"src":"10393:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3677,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3626,"src":"10407:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10393:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10389:25:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10378:36:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3681,"nodeType":"ExpressionStatement","src":"10378:36:14"},{"expression":{"id":3686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3682,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3566,"src":"10859:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3683,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3571,"src":"10868:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3684,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3626,"src":"10874:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10868:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10859:22:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3687,"nodeType":"ExpressionStatement","src":"10859:22:14"},{"expression":{"id":3688,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3566,"src":"10902:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3567,"id":3689,"nodeType":"Return","src":"10895:13:14"}]}]},"documentation":{"id":3557,"nodeType":"StructuredDocumentation","src":"6925:312:14","text":" @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":3692,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"7251:6:14","nodeType":"FunctionDefinition","parameters":{"id":3564,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3559,"mutability":"mutable","name":"x","nameLocation":"7266:1:14","nodeType":"VariableDeclaration","scope":3692,"src":"7258:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3558,"name":"uint256","nodeType":"ElementaryTypeName","src":"7258:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3561,"mutability":"mutable","name":"y","nameLocation":"7277:1:14","nodeType":"VariableDeclaration","scope":3692,"src":"7269:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3560,"name":"uint256","nodeType":"ElementaryTypeName","src":"7269:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3563,"mutability":"mutable","name":"denominator","nameLocation":"7288:11:14","nodeType":"VariableDeclaration","scope":3692,"src":"7280:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3562,"name":"uint256","nodeType":"ElementaryTypeName","src":"7280:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7257:43:14"},"returnParameters":{"id":3567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3566,"mutability":"mutable","name":"result","nameLocation":"7332:6:14","nodeType":"VariableDeclaration","scope":3692,"src":"7324:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3565,"name":"uint256","nodeType":"ElementaryTypeName","src":"7324:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7323:16:14"},"scope":4786,"src":"7242:3683:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3728,"nodeType":"Block","src":"11164:128:14","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3708,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3695,"src":"11188:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3709,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3697,"src":"11191:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3710,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3699,"src":"11194:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3707,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[3692,3729],"referencedDeclaration":3692,"src":"11181:6:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3711,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11181:25:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3715,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3702,"src":"11242:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3177","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3177","typeString":"enum Math.Rounding"}],"id":3714,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4785,"src":"11225:16:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3177_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3716,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11225:26:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3718,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3695,"src":"11262:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3719,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3697,"src":"11265:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3720,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3699,"src":"11268:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3717,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"11255:6:14","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11255:25:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11283:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11255:29:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11225:59:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3712,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6551,"src":"11209:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6551_$","typeString":"type(library SafeCast)"}},"id":3713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11218:6:14","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6550,"src":"11209:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3725,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11209:76:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11181:104:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3706,"id":3727,"nodeType":"Return","src":"11174:111:14"}]},"documentation":{"id":3693,"nodeType":"StructuredDocumentation","src":"10931:118:14","text":" @dev Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":3729,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"11063:6:14","nodeType":"FunctionDefinition","parameters":{"id":3703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3695,"mutability":"mutable","name":"x","nameLocation":"11078:1:14","nodeType":"VariableDeclaration","scope":3729,"src":"11070:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3694,"name":"uint256","nodeType":"ElementaryTypeName","src":"11070:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3697,"mutability":"mutable","name":"y","nameLocation":"11089:1:14","nodeType":"VariableDeclaration","scope":3729,"src":"11081:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3696,"name":"uint256","nodeType":"ElementaryTypeName","src":"11081:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3699,"mutability":"mutable","name":"denominator","nameLocation":"11100:11:14","nodeType":"VariableDeclaration","scope":3729,"src":"11092:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3698,"name":"uint256","nodeType":"ElementaryTypeName","src":"11092:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3702,"mutability":"mutable","name":"rounding","nameLocation":"11122:8:14","nodeType":"VariableDeclaration","scope":3729,"src":"11113:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3177","typeString":"enum Math.Rounding"},"typeName":{"id":3701,"nodeType":"UserDefinedTypeName","pathNode":{"id":3700,"name":"Rounding","nameLocations":["11113:8:14"],"nodeType":"IdentifierPath","referencedDeclaration":3177,"src":"11113:8:14"},"referencedDeclaration":3177,"src":"11113:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3177","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11069:62:14"},"returnParameters":{"id":3706,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3705,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3729,"src":"11155:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3704,"name":"uint256","nodeType":"ElementaryTypeName","src":"11155:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11154:9:14"},"scope":4786,"src":"11054:238:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3778,"nodeType":"Block","src":"11500:245:14","statements":[{"id":3777,"nodeType":"UncheckedBlock","src":"11510:229:14","statements":[{"assignments":[3742,3744],"declarations":[{"constant":false,"id":3742,"mutability":"mutable","name":"high","nameLocation":"11543:4:14","nodeType":"VariableDeclaration","scope":3777,"src":"11535:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3741,"name":"uint256","nodeType":"ElementaryTypeName","src":"11535:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3744,"mutability":"mutable","name":"low","nameLocation":"11557:3:14","nodeType":"VariableDeclaration","scope":3777,"src":"11549:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3743,"name":"uint256","nodeType":"ElementaryTypeName","src":"11549:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3749,"initialValue":{"arguments":[{"id":3746,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3732,"src":"11571:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3747,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3734,"src":"11574:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3745,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3205,"src":"11564:6:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":3748,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11564:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11534:42:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3750,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3742,"src":"11594:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11602:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":3752,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3736,"src":"11607:1:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11602:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11594:14:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3763,"nodeType":"IfStatement","src":"11590:86:14","trueBody":{"id":3762,"nodeType":"Block","src":"11610:66:14","statements":[{"expression":{"arguments":[{"expression":{"id":3758,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1658,"src":"11640:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1658_$","typeString":"type(library Panic)"}},"id":3759,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11646:14:14","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":1621,"src":"11640:20:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3755,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1658,"src":"11628:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1658_$","typeString":"type(library Panic)"}},"id":3757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11634:5:14","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1657,"src":"11628:11:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11628:33:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3761,"nodeType":"ExpressionStatement","src":"11628:33:14"}]}},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3764,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3742,"src":"11697:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":3767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"323536","id":3765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11706:3:14","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3766,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3736,"src":"11712:1:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11706:7:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"id":3768,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11705:9:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"11697:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3770,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11696:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3771,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3744,"src":"11719:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":3772,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3736,"src":"11726:1:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11719:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3774,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11718:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11696:32:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3740,"id":3776,"nodeType":"Return","src":"11689:39:14"}]}]},"documentation":{"id":3730,"nodeType":"StructuredDocumentation","src":"11298:111:14","text":" @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256."},"id":3779,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11423:6:14","nodeType":"FunctionDefinition","parameters":{"id":3737,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3732,"mutability":"mutable","name":"x","nameLocation":"11438:1:14","nodeType":"VariableDeclaration","scope":3779,"src":"11430:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3731,"name":"uint256","nodeType":"ElementaryTypeName","src":"11430:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3734,"mutability":"mutable","name":"y","nameLocation":"11449:1:14","nodeType":"VariableDeclaration","scope":3779,"src":"11441:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3733,"name":"uint256","nodeType":"ElementaryTypeName","src":"11441:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3736,"mutability":"mutable","name":"n","nameLocation":"11458:1:14","nodeType":"VariableDeclaration","scope":3779,"src":"11452:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3735,"name":"uint8","nodeType":"ElementaryTypeName","src":"11452:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"11429:31:14"},"returnParameters":{"id":3740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3739,"mutability":"mutable","name":"result","nameLocation":"11492:6:14","nodeType":"VariableDeclaration","scope":3779,"src":"11484:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3738,"name":"uint256","nodeType":"ElementaryTypeName","src":"11484:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11483:16:14"},"scope":4786,"src":"11414:331:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3817,"nodeType":"Block","src":"11963:113:14","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3795,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3782,"src":"11987:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3796,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3784,"src":"11990:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3797,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3786,"src":"11993:1:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":3794,"name":"mulShr","nodeType":"Identifier","overloadedDeclarations":[3779,3818],"referencedDeclaration":3779,"src":"11980:6:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint8_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint8) pure returns (uint256)"}},"id":3798,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11980:15:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3802,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3789,"src":"12031:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3177","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3177","typeString":"enum Math.Rounding"}],"id":3801,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4785,"src":"12014:16:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3177_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3803,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12014:26:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3805,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3782,"src":"12051:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3806,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3784,"src":"12054:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12057:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":3808,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3786,"src":"12062:1:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12057:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3804,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"12044:6:14","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3810,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12044:20:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12067:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12044:24:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12014:54:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3799,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6551,"src":"11998:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6551_$","typeString":"type(library SafeCast)"}},"id":3800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12007:6:14","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6550,"src":"11998:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11998:71:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11980:89:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3793,"id":3816,"nodeType":"Return","src":"11973:96:14"}]},"documentation":{"id":3780,"nodeType":"StructuredDocumentation","src":"11751:109:14","text":" @dev Calculates x * y >> n with full precision, following the selected rounding direction."},"id":3818,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11874:6:14","nodeType":"FunctionDefinition","parameters":{"id":3790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3782,"mutability":"mutable","name":"x","nameLocation":"11889:1:14","nodeType":"VariableDeclaration","scope":3818,"src":"11881:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3781,"name":"uint256","nodeType":"ElementaryTypeName","src":"11881:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3784,"mutability":"mutable","name":"y","nameLocation":"11900:1:14","nodeType":"VariableDeclaration","scope":3818,"src":"11892:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3783,"name":"uint256","nodeType":"ElementaryTypeName","src":"11892:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3786,"mutability":"mutable","name":"n","nameLocation":"11909:1:14","nodeType":"VariableDeclaration","scope":3818,"src":"11903:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3785,"name":"uint8","nodeType":"ElementaryTypeName","src":"11903:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3789,"mutability":"mutable","name":"rounding","nameLocation":"11921:8:14","nodeType":"VariableDeclaration","scope":3818,"src":"11912:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3177","typeString":"enum Math.Rounding"},"typeName":{"id":3788,"nodeType":"UserDefinedTypeName","pathNode":{"id":3787,"name":"Rounding","nameLocations":["11912:8:14"],"nodeType":"IdentifierPath","referencedDeclaration":3177,"src":"11912:8:14"},"referencedDeclaration":3177,"src":"11912:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3177","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11880:50:14"},"returnParameters":{"id":3793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3792,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3818,"src":"11954:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3791,"name":"uint256","nodeType":"ElementaryTypeName","src":"11954:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11953:9:14"},"scope":4786,"src":"11865:211:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3914,"nodeType":"Block","src":"12710:1849:14","statements":[{"id":3913,"nodeType":"UncheckedBlock","src":"12720:1833:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3828,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3823,"src":"12748:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12753:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12748:6:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3833,"nodeType":"IfStatement","src":"12744:20:14","trueBody":{"expression":{"hexValue":"30","id":3831,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12763:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3827,"id":3832,"nodeType":"Return","src":"12756:8:14"}},{"assignments":[3835],"declarations":[{"constant":false,"id":3835,"mutability":"mutable","name":"remainder","nameLocation":"13243:9:14","nodeType":"VariableDeclaration","scope":3913,"src":"13235:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3834,"name":"uint256","nodeType":"ElementaryTypeName","src":"13235:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3839,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3836,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3821,"src":"13255:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":3837,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3823,"src":"13259:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13255:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13235:25:14"},{"assignments":[3841],"declarations":[{"constant":false,"id":3841,"mutability":"mutable","name":"gcd","nameLocation":"13282:3:14","nodeType":"VariableDeclaration","scope":3913,"src":"13274:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3840,"name":"uint256","nodeType":"ElementaryTypeName","src":"13274:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3843,"initialValue":{"id":3842,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3823,"src":"13288:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13274:15:14"},{"assignments":[3845],"declarations":[{"constant":false,"id":3845,"mutability":"mutable","name":"x","nameLocation":"13432:1:14","nodeType":"VariableDeclaration","scope":3913,"src":"13425:8:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3844,"name":"int256","nodeType":"ElementaryTypeName","src":"13425:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":3847,"initialValue":{"hexValue":"30","id":3846,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13436:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13425:12:14"},{"assignments":[3849],"declarations":[{"constant":false,"id":3849,"mutability":"mutable","name":"y","nameLocation":"13458:1:14","nodeType":"VariableDeclaration","scope":3913,"src":"13451:8:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3848,"name":"int256","nodeType":"ElementaryTypeName","src":"13451:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":3851,"initialValue":{"hexValue":"31","id":3850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13462:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"13451:12:14"},{"body":{"id":3888,"nodeType":"Block","src":"13501:882:14","statements":[{"assignments":[3856],"declarations":[{"constant":false,"id":3856,"mutability":"mutable","name":"quotient","nameLocation":"13527:8:14","nodeType":"VariableDeclaration","scope":3888,"src":"13519:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3855,"name":"uint256","nodeType":"ElementaryTypeName","src":"13519:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3860,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3857,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3841,"src":"13538:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3858,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3835,"src":"13544:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13538:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13519:34:14"},{"expression":{"id":3871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":3861,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3841,"src":"13573:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3862,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3835,"src":"13578:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3863,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13572:16:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":3864,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3835,"src":"13678:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3865,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3841,"src":"13923:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3866,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3835,"src":"13929:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3867,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3856,"src":"13941:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13929:20:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13923:26:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3870,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13591:376:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"13572:395:14","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3872,"nodeType":"ExpressionStatement","src":"13572:395:14"},{"expression":{"id":3886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":3873,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3845,"src":"13987:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":3874,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3849,"src":"13990:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3875,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13986:6:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":3876,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3849,"src":"14072:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3877,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3845,"src":"14326:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3878,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3849,"src":"14330:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3881,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3856,"src":"14341:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3880,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14334:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3879,"name":"int256","nodeType":"ElementaryTypeName","src":"14334:6:14","typeDescriptions":{}}},"id":3882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14334:16:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14330:20:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14326:24:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3885,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13995:373:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"src":"13986:382:14","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3887,"nodeType":"ExpressionStatement","src":"13986:382:14"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3852,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3835,"src":"13485:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3853,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13498:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13485:14:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3889,"nodeType":"WhileStatement","src":"13478:905:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3890,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3841,"src":"14401:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":3891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14408:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14401:8:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3895,"nodeType":"IfStatement","src":"14397:22:14","trueBody":{"expression":{"hexValue":"30","id":3893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14418:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3827,"id":3894,"nodeType":"Return","src":"14411:8:14"}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3897,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3845,"src":"14470:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":3898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14474:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14470:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3900,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3823,"src":"14477:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":3904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"14489:2:14","subExpression":{"id":3903,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3845,"src":"14490:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3902,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14481:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3901,"name":"uint256","nodeType":"ElementaryTypeName","src":"14481:7:14","typeDescriptions":{}}},"id":3905,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14481:11:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14477:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3909,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3845,"src":"14502:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3908,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14494:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3907,"name":"uint256","nodeType":"ElementaryTypeName","src":"14494:7:14","typeDescriptions":{}}},"id":3910,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14494:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3896,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3454,"src":"14462:7:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3911,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14462:43:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3827,"id":3912,"nodeType":"Return","src":"14455:50:14"}]}]},"documentation":{"id":3819,"nodeType":"StructuredDocumentation","src":"12082:553:14","text":" @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."},"id":3915,"implemented":true,"kind":"function","modifiers":[],"name":"invMod","nameLocation":"12649:6:14","nodeType":"FunctionDefinition","parameters":{"id":3824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3821,"mutability":"mutable","name":"a","nameLocation":"12664:1:14","nodeType":"VariableDeclaration","scope":3915,"src":"12656:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3820,"name":"uint256","nodeType":"ElementaryTypeName","src":"12656:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3823,"mutability":"mutable","name":"n","nameLocation":"12675:1:14","nodeType":"VariableDeclaration","scope":3915,"src":"12667:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3822,"name":"uint256","nodeType":"ElementaryTypeName","src":"12667:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12655:22:14"},"returnParameters":{"id":3827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3826,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3915,"src":"12701:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3825,"name":"uint256","nodeType":"ElementaryTypeName","src":"12701:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12700:9:14"},"scope":4786,"src":"12640:1919:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3935,"nodeType":"Block","src":"15159:82:14","statements":[{"id":3934,"nodeType":"UncheckedBlock","src":"15169:66:14","statements":[{"expression":{"arguments":[{"id":3927,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3918,"src":"15212:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3928,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3920,"src":"15215:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"32","id":3929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15219:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15215:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3931,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3920,"src":"15222:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3925,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4786,"src":"15200:4:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4786_$","typeString":"type(library Math)"}},"id":3926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15205:6:14","memberName":"modExp","nodeType":"MemberAccess","referencedDeclaration":3972,"src":"15200:11:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (uint256)"}},"id":3932,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15200:24:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3924,"id":3933,"nodeType":"Return","src":"15193:31:14"}]}]},"documentation":{"id":3916,"nodeType":"StructuredDocumentation","src":"14565:514:14","text":" @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."},"id":3936,"implemented":true,"kind":"function","modifiers":[],"name":"invModPrime","nameLocation":"15093:11:14","nodeType":"FunctionDefinition","parameters":{"id":3921,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3918,"mutability":"mutable","name":"a","nameLocation":"15113:1:14","nodeType":"VariableDeclaration","scope":3936,"src":"15105:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3917,"name":"uint256","nodeType":"ElementaryTypeName","src":"15105:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3920,"mutability":"mutable","name":"p","nameLocation":"15124:1:14","nodeType":"VariableDeclaration","scope":3936,"src":"15116:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3919,"name":"uint256","nodeType":"ElementaryTypeName","src":"15116:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15104:22:14"},"returnParameters":{"id":3924,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3923,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3936,"src":"15150:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3922,"name":"uint256","nodeType":"ElementaryTypeName","src":"15150:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15149:9:14"},"scope":4786,"src":"15084:157:14","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3971,"nodeType":"Block","src":"16011:174:14","statements":[{"assignments":[3949,3951],"declarations":[{"constant":false,"id":3949,"mutability":"mutable","name":"success","nameLocation":"16027:7:14","nodeType":"VariableDeclaration","scope":3971,"src":"16022:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3948,"name":"bool","nodeType":"ElementaryTypeName","src":"16022:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3951,"mutability":"mutable","name":"result","nameLocation":"16044:6:14","nodeType":"VariableDeclaration","scope":3971,"src":"16036:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3950,"name":"uint256","nodeType":"ElementaryTypeName","src":"16036:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3957,"initialValue":{"arguments":[{"id":3953,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3939,"src":"16064:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3954,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3941,"src":"16067:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3955,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3943,"src":"16070:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3952,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[3996,4078],"referencedDeclaration":3996,"src":"16054:9:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (bool,uint256)"}},"id":3956,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16054:18:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"16021:51:14"},{"condition":{"id":3959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16086:8:14","subExpression":{"id":3958,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3949,"src":"16087:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3968,"nodeType":"IfStatement","src":"16082:74:14","trueBody":{"id":3967,"nodeType":"Block","src":"16096:60:14","statements":[{"expression":{"arguments":[{"expression":{"id":3963,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1658,"src":"16122:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1658_$","typeString":"type(library Panic)"}},"id":3964,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16128:16:14","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1625,"src":"16122:22:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3960,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1658,"src":"16110:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1658_$","typeString":"type(library Panic)"}},"id":3962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16116:5:14","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1657,"src":"16110:11:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3965,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16110:35:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3966,"nodeType":"ExpressionStatement","src":"16110:35:14"}]}},{"expression":{"id":3969,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3951,"src":"16172:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3947,"id":3970,"nodeType":"Return","src":"16165:13:14"}]},"documentation":{"id":3937,"nodeType":"StructuredDocumentation","src":"15247:678:14","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."},"id":3972,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"15939:6:14","nodeType":"FunctionDefinition","parameters":{"id":3944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3939,"mutability":"mutable","name":"b","nameLocation":"15954:1:14","nodeType":"VariableDeclaration","scope":3972,"src":"15946:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3938,"name":"uint256","nodeType":"ElementaryTypeName","src":"15946:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3941,"mutability":"mutable","name":"e","nameLocation":"15965:1:14","nodeType":"VariableDeclaration","scope":3972,"src":"15957:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3940,"name":"uint256","nodeType":"ElementaryTypeName","src":"15957:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3943,"mutability":"mutable","name":"m","nameLocation":"15976:1:14","nodeType":"VariableDeclaration","scope":3972,"src":"15968:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3942,"name":"uint256","nodeType":"ElementaryTypeName","src":"15968:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15945:33:14"},"returnParameters":{"id":3947,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3946,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3972,"src":"16002:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3945,"name":"uint256","nodeType":"ElementaryTypeName","src":"16002:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16001:9:14"},"scope":4786,"src":"15930:255:14","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3995,"nodeType":"Block","src":"17039:1493:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3986,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3979,"src":"17053:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17058:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17053:6:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3993,"nodeType":"IfStatement","src":"17049:29:14","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3989,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17069:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3990,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17076:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3991,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"17068:10:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3985,"id":3992,"nodeType":"Return","src":"17061:17:14"}},{"AST":{"nativeSrc":"17113:1413:14","nodeType":"YulBlock","src":"17113:1413:14","statements":[{"nativeSrc":"17127:22:14","nodeType":"YulVariableDeclaration","src":"17127:22:14","value":{"arguments":[{"kind":"number","nativeSrc":"17144:4:14","nodeType":"YulLiteral","src":"17144:4:14","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"17138:5:14","nodeType":"YulIdentifier","src":"17138:5:14"},"nativeSrc":"17138:11:14","nodeType":"YulFunctionCall","src":"17138:11:14"},"variables":[{"name":"ptr","nativeSrc":"17131:3:14","nodeType":"YulTypedName","src":"17131:3:14","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"18057:3:14","nodeType":"YulIdentifier","src":"18057:3:14"},{"kind":"number","nativeSrc":"18062:4:14","nodeType":"YulLiteral","src":"18062:4:14","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"18050:6:14","nodeType":"YulIdentifier","src":"18050:6:14"},"nativeSrc":"18050:17:14","nodeType":"YulFunctionCall","src":"18050:17:14"},"nativeSrc":"18050:17:14","nodeType":"YulExpressionStatement","src":"18050:17:14"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18091:3:14","nodeType":"YulIdentifier","src":"18091:3:14"},{"kind":"number","nativeSrc":"18096:4:14","nodeType":"YulLiteral","src":"18096:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"18087:3:14","nodeType":"YulIdentifier","src":"18087:3:14"},"nativeSrc":"18087:14:14","nodeType":"YulFunctionCall","src":"18087:14:14"},{"kind":"number","nativeSrc":"18103:4:14","nodeType":"YulLiteral","src":"18103:4:14","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"18080:6:14","nodeType":"YulIdentifier","src":"18080:6:14"},"nativeSrc":"18080:28:14","nodeType":"YulFunctionCall","src":"18080:28:14"},"nativeSrc":"18080:28:14","nodeType":"YulExpressionStatement","src":"18080:28:14"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18132:3:14","nodeType":"YulIdentifier","src":"18132:3:14"},{"kind":"number","nativeSrc":"18137:4:14","nodeType":"YulLiteral","src":"18137:4:14","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"18128:3:14","nodeType":"YulIdentifier","src":"18128:3:14"},"nativeSrc":"18128:14:14","nodeType":"YulFunctionCall","src":"18128:14:14"},{"kind":"number","nativeSrc":"18144:4:14","nodeType":"YulLiteral","src":"18144:4:14","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"18121:6:14","nodeType":"YulIdentifier","src":"18121:6:14"},"nativeSrc":"18121:28:14","nodeType":"YulFunctionCall","src":"18121:28:14"},"nativeSrc":"18121:28:14","nodeType":"YulExpressionStatement","src":"18121:28:14"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18173:3:14","nodeType":"YulIdentifier","src":"18173:3:14"},{"kind":"number","nativeSrc":"18178:4:14","nodeType":"YulLiteral","src":"18178:4:14","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"18169:3:14","nodeType":"YulIdentifier","src":"18169:3:14"},"nativeSrc":"18169:14:14","nodeType":"YulFunctionCall","src":"18169:14:14"},{"name":"b","nativeSrc":"18185:1:14","nodeType":"YulIdentifier","src":"18185:1:14"}],"functionName":{"name":"mstore","nativeSrc":"18162:6:14","nodeType":"YulIdentifier","src":"18162:6:14"},"nativeSrc":"18162:25:14","nodeType":"YulFunctionCall","src":"18162:25:14"},"nativeSrc":"18162:25:14","nodeType":"YulExpressionStatement","src":"18162:25:14"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18211:3:14","nodeType":"YulIdentifier","src":"18211:3:14"},{"kind":"number","nativeSrc":"18216:4:14","nodeType":"YulLiteral","src":"18216:4:14","type":"","value":"0x80"}],"functionName":{"name":"add","nativeSrc":"18207:3:14","nodeType":"YulIdentifier","src":"18207:3:14"},"nativeSrc":"18207:14:14","nodeType":"YulFunctionCall","src":"18207:14:14"},{"name":"e","nativeSrc":"18223:1:14","nodeType":"YulIdentifier","src":"18223:1:14"}],"functionName":{"name":"mstore","nativeSrc":"18200:6:14","nodeType":"YulIdentifier","src":"18200:6:14"},"nativeSrc":"18200:25:14","nodeType":"YulFunctionCall","src":"18200:25:14"},"nativeSrc":"18200:25:14","nodeType":"YulExpressionStatement","src":"18200:25:14"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18249:3:14","nodeType":"YulIdentifier","src":"18249:3:14"},{"kind":"number","nativeSrc":"18254:4:14","nodeType":"YulLiteral","src":"18254:4:14","type":"","value":"0xa0"}],"functionName":{"name":"add","nativeSrc":"18245:3:14","nodeType":"YulIdentifier","src":"18245:3:14"},"nativeSrc":"18245:14:14","nodeType":"YulFunctionCall","src":"18245:14:14"},{"name":"m","nativeSrc":"18261:1:14","nodeType":"YulIdentifier","src":"18261:1:14"}],"functionName":{"name":"mstore","nativeSrc":"18238:6:14","nodeType":"YulIdentifier","src":"18238:6:14"},"nativeSrc":"18238:25:14","nodeType":"YulFunctionCall","src":"18238:25:14"},"nativeSrc":"18238:25:14","nodeType":"YulExpressionStatement","src":"18238:25:14"},{"nativeSrc":"18425:57:14","nodeType":"YulAssignment","src":"18425:57:14","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"18447:3:14","nodeType":"YulIdentifier","src":"18447:3:14"},"nativeSrc":"18447:5:14","nodeType":"YulFunctionCall","src":"18447:5:14"},{"kind":"number","nativeSrc":"18454:4:14","nodeType":"YulLiteral","src":"18454:4:14","type":"","value":"0x05"},{"name":"ptr","nativeSrc":"18460:3:14","nodeType":"YulIdentifier","src":"18460:3:14"},{"kind":"number","nativeSrc":"18465:4:14","nodeType":"YulLiteral","src":"18465:4:14","type":"","value":"0xc0"},{"kind":"number","nativeSrc":"18471:4:14","nodeType":"YulLiteral","src":"18471:4:14","type":"","value":"0x00"},{"kind":"number","nativeSrc":"18477:4:14","nodeType":"YulLiteral","src":"18477:4:14","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nativeSrc":"18436:10:14","nodeType":"YulIdentifier","src":"18436:10:14"},"nativeSrc":"18436:46:14","nodeType":"YulFunctionCall","src":"18436:46:14"},"variableNames":[{"name":"success","nativeSrc":"18425:7:14","nodeType":"YulIdentifier","src":"18425:7:14"}]},{"nativeSrc":"18495:21:14","nodeType":"YulAssignment","src":"18495:21:14","value":{"arguments":[{"kind":"number","nativeSrc":"18511:4:14","nodeType":"YulLiteral","src":"18511:4:14","type":"","value":"0x00"}],"functionName":{"name":"mload","nativeSrc":"18505:5:14","nodeType":"YulIdentifier","src":"18505:5:14"},"nativeSrc":"18505:11:14","nodeType":"YulFunctionCall","src":"18505:11:14"},"variableNames":[{"name":"result","nativeSrc":"18495:6:14","nodeType":"YulIdentifier","src":"18495:6:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3975,"isOffset":false,"isSlot":false,"src":"18185:1:14","valueSize":1},{"declaration":3977,"isOffset":false,"isSlot":false,"src":"18223:1:14","valueSize":1},{"declaration":3979,"isOffset":false,"isSlot":false,"src":"18261:1:14","valueSize":1},{"declaration":3984,"isOffset":false,"isSlot":false,"src":"18495:6:14","valueSize":1},{"declaration":3982,"isOffset":false,"isSlot":false,"src":"18425:7:14","valueSize":1}],"flags":["memory-safe"],"id":3994,"nodeType":"InlineAssembly","src":"17088:1438:14"}]},"documentation":{"id":3973,"nodeType":"StructuredDocumentation","src":"16191:738:14","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."},"id":3996,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"16943:9:14","nodeType":"FunctionDefinition","parameters":{"id":3980,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3975,"mutability":"mutable","name":"b","nameLocation":"16961:1:14","nodeType":"VariableDeclaration","scope":3996,"src":"16953:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3974,"name":"uint256","nodeType":"ElementaryTypeName","src":"16953:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3977,"mutability":"mutable","name":"e","nameLocation":"16972:1:14","nodeType":"VariableDeclaration","scope":3996,"src":"16964:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3976,"name":"uint256","nodeType":"ElementaryTypeName","src":"16964:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3979,"mutability":"mutable","name":"m","nameLocation":"16983:1:14","nodeType":"VariableDeclaration","scope":3996,"src":"16975:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3978,"name":"uint256","nodeType":"ElementaryTypeName","src":"16975:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16952:33:14"},"returnParameters":{"id":3985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3982,"mutability":"mutable","name":"success","nameLocation":"17014:7:14","nodeType":"VariableDeclaration","scope":3996,"src":"17009:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3981,"name":"bool","nodeType":"ElementaryTypeName","src":"17009:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3984,"mutability":"mutable","name":"result","nameLocation":"17031:6:14","nodeType":"VariableDeclaration","scope":3996,"src":"17023:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3983,"name":"uint256","nodeType":"ElementaryTypeName","src":"17023:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17008:30:14"},"scope":4786,"src":"16934:1598:14","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4031,"nodeType":"Block","src":"18729:179:14","statements":[{"assignments":[4009,4011],"declarations":[{"constant":false,"id":4009,"mutability":"mutable","name":"success","nameLocation":"18745:7:14","nodeType":"VariableDeclaration","scope":4031,"src":"18740:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4008,"name":"bool","nodeType":"ElementaryTypeName","src":"18740:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4011,"mutability":"mutable","name":"result","nameLocation":"18767:6:14","nodeType":"VariableDeclaration","scope":4031,"src":"18754:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4010,"name":"bytes","nodeType":"ElementaryTypeName","src":"18754:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4017,"initialValue":{"arguments":[{"id":4013,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3999,"src":"18787:1:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4014,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4001,"src":"18790:1:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4015,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4003,"src":"18793:1:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4012,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[3996,4078],"referencedDeclaration":4078,"src":"18777:9:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"}},"id":4016,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18777:18:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"18739:56:14"},{"condition":{"id":4019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"18809:8:14","subExpression":{"id":4018,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4009,"src":"18810:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4028,"nodeType":"IfStatement","src":"18805:74:14","trueBody":{"id":4027,"nodeType":"Block","src":"18819:60:14","statements":[{"expression":{"arguments":[{"expression":{"id":4023,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1658,"src":"18845:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1658_$","typeString":"type(library Panic)"}},"id":4024,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"18851:16:14","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1625,"src":"18845:22:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4020,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1658,"src":"18833:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1658_$","typeString":"type(library Panic)"}},"id":4022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18839:5:14","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1657,"src":"18833:11:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4025,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18833:35:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4026,"nodeType":"ExpressionStatement","src":"18833:35:14"}]}},{"expression":{"id":4029,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4011,"src":"18895:6:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":4007,"id":4030,"nodeType":"Return","src":"18888:13:14"}]},"documentation":{"id":3997,"nodeType":"StructuredDocumentation","src":"18538:85:14","text":" @dev Variant of {modExp} that supports inputs of arbitrary length."},"id":4032,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"18637:6:14","nodeType":"FunctionDefinition","parameters":{"id":4004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3999,"mutability":"mutable","name":"b","nameLocation":"18657:1:14","nodeType":"VariableDeclaration","scope":4032,"src":"18644:14:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3998,"name":"bytes","nodeType":"ElementaryTypeName","src":"18644:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4001,"mutability":"mutable","name":"e","nameLocation":"18673:1:14","nodeType":"VariableDeclaration","scope":4032,"src":"18660:14:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4000,"name":"bytes","nodeType":"ElementaryTypeName","src":"18660:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4003,"mutability":"mutable","name":"m","nameLocation":"18689:1:14","nodeType":"VariableDeclaration","scope":4032,"src":"18676:14:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4002,"name":"bytes","nodeType":"ElementaryTypeName","src":"18676:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18643:48:14"},"returnParameters":{"id":4007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4006,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4032,"src":"18715:12:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4005,"name":"bytes","nodeType":"ElementaryTypeName","src":"18715:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18714:14:14"},"scope":4786,"src":"18628:280:14","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4077,"nodeType":"Block","src":"19162:771:14","statements":[{"condition":{"arguments":[{"id":4047,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4039,"src":"19187:1:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4046,"name":"_zeroBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4111,"src":"19176:10:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes memory) pure returns (bool)"}},"id":4048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19176:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4056,"nodeType":"IfStatement","src":"19172:47:14","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4049,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"19199:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":4052,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19216:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4051,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"19206:9:14","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":4050,"name":"bytes","nodeType":"ElementaryTypeName","src":"19210:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":4053,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19206:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":4054,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19198:21:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":4045,"id":4055,"nodeType":"Return","src":"19191:28:14"}},{"assignments":[4058],"declarations":[{"constant":false,"id":4058,"mutability":"mutable","name":"mLen","nameLocation":"19238:4:14","nodeType":"VariableDeclaration","scope":4077,"src":"19230:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4057,"name":"uint256","nodeType":"ElementaryTypeName","src":"19230:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4061,"initialValue":{"expression":{"id":4059,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4039,"src":"19245:1:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19247:6:14","memberName":"length","nodeType":"MemberAccess","src":"19245:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19230:23:14"},{"expression":{"id":4074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4062,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4044,"src":"19335:6:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":4065,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4035,"src":"19361:1:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19363:6:14","memberName":"length","nodeType":"MemberAccess","src":"19361:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4067,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4037,"src":"19371:1:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19373:6:14","memberName":"length","nodeType":"MemberAccess","src":"19371:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4069,"name":"mLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4058,"src":"19381:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4070,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4035,"src":"19387:1:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4071,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4037,"src":"19390:1:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4072,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4039,"src":"19393:1:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4063,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"19344:3:14","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4064,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"19348:12:14","memberName":"encodePacked","nodeType":"MemberAccess","src":"19344:16:14","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4073,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19344:51:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"19335:60:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4075,"nodeType":"ExpressionStatement","src":"19335:60:14"},{"AST":{"nativeSrc":"19431:496:14","nodeType":"YulBlock","src":"19431:496:14","statements":[{"nativeSrc":"19445:32:14","nodeType":"YulVariableDeclaration","src":"19445:32:14","value":{"arguments":[{"name":"result","nativeSrc":"19464:6:14","nodeType":"YulIdentifier","src":"19464:6:14"},{"kind":"number","nativeSrc":"19472:4:14","nodeType":"YulLiteral","src":"19472:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"19460:3:14","nodeType":"YulIdentifier","src":"19460:3:14"},"nativeSrc":"19460:17:14","nodeType":"YulFunctionCall","src":"19460:17:14"},"variables":[{"name":"dataPtr","nativeSrc":"19449:7:14","nodeType":"YulTypedName","src":"19449:7:14","type":""}]},{"nativeSrc":"19567:73:14","nodeType":"YulAssignment","src":"19567:73:14","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"19589:3:14","nodeType":"YulIdentifier","src":"19589:3:14"},"nativeSrc":"19589:5:14","nodeType":"YulFunctionCall","src":"19589:5:14"},{"kind":"number","nativeSrc":"19596:4:14","nodeType":"YulLiteral","src":"19596:4:14","type":"","value":"0x05"},{"name":"dataPtr","nativeSrc":"19602:7:14","nodeType":"YulIdentifier","src":"19602:7:14"},{"arguments":[{"name":"result","nativeSrc":"19617:6:14","nodeType":"YulIdentifier","src":"19617:6:14"}],"functionName":{"name":"mload","nativeSrc":"19611:5:14","nodeType":"YulIdentifier","src":"19611:5:14"},"nativeSrc":"19611:13:14","nodeType":"YulFunctionCall","src":"19611:13:14"},{"name":"dataPtr","nativeSrc":"19626:7:14","nodeType":"YulIdentifier","src":"19626:7:14"},{"name":"mLen","nativeSrc":"19635:4:14","nodeType":"YulIdentifier","src":"19635:4:14"}],"functionName":{"name":"staticcall","nativeSrc":"19578:10:14","nodeType":"YulIdentifier","src":"19578:10:14"},"nativeSrc":"19578:62:14","nodeType":"YulFunctionCall","src":"19578:62:14"},"variableNames":[{"name":"success","nativeSrc":"19567:7:14","nodeType":"YulIdentifier","src":"19567:7:14"}]},{"expression":{"arguments":[{"name":"result","nativeSrc":"19796:6:14","nodeType":"YulIdentifier","src":"19796:6:14"},{"name":"mLen","nativeSrc":"19804:4:14","nodeType":"YulIdentifier","src":"19804:4:14"}],"functionName":{"name":"mstore","nativeSrc":"19789:6:14","nodeType":"YulIdentifier","src":"19789:6:14"},"nativeSrc":"19789:20:14","nodeType":"YulFunctionCall","src":"19789:20:14"},"nativeSrc":"19789:20:14","nodeType":"YulExpressionStatement","src":"19789:20:14"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"19892:4:14","nodeType":"YulLiteral","src":"19892:4:14","type":"","value":"0x40"},{"arguments":[{"name":"dataPtr","nativeSrc":"19902:7:14","nodeType":"YulIdentifier","src":"19902:7:14"},{"name":"mLen","nativeSrc":"19911:4:14","nodeType":"YulIdentifier","src":"19911:4:14"}],"functionName":{"name":"add","nativeSrc":"19898:3:14","nodeType":"YulIdentifier","src":"19898:3:14"},"nativeSrc":"19898:18:14","nodeType":"YulFunctionCall","src":"19898:18:14"}],"functionName":{"name":"mstore","nativeSrc":"19885:6:14","nodeType":"YulIdentifier","src":"19885:6:14"},"nativeSrc":"19885:32:14","nodeType":"YulFunctionCall","src":"19885:32:14"},"nativeSrc":"19885:32:14","nodeType":"YulExpressionStatement","src":"19885:32:14"}]},"evmVersion":"paris","externalReferences":[{"declaration":4058,"isOffset":false,"isSlot":false,"src":"19635:4:14","valueSize":1},{"declaration":4058,"isOffset":false,"isSlot":false,"src":"19804:4:14","valueSize":1},{"declaration":4058,"isOffset":false,"isSlot":false,"src":"19911:4:14","valueSize":1},{"declaration":4044,"isOffset":false,"isSlot":false,"src":"19464:6:14","valueSize":1},{"declaration":4044,"isOffset":false,"isSlot":false,"src":"19617:6:14","valueSize":1},{"declaration":4044,"isOffset":false,"isSlot":false,"src":"19796:6:14","valueSize":1},{"declaration":4042,"isOffset":false,"isSlot":false,"src":"19567:7:14","valueSize":1}],"flags":["memory-safe"],"id":4076,"nodeType":"InlineAssembly","src":"19406:521:14"}]},"documentation":{"id":4033,"nodeType":"StructuredDocumentation","src":"18914:88:14","text":" @dev Variant of {tryModExp} that supports inputs of arbitrary length."},"id":4078,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"19016:9:14","nodeType":"FunctionDefinition","parameters":{"id":4040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4035,"mutability":"mutable","name":"b","nameLocation":"19048:1:14","nodeType":"VariableDeclaration","scope":4078,"src":"19035:14:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4034,"name":"bytes","nodeType":"ElementaryTypeName","src":"19035:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4037,"mutability":"mutable","name":"e","nameLocation":"19072:1:14","nodeType":"VariableDeclaration","scope":4078,"src":"19059:14:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4036,"name":"bytes","nodeType":"ElementaryTypeName","src":"19059:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4039,"mutability":"mutable","name":"m","nameLocation":"19096:1:14","nodeType":"VariableDeclaration","scope":4078,"src":"19083:14:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4038,"name":"bytes","nodeType":"ElementaryTypeName","src":"19083:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19025:78:14"},"returnParameters":{"id":4045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4042,"mutability":"mutable","name":"success","nameLocation":"19132:7:14","nodeType":"VariableDeclaration","scope":4078,"src":"19127:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4041,"name":"bool","nodeType":"ElementaryTypeName","src":"19127:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4044,"mutability":"mutable","name":"result","nameLocation":"19154:6:14","nodeType":"VariableDeclaration","scope":4078,"src":"19141:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4043,"name":"bytes","nodeType":"ElementaryTypeName","src":"19141:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19126:35:14"},"scope":4786,"src":"19007:926:14","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4110,"nodeType":"Block","src":"20088:176:14","statements":[{"body":{"id":4106,"nodeType":"Block","src":"20145:92:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":4101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":4097,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4081,"src":"20163:9:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4099,"indexExpression":{"id":4098,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4087,"src":"20173:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20163:12:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20179:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"20163:17:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4105,"nodeType":"IfStatement","src":"20159:68:14","trueBody":{"id":4104,"nodeType":"Block","src":"20182:45:14","statements":[{"expression":{"hexValue":"66616c7365","id":4102,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20207:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":4085,"id":4103,"nodeType":"Return","src":"20200:12:14"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4090,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4087,"src":"20118:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4091,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4081,"src":"20122:9:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20132:6:14","memberName":"length","nodeType":"MemberAccess","src":"20122:16:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20118:20:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4107,"initializationExpression":{"assignments":[4087],"declarations":[{"constant":false,"id":4087,"mutability":"mutable","name":"i","nameLocation":"20111:1:14","nodeType":"VariableDeclaration","scope":4107,"src":"20103:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4086,"name":"uint256","nodeType":"ElementaryTypeName","src":"20103:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4089,"initialValue":{"hexValue":"30","id":4088,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20115:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"20103:13:14"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"20140:3:14","subExpression":{"id":4094,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4087,"src":"20142:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4096,"nodeType":"ExpressionStatement","src":"20140:3:14"},"nodeType":"ForStatement","src":"20098:139:14"},{"expression":{"hexValue":"74727565","id":4108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20253:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":4085,"id":4109,"nodeType":"Return","src":"20246:11:14"}]},"documentation":{"id":4079,"nodeType":"StructuredDocumentation","src":"19939:72:14","text":" @dev Returns whether the provided byte array is zero."},"id":4111,"implemented":true,"kind":"function","modifiers":[],"name":"_zeroBytes","nameLocation":"20025:10:14","nodeType":"FunctionDefinition","parameters":{"id":4082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4081,"mutability":"mutable","name":"byteArray","nameLocation":"20049:9:14","nodeType":"VariableDeclaration","scope":4111,"src":"20036:22:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4080,"name":"bytes","nodeType":"ElementaryTypeName","src":"20036:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"20035:24:14"},"returnParameters":{"id":4085,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4084,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4111,"src":"20082:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4083,"name":"bool","nodeType":"ElementaryTypeName","src":"20082:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"20081:6:14"},"scope":4786,"src":"20016:248:14","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":4329,"nodeType":"Block","src":"20624:5124:14","statements":[{"id":4328,"nodeType":"UncheckedBlock","src":"20634:5108:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4119,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4114,"src":"20728:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31","id":4120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20733:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20728:6:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4125,"nodeType":"IfStatement","src":"20724:53:14","trueBody":{"id":4124,"nodeType":"Block","src":"20736:41:14","statements":[{"expression":{"id":4122,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4114,"src":"20761:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4118,"id":4123,"nodeType":"Return","src":"20754:8:14"}]}},{"assignments":[4127],"declarations":[{"constant":false,"id":4127,"mutability":"mutable","name":"aa","nameLocation":"21712:2:14","nodeType":"VariableDeclaration","scope":4328,"src":"21704:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4126,"name":"uint256","nodeType":"ElementaryTypeName","src":"21704:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4129,"initialValue":{"id":4128,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4114,"src":"21717:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"21704:14:14"},{"assignments":[4131],"declarations":[{"constant":false,"id":4131,"mutability":"mutable","name":"xn","nameLocation":"21740:2:14","nodeType":"VariableDeclaration","scope":4328,"src":"21732:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4130,"name":"uint256","nodeType":"ElementaryTypeName","src":"21732:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4133,"initialValue":{"hexValue":"31","id":4132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21745:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"21732:14:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4134,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4127,"src":"21765:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":4137,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21772:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":4136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21777:3:14","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21772:8:14","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":4138,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21771:10:14","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"src":"21765:16:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4149,"nodeType":"IfStatement","src":"21761:92:14","trueBody":{"id":4148,"nodeType":"Block","src":"21783:70:14","statements":[{"expression":{"id":4142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4140,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4127,"src":"21801:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":4141,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21808:3:14","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21801:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4143,"nodeType":"ExpressionStatement","src":"21801:10:14"},{"expression":{"id":4146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4144,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4131,"src":"21829:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3634","id":4145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21836:2:14","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21829:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4147,"nodeType":"ExpressionStatement","src":"21829:9:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4150,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4127,"src":"21870:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":4153,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21877:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":4152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21882:2:14","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21877:7:14","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":4154,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21876:9:14","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"src":"21870:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4165,"nodeType":"IfStatement","src":"21866:90:14","trueBody":{"id":4164,"nodeType":"Block","src":"21887:69:14","statements":[{"expression":{"id":4158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4156,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4127,"src":"21905:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":4157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21912:2:14","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21905:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4159,"nodeType":"ExpressionStatement","src":"21905:9:14"},{"expression":{"id":4162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4160,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4131,"src":"21932:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3332","id":4161,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21939:2:14","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21932:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4163,"nodeType":"ExpressionStatement","src":"21932:9:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4166,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4127,"src":"21973:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":4169,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21980:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":4168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21985:2:14","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21980:7:14","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":4170,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21979:9:14","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"src":"21973:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4181,"nodeType":"IfStatement","src":"21969:90:14","trueBody":{"id":4180,"nodeType":"Block","src":"21990:69:14","statements":[{"expression":{"id":4174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4172,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4127,"src":"22008:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":4173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22015:2:14","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"22008:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4175,"nodeType":"ExpressionStatement","src":"22008:9:14"},{"expression":{"id":4178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4176,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4131,"src":"22035:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3136","id":4177,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22042:2:14","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22035:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4179,"nodeType":"ExpressionStatement","src":"22035:9:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4182,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4127,"src":"22076:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":4185,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22083:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":4184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22088:2:14","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22083:7:14","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":4186,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22082:9:14","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"src":"22076:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4197,"nodeType":"IfStatement","src":"22072:89:14","trueBody":{"id":4196,"nodeType":"Block","src":"22093:68:14","statements":[{"expression":{"id":4190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4188,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4127,"src":"22111:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":4189,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22118:2:14","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22111:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4191,"nodeType":"ExpressionStatement","src":"22111:9:14"},{"expression":{"id":4194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4192,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4131,"src":"22138:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"38","id":4193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22145:1:14","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22138:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4195,"nodeType":"ExpressionStatement","src":"22138:8:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4198,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4127,"src":"22178:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":4201,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4199,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22185:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":4200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22190:1:14","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22185:6:14","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":4202,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22184:8:14","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"src":"22178:14:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4213,"nodeType":"IfStatement","src":"22174:87:14","trueBody":{"id":4212,"nodeType":"Block","src":"22194:67:14","statements":[{"expression":{"id":4206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4204,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4127,"src":"22212:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":4205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22219:1:14","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22212:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4207,"nodeType":"ExpressionStatement","src":"22212:8:14"},{"expression":{"id":4210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4208,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4131,"src":"22238:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"34","id":4209,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22245:1:14","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22238:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4211,"nodeType":"ExpressionStatement","src":"22238:8:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4214,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4127,"src":"22278:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":4217,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22285:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":4216,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22290:1:14","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22285:6:14","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":4218,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22284:8:14","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"src":"22278:14:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4229,"nodeType":"IfStatement","src":"22274:87:14","trueBody":{"id":4228,"nodeType":"Block","src":"22294:67:14","statements":[{"expression":{"id":4222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4220,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4127,"src":"22312:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":4221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22319:1:14","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22312:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4223,"nodeType":"ExpressionStatement","src":"22312:8:14"},{"expression":{"id":4226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4224,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4131,"src":"22338:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"32","id":4225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22345:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22338:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4227,"nodeType":"ExpressionStatement","src":"22338:8:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4230,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4127,"src":"22378:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":4233,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4231,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22385:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":4232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22390:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22385:6:14","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":4234,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22384:8:14","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"src":"22378:14:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4241,"nodeType":"IfStatement","src":"22374:61:14","trueBody":{"id":4240,"nodeType":"Block","src":"22394:41:14","statements":[{"expression":{"id":4238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4236,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4131,"src":"22412:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"31","id":4237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22419:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22412:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4239,"nodeType":"ExpressionStatement","src":"22412:8:14"}]}},{"expression":{"id":4249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4242,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4131,"src":"22855:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":4243,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22861:1:14","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4244,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4131,"src":"22865:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22861:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4246,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22860:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22872:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22860:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22855:18:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4250,"nodeType":"ExpressionStatement","src":"22855:18:14"},{"expression":{"id":4260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4251,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4131,"src":"24760:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4252,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4131,"src":"24766:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4253,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4114,"src":"24771:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4254,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4131,"src":"24775:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24771:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24766:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4257,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24765:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24782:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24765:18:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24760:23:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4261,"nodeType":"ExpressionStatement","src":"24760:23:14"},{"expression":{"id":4271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4262,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4131,"src":"24869:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4263,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4131,"src":"24875:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4264,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4114,"src":"24880:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4265,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4131,"src":"24884:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24880:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24875:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4268,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24874:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24891:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24874:18:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24869:23:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4272,"nodeType":"ExpressionStatement","src":"24869:23:14"},{"expression":{"id":4282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4273,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4131,"src":"24980:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4274,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4131,"src":"24986:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4275,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4114,"src":"24991:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4276,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4131,"src":"24995:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24991:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24986:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4279,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24985:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25002:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24985:18:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24980:23:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4283,"nodeType":"ExpressionStatement","src":"24980:23:14"},{"expression":{"id":4293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4284,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4131,"src":"25089:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4285,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4131,"src":"25095:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4286,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4114,"src":"25100:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4287,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4131,"src":"25104:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25100:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25095:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4290,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25094:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25111:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25094:18:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25089:23:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4294,"nodeType":"ExpressionStatement","src":"25089:23:14"},{"expression":{"id":4304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4295,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4131,"src":"25199:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4296,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4131,"src":"25205:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4297,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4114,"src":"25210:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4298,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4131,"src":"25214:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25210:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25205:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4301,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25204:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4302,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25221:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25204:18:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25199:23:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4305,"nodeType":"ExpressionStatement","src":"25199:23:14"},{"expression":{"id":4315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4306,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4131,"src":"25309:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4307,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4131,"src":"25315:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4308,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4114,"src":"25320:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4309,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4131,"src":"25324:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25320:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25315:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4312,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25314:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25331:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25314:18:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25309:23:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4316,"nodeType":"ExpressionStatement","src":"25309:23:14"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4317,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4131,"src":"25698:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4320,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4131,"src":"25719:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4321,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4114,"src":"25724:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4322,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4131,"src":"25728:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25724:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25719:11:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4318,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6551,"src":"25703:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6551_$","typeString":"type(library SafeCast)"}},"id":4319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25712:6:14","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6550,"src":"25703:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4325,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25703:28:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25698:33:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4118,"id":4327,"nodeType":"Return","src":"25691:40:14"}]}]},"documentation":{"id":4112,"nodeType":"StructuredDocumentation","src":"20270:292:14","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."},"id":4330,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"20576:4:14","nodeType":"FunctionDefinition","parameters":{"id":4115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4114,"mutability":"mutable","name":"a","nameLocation":"20589:1:14","nodeType":"VariableDeclaration","scope":4330,"src":"20581:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4113,"name":"uint256","nodeType":"ElementaryTypeName","src":"20581:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20580:11:14"},"returnParameters":{"id":4118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4117,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4330,"src":"20615:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4116,"name":"uint256","nodeType":"ElementaryTypeName","src":"20615:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20614:9:14"},"scope":4786,"src":"20567:5181:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4363,"nodeType":"Block","src":"25921:171:14","statements":[{"id":4362,"nodeType":"UncheckedBlock","src":"25931:155:14","statements":[{"assignments":[4342],"declarations":[{"constant":false,"id":4342,"mutability":"mutable","name":"result","nameLocation":"25963:6:14","nodeType":"VariableDeclaration","scope":4362,"src":"25955:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4341,"name":"uint256","nodeType":"ElementaryTypeName","src":"25955:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4346,"initialValue":{"arguments":[{"id":4344,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4333,"src":"25977:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4343,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[4330,4364],"referencedDeclaration":4330,"src":"25972:4:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4345,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25972:7:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25955:24:14"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4347,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4342,"src":"26000:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4351,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4336,"src":"26042:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3177","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3177","typeString":"enum Math.Rounding"}],"id":4350,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4785,"src":"26025:16:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3177_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26025:26:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4353,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4342,"src":"26055:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4354,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4342,"src":"26064:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4356,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4333,"src":"26073:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26025:49:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4348,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6551,"src":"26009:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6551_$","typeString":"type(library SafeCast)"}},"id":4349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26018:6:14","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6550,"src":"26009:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26009:66:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26000:75:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4340,"id":4361,"nodeType":"Return","src":"25993:82:14"}]}]},"documentation":{"id":4331,"nodeType":"StructuredDocumentation","src":"25754:86:14","text":" @dev Calculates sqrt(a), following the selected rounding direction."},"id":4364,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"25854:4:14","nodeType":"FunctionDefinition","parameters":{"id":4337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4333,"mutability":"mutable","name":"a","nameLocation":"25867:1:14","nodeType":"VariableDeclaration","scope":4364,"src":"25859:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4332,"name":"uint256","nodeType":"ElementaryTypeName","src":"25859:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4336,"mutability":"mutable","name":"rounding","nameLocation":"25879:8:14","nodeType":"VariableDeclaration","scope":4364,"src":"25870:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3177","typeString":"enum Math.Rounding"},"typeName":{"id":4335,"nodeType":"UserDefinedTypeName","pathNode":{"id":4334,"name":"Rounding","nameLocations":["25870:8:14"],"nodeType":"IdentifierPath","referencedDeclaration":3177,"src":"25870:8:14"},"referencedDeclaration":3177,"src":"25870:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3177","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"25858:30:14"},"returnParameters":{"id":4340,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4339,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4364,"src":"25912:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4338,"name":"uint256","nodeType":"ElementaryTypeName","src":"25912:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25911:9:14"},"scope":4786,"src":"25845:247:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4454,"nodeType":"Block","src":"26281:2334:14","statements":[{"expression":{"id":4381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4372,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4370,"src":"26363:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4375,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4367,"src":"26383:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":4376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26387:34:14","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"26383:38:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4373,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6551,"src":"26367:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6551_$","typeString":"type(library SafeCast)"}},"id":4374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26376:6:14","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6550,"src":"26367:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26367:55:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":4379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26426:1:14","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"26367:60:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26363:64:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4382,"nodeType":"ExpressionStatement","src":"26363:64:14"},{"expression":{"id":4395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4383,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4370,"src":"26503:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4386,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4367,"src":"26525:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4387,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4370,"src":"26530:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26525:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4389,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26524:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":4390,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26535:18:14","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"26524:29:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4384,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6551,"src":"26508:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6551_$","typeString":"type(library SafeCast)"}},"id":4385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26517:6:14","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6550,"src":"26508:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4392,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26508:46:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":4393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26558:1:14","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"26508:51:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26503:56:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4396,"nodeType":"ExpressionStatement","src":"26503:56:14"},{"expression":{"id":4409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4397,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4370,"src":"26634:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4400,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4367,"src":"26656:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4401,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4370,"src":"26661:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26656:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4403,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26655:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":4404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26666:10:14","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"26655:21:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4398,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6551,"src":"26639:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6551_$","typeString":"type(library SafeCast)"}},"id":4399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26648:6:14","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6550,"src":"26639:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4406,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26639:38:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":4407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26681:1:14","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"26639:43:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26634:48:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4410,"nodeType":"ExpressionStatement","src":"26634:48:14"},{"expression":{"id":4423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4411,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4370,"src":"26757:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4414,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4367,"src":"26779:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4415,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4370,"src":"26784:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26779:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4417,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26778:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":4418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26789:6:14","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"26778:17:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4412,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6551,"src":"26762:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6551_$","typeString":"type(library SafeCast)"}},"id":4413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26771:6:14","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6550,"src":"26762:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4420,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26762:34:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":4421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26800:1:14","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"26762:39:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26757:44:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4424,"nodeType":"ExpressionStatement","src":"26757:44:14"},{"expression":{"id":4437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4425,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4370,"src":"26874:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4428,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4367,"src":"26896:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4429,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4370,"src":"26901:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26896:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4431,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26895:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":4432,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26906:4:14","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"26895:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4426,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6551,"src":"26879:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6551_$","typeString":"type(library SafeCast)"}},"id":4427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26888:6:14","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6550,"src":"26879:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26879:32:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":4435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26915:1:14","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"26879:37:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26874:42:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4438,"nodeType":"ExpressionStatement","src":"26874:42:14"},{"expression":{"id":4451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4439,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4370,"src":"26988:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4442,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4367,"src":"27010:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4443,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4370,"src":"27015:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27010:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4445,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"27009:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866","id":4446,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27020:3:14","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"27009:14:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4440,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6551,"src":"26993:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6551_$","typeString":"type(library SafeCast)"}},"id":4441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27002:6:14","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6550,"src":"26993:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26993:31:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":4449,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27028:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26993:36:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26988:41:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4452,"nodeType":"ExpressionStatement","src":"26988:41:14"},{"AST":{"nativeSrc":"28490:119:14","nodeType":"YulBlock","src":"28490:119:14","statements":[{"nativeSrc":"28504:95:14","nodeType":"YulAssignment","src":"28504:95:14","value":{"arguments":[{"name":"r","nativeSrc":"28512:1:14","nodeType":"YulIdentifier","src":"28512:1:14"},{"arguments":[{"arguments":[{"name":"r","nativeSrc":"28524:1:14","nodeType":"YulIdentifier","src":"28524:1:14"},{"name":"x","nativeSrc":"28527:1:14","nodeType":"YulIdentifier","src":"28527:1:14"}],"functionName":{"name":"shr","nativeSrc":"28520:3:14","nodeType":"YulIdentifier","src":"28520:3:14"},"nativeSrc":"28520:9:14","nodeType":"YulFunctionCall","src":"28520:9:14"},{"kind":"number","nativeSrc":"28531:66:14","nodeType":"YulLiteral","src":"28531:66:14","type":"","value":"0x0000010102020202030303030303030300000000000000000000000000000000"}],"functionName":{"name":"byte","nativeSrc":"28515:4:14","nodeType":"YulIdentifier","src":"28515:4:14"},"nativeSrc":"28515:83:14","nodeType":"YulFunctionCall","src":"28515:83:14"}],"functionName":{"name":"or","nativeSrc":"28509:2:14","nodeType":"YulIdentifier","src":"28509:2:14"},"nativeSrc":"28509:90:14","nodeType":"YulFunctionCall","src":"28509:90:14"},"variableNames":[{"name":"r","nativeSrc":"28504:1:14","nodeType":"YulIdentifier","src":"28504:1:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4370,"isOffset":false,"isSlot":false,"src":"28504:1:14","valueSize":1},{"declaration":4370,"isOffset":false,"isSlot":false,"src":"28512:1:14","valueSize":1},{"declaration":4370,"isOffset":false,"isSlot":false,"src":"28524:1:14","valueSize":1},{"declaration":4367,"isOffset":false,"isSlot":false,"src":"28527:1:14","valueSize":1}],"flags":["memory-safe"],"id":4453,"nodeType":"InlineAssembly","src":"28465:144:14"}]},"documentation":{"id":4365,"nodeType":"StructuredDocumentation","src":"26098:119:14","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":4455,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"26231:4:14","nodeType":"FunctionDefinition","parameters":{"id":4368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4367,"mutability":"mutable","name":"x","nameLocation":"26244:1:14","nodeType":"VariableDeclaration","scope":4455,"src":"26236:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4366,"name":"uint256","nodeType":"ElementaryTypeName","src":"26236:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26235:11:14"},"returnParameters":{"id":4371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4370,"mutability":"mutable","name":"r","nameLocation":"26278:1:14","nodeType":"VariableDeclaration","scope":4455,"src":"26270:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4369,"name":"uint256","nodeType":"ElementaryTypeName","src":"26270:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26269:11:14"},"scope":4786,"src":"26222:2393:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4488,"nodeType":"Block","src":"28848:175:14","statements":[{"id":4487,"nodeType":"UncheckedBlock","src":"28858:159:14","statements":[{"assignments":[4467],"declarations":[{"constant":false,"id":4467,"mutability":"mutable","name":"result","nameLocation":"28890:6:14","nodeType":"VariableDeclaration","scope":4487,"src":"28882:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4466,"name":"uint256","nodeType":"ElementaryTypeName","src":"28882:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4471,"initialValue":{"arguments":[{"id":4469,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4458,"src":"28904:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4468,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[4455,4489],"referencedDeclaration":4455,"src":"28899:4:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28899:11:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"28882:28:14"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4472,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4467,"src":"28931:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4476,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4461,"src":"28973:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3177","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3177","typeString":"enum Math.Rounding"}],"id":4475,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4785,"src":"28956:16:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3177_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28956:26:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28986:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":4479,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4467,"src":"28991:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4481,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4458,"src":"29000:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"28956:49:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4473,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6551,"src":"28940:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6551_$","typeString":"type(library SafeCast)"}},"id":4474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"28949:6:14","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6550,"src":"28940:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28940:66:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28931:75:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4465,"id":4486,"nodeType":"Return","src":"28924:82:14"}]}]},"documentation":{"id":4456,"nodeType":"StructuredDocumentation","src":"28621:142:14","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4489,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"28777:4:14","nodeType":"FunctionDefinition","parameters":{"id":4462,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4458,"mutability":"mutable","name":"value","nameLocation":"28790:5:14","nodeType":"VariableDeclaration","scope":4489,"src":"28782:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4457,"name":"uint256","nodeType":"ElementaryTypeName","src":"28782:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4461,"mutability":"mutable","name":"rounding","nameLocation":"28806:8:14","nodeType":"VariableDeclaration","scope":4489,"src":"28797:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3177","typeString":"enum Math.Rounding"},"typeName":{"id":4460,"nodeType":"UserDefinedTypeName","pathNode":{"id":4459,"name":"Rounding","nameLocations":["28797:8:14"],"nodeType":"IdentifierPath","referencedDeclaration":3177,"src":"28797:8:14"},"referencedDeclaration":3177,"src":"28797:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3177","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"28781:34:14"},"returnParameters":{"id":4465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4464,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4489,"src":"28839:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4463,"name":"uint256","nodeType":"ElementaryTypeName","src":"28839:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"28838:9:14"},"scope":4786,"src":"28768:255:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4617,"nodeType":"Block","src":"29216:854:14","statements":[{"assignments":[4498],"declarations":[{"constant":false,"id":4498,"mutability":"mutable","name":"result","nameLocation":"29234:6:14","nodeType":"VariableDeclaration","scope":4617,"src":"29226:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4497,"name":"uint256","nodeType":"ElementaryTypeName","src":"29226:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4500,"initialValue":{"hexValue":"30","id":4499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29243:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"29226:18:14"},{"id":4614,"nodeType":"UncheckedBlock","src":"29254:787:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4501,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4492,"src":"29282:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":4504,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29291:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":4503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29297:2:14","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29291:8:14","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29282:17:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4517,"nodeType":"IfStatement","src":"29278:103:14","trueBody":{"id":4516,"nodeType":"Block","src":"29301:80:14","statements":[{"expression":{"id":4510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4506,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4492,"src":"29319:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":4509,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29328:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":4508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29334:2:14","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29328:8:14","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29319:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4511,"nodeType":"ExpressionStatement","src":"29319:17:14"},{"expression":{"id":4514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4512,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4498,"src":"29354:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":4513,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29364:2:14","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29354:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4515,"nodeType":"ExpressionStatement","src":"29354:12:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4518,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4492,"src":"29398:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":4521,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29407:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":4520,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29413:2:14","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29407:8:14","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29398:17:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4534,"nodeType":"IfStatement","src":"29394:103:14","trueBody":{"id":4533,"nodeType":"Block","src":"29417:80:14","statements":[{"expression":{"id":4527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4523,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4492,"src":"29435:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":4526,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29444:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":4525,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29450:2:14","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29444:8:14","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29435:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4528,"nodeType":"ExpressionStatement","src":"29435:17:14"},{"expression":{"id":4531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4529,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4498,"src":"29470:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":4530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29480:2:14","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29470:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4532,"nodeType":"ExpressionStatement","src":"29470:12:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4535,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4492,"src":"29514:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":4538,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29523:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":4537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29529:2:14","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29523:8:14","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29514:17:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4551,"nodeType":"IfStatement","src":"29510:103:14","trueBody":{"id":4550,"nodeType":"Block","src":"29533:80:14","statements":[{"expression":{"id":4544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4540,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4492,"src":"29551:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":4543,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29560:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":4542,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29566:2:14","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29560:8:14","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29551:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4545,"nodeType":"ExpressionStatement","src":"29551:17:14"},{"expression":{"id":4548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4546,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4498,"src":"29586:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":4547,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29596:2:14","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29586:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4549,"nodeType":"ExpressionStatement","src":"29586:12:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4552,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4492,"src":"29630:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":4555,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29639:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":4554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29645:1:14","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29639:7:14","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29630:16:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4568,"nodeType":"IfStatement","src":"29626:100:14","trueBody":{"id":4567,"nodeType":"Block","src":"29648:78:14","statements":[{"expression":{"id":4561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4557,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4492,"src":"29666:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":4560,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29675:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":4559,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29681:1:14","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29675:7:14","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29666:16:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4562,"nodeType":"ExpressionStatement","src":"29666:16:14"},{"expression":{"id":4565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4563,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4498,"src":"29700:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":4564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29710:1:14","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29700:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4566,"nodeType":"ExpressionStatement","src":"29700:11:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4569,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4492,"src":"29743:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":4572,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29752:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":4571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29758:1:14","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29752:7:14","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29743:16:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4585,"nodeType":"IfStatement","src":"29739:100:14","trueBody":{"id":4584,"nodeType":"Block","src":"29761:78:14","statements":[{"expression":{"id":4578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4574,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4492,"src":"29779:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":4577,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29788:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":4576,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29794:1:14","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29788:7:14","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29779:16:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4579,"nodeType":"ExpressionStatement","src":"29779:16:14"},{"expression":{"id":4582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4580,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4498,"src":"29813:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":4581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29823:1:14","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29813:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4583,"nodeType":"ExpressionStatement","src":"29813:11:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4586,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4492,"src":"29856:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":4589,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29865:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":4588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29871:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29865:7:14","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29856:16:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4602,"nodeType":"IfStatement","src":"29852:100:14","trueBody":{"id":4601,"nodeType":"Block","src":"29874:78:14","statements":[{"expression":{"id":4595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4591,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4492,"src":"29892:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":4594,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29901:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":4593,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29907:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29901:7:14","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29892:16:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4596,"nodeType":"ExpressionStatement","src":"29892:16:14"},{"expression":{"id":4599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4597,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4498,"src":"29926:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":4598,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29936:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29926:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4600,"nodeType":"ExpressionStatement","src":"29926:11:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4603,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4492,"src":"29969:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":4606,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4604,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29978:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":4605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29984:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"29978:7:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"29969:16:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4613,"nodeType":"IfStatement","src":"29965:66:14","trueBody":{"id":4612,"nodeType":"Block","src":"29987:44:14","statements":[{"expression":{"id":4610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4608,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4498,"src":"30005:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":4609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30015:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"30005:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4611,"nodeType":"ExpressionStatement","src":"30005:11:14"}]}}]},{"expression":{"id":4615,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4498,"src":"30057:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4496,"id":4616,"nodeType":"Return","src":"30050:13:14"}]},"documentation":{"id":4490,"nodeType":"StructuredDocumentation","src":"29029:120:14","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":4618,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"29163:5:14","nodeType":"FunctionDefinition","parameters":{"id":4493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4492,"mutability":"mutable","name":"value","nameLocation":"29177:5:14","nodeType":"VariableDeclaration","scope":4618,"src":"29169:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4491,"name":"uint256","nodeType":"ElementaryTypeName","src":"29169:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29168:15:14"},"returnParameters":{"id":4496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4495,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4618,"src":"29207:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4494,"name":"uint256","nodeType":"ElementaryTypeName","src":"29207:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29206:9:14"},"scope":4786,"src":"29154:916:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4651,"nodeType":"Block","src":"30305:177:14","statements":[{"id":4650,"nodeType":"UncheckedBlock","src":"30315:161:14","statements":[{"assignments":[4630],"declarations":[{"constant":false,"id":4630,"mutability":"mutable","name":"result","nameLocation":"30347:6:14","nodeType":"VariableDeclaration","scope":4650,"src":"30339:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4629,"name":"uint256","nodeType":"ElementaryTypeName","src":"30339:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4634,"initialValue":{"arguments":[{"id":4632,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4621,"src":"30362:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4631,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[4618,4652],"referencedDeclaration":4618,"src":"30356:5:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30356:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"30339:29:14"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4635,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4630,"src":"30389:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4639,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4624,"src":"30431:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3177","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3177","typeString":"enum Math.Rounding"}],"id":4638,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4785,"src":"30414:16:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3177_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30414:26:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4641,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30444:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":4642,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4630,"src":"30450:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4644,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4621,"src":"30459:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:20:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"30414:50:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4636,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6551,"src":"30398:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6551_$","typeString":"type(library SafeCast)"}},"id":4637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30407:6:14","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6550,"src":"30398:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4647,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30398:67:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30389:76:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4628,"id":4649,"nodeType":"Return","src":"30382:83:14"}]}]},"documentation":{"id":4619,"nodeType":"StructuredDocumentation","src":"30076:143:14","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4652,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"30233:5:14","nodeType":"FunctionDefinition","parameters":{"id":4625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4621,"mutability":"mutable","name":"value","nameLocation":"30247:5:14","nodeType":"VariableDeclaration","scope":4652,"src":"30239:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4620,"name":"uint256","nodeType":"ElementaryTypeName","src":"30239:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4624,"mutability":"mutable","name":"rounding","nameLocation":"30263:8:14","nodeType":"VariableDeclaration","scope":4652,"src":"30254:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3177","typeString":"enum Math.Rounding"},"typeName":{"id":4623,"nodeType":"UserDefinedTypeName","pathNode":{"id":4622,"name":"Rounding","nameLocations":["30254:8:14"],"nodeType":"IdentifierPath","referencedDeclaration":3177,"src":"30254:8:14"},"referencedDeclaration":3177,"src":"30254:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3177","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"30238:34:14"},"returnParameters":{"id":4628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4627,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4652,"src":"30296:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4626,"name":"uint256","nodeType":"ElementaryTypeName","src":"30296:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30295:9:14"},"scope":4786,"src":"30224:258:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4728,"nodeType":"Block","src":"30800:675:14","statements":[{"expression":{"id":4669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4660,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4658,"src":"30882:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4663,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4655,"src":"30902:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":4664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30906:34:14","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"30902:38:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4661,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6551,"src":"30886:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6551_$","typeString":"type(library SafeCast)"}},"id":4662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30895:6:14","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6550,"src":"30886:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30886:55:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":4667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30945:1:14","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"30886:60:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30882:64:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4670,"nodeType":"ExpressionStatement","src":"30882:64:14"},{"expression":{"id":4683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4671,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4658,"src":"31022:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4674,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4655,"src":"31044:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4675,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4658,"src":"31049:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31044:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4677,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31043:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":4678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31054:18:14","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"31043:29:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4672,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6551,"src":"31027:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6551_$","typeString":"type(library SafeCast)"}},"id":4673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31036:6:14","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6550,"src":"31027:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4680,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31027:46:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":4681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31077:1:14","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"31027:51:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31022:56:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4684,"nodeType":"ExpressionStatement","src":"31022:56:14"},{"expression":{"id":4697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4685,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4658,"src":"31153:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4688,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4655,"src":"31175:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4689,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4658,"src":"31180:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31175:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4691,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31174:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":4692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31185:10:14","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"31174:21:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4686,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6551,"src":"31158:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6551_$","typeString":"type(library SafeCast)"}},"id":4687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31167:6:14","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6550,"src":"31158:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4694,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31158:38:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":4695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31200:1:14","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"31158:43:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31153:48:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4698,"nodeType":"ExpressionStatement","src":"31153:48:14"},{"expression":{"id":4711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4699,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4658,"src":"31276:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4702,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4655,"src":"31298:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4703,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4658,"src":"31303:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31298:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4705,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31297:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":4706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31308:6:14","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"31297:17:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4700,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6551,"src":"31281:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6551_$","typeString":"type(library SafeCast)"}},"id":4701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31290:6:14","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6550,"src":"31281:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31281:34:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":4709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31319:1:14","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"31281:39:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31276:44:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4712,"nodeType":"ExpressionStatement","src":"31276:44:14"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4713,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4658,"src":"31426:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"33","id":4714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31431:1:14","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31426:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4716,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31425:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4719,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4655,"src":"31453:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4720,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4658,"src":"31458:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31453:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4722,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31452:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":4723,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31463:4:14","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"31452:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4717,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6551,"src":"31436:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6551_$","typeString":"type(library SafeCast)"}},"id":4718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31445:6:14","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6550,"src":"31436:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4725,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31436:32:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31425:43:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4659,"id":4727,"nodeType":"Return","src":"31418:50:14"}]},"documentation":{"id":4653,"nodeType":"StructuredDocumentation","src":"30488:246:14","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":4729,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"30748:6:14","nodeType":"FunctionDefinition","parameters":{"id":4656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4655,"mutability":"mutable","name":"x","nameLocation":"30763:1:14","nodeType":"VariableDeclaration","scope":4729,"src":"30755:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4654,"name":"uint256","nodeType":"ElementaryTypeName","src":"30755:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30754:11:14"},"returnParameters":{"id":4659,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4658,"mutability":"mutable","name":"r","nameLocation":"30797:1:14","nodeType":"VariableDeclaration","scope":4729,"src":"30789:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4657,"name":"uint256","nodeType":"ElementaryTypeName","src":"30789:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30788:11:14"},"scope":4786,"src":"30739:736:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4765,"nodeType":"Block","src":"31712:184:14","statements":[{"id":4764,"nodeType":"UncheckedBlock","src":"31722:168:14","statements":[{"assignments":[4741],"declarations":[{"constant":false,"id":4741,"mutability":"mutable","name":"result","nameLocation":"31754:6:14","nodeType":"VariableDeclaration","scope":4764,"src":"31746:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4740,"name":"uint256","nodeType":"ElementaryTypeName","src":"31746:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4745,"initialValue":{"arguments":[{"id":4743,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4732,"src":"31770:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4742,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[4729,4766],"referencedDeclaration":4729,"src":"31763:6:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4744,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31763:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"31746:30:14"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4746,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4741,"src":"31797:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4750,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4735,"src":"31839:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3177","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3177","typeString":"enum Math.Rounding"}],"id":4749,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4785,"src":"31822:16:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3177_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4751,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31822:26:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31852:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4753,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4741,"src":"31858:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":4754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31868:1:14","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31858:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4756,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31857:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:18:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4758,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4732,"src":"31873:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:26:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"31822:56:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4747,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6551,"src":"31806:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6551_$","typeString":"type(library SafeCast)"}},"id":4748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31815:6:14","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6550,"src":"31806:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4761,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31806:73:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31797:82:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4739,"id":4763,"nodeType":"Return","src":"31790:89:14"}]}]},"documentation":{"id":4730,"nodeType":"StructuredDocumentation","src":"31481:144:14","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4766,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"31639:6:14","nodeType":"FunctionDefinition","parameters":{"id":4736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4732,"mutability":"mutable","name":"value","nameLocation":"31654:5:14","nodeType":"VariableDeclaration","scope":4766,"src":"31646:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4731,"name":"uint256","nodeType":"ElementaryTypeName","src":"31646:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4735,"mutability":"mutable","name":"rounding","nameLocation":"31670:8:14","nodeType":"VariableDeclaration","scope":4766,"src":"31661:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3177","typeString":"enum Math.Rounding"},"typeName":{"id":4734,"nodeType":"UserDefinedTypeName","pathNode":{"id":4733,"name":"Rounding","nameLocations":["31661:8:14"],"nodeType":"IdentifierPath","referencedDeclaration":3177,"src":"31661:8:14"},"referencedDeclaration":3177,"src":"31661:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3177","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"31645:34:14"},"returnParameters":{"id":4739,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4738,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4766,"src":"31703:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4737,"name":"uint256","nodeType":"ElementaryTypeName","src":"31703:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"31702:9:14"},"scope":4786,"src":"31630:266:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4784,"nodeType":"Block","src":"32094:48:14","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4777,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4770,"src":"32117:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3177","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3177","typeString":"enum Math.Rounding"}],"id":4776,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32111:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4775,"name":"uint8","nodeType":"ElementaryTypeName","src":"32111:5:14","typeDescriptions":{}}},"id":4778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32111:15:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":4779,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32129:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"32111:19:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":4781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32134:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"32111:24:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4774,"id":4783,"nodeType":"Return","src":"32104:31:14"}]},"documentation":{"id":4767,"nodeType":"StructuredDocumentation","src":"31902:113:14","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":4785,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"32029:16:14","nodeType":"FunctionDefinition","parameters":{"id":4771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4770,"mutability":"mutable","name":"rounding","nameLocation":"32055:8:14","nodeType":"VariableDeclaration","scope":4785,"src":"32046:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3177","typeString":"enum Math.Rounding"},"typeName":{"id":4769,"nodeType":"UserDefinedTypeName","pathNode":{"id":4768,"name":"Rounding","nameLocations":["32046:8:14"],"nodeType":"IdentifierPath","referencedDeclaration":3177,"src":"32046:8:14"},"referencedDeclaration":3177,"src":"32046:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3177","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"32045:19:14"},"returnParameters":{"id":4774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4773,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4785,"src":"32088:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4772,"name":"bool","nodeType":"ElementaryTypeName","src":"32088:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"32087:6:14"},"scope":4786,"src":"32020:122:14","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4787,"src":"281:31863:14","usedErrors":[],"usedEvents":[]}],"src":"103:32042:14"},"id":14},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[6551]},"id":6552,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4788,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"192:24:15"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":4789,"nodeType":"StructuredDocumentation","src":"218:550:15","text":" @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":6551,"linearizedBaseContracts":[6551],"name":"SafeCast","nameLocation":"777:8:15","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":4790,"nodeType":"StructuredDocumentation","src":"792:68:15","text":" @dev Value doesn't fit in an uint of `bits` size."},"errorSelector":"6dfcc650","id":4796,"name":"SafeCastOverflowedUintDowncast","nameLocation":"871:30:15","nodeType":"ErrorDefinition","parameters":{"id":4795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4792,"mutability":"mutable","name":"bits","nameLocation":"908:4:15","nodeType":"VariableDeclaration","scope":4796,"src":"902:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4791,"name":"uint8","nodeType":"ElementaryTypeName","src":"902:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4794,"mutability":"mutable","name":"value","nameLocation":"922:5:15","nodeType":"VariableDeclaration","scope":4796,"src":"914:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4793,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"901:27:15"},"src":"865:64:15"},{"documentation":{"id":4797,"nodeType":"StructuredDocumentation","src":"935:75:15","text":" @dev An int value doesn't fit in an uint of `bits` size."},"errorSelector":"a8ce4432","id":4801,"name":"SafeCastOverflowedIntToUint","nameLocation":"1021:27:15","nodeType":"ErrorDefinition","parameters":{"id":4800,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4799,"mutability":"mutable","name":"value","nameLocation":"1056:5:15","nodeType":"VariableDeclaration","scope":4801,"src":"1049:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4798,"name":"int256","nodeType":"ElementaryTypeName","src":"1049:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1048:14:15"},"src":"1015:48:15"},{"documentation":{"id":4802,"nodeType":"StructuredDocumentation","src":"1069:67:15","text":" @dev Value doesn't fit in an int of `bits` size."},"errorSelector":"327269a7","id":4808,"name":"SafeCastOverflowedIntDowncast","nameLocation":"1147:29:15","nodeType":"ErrorDefinition","parameters":{"id":4807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4804,"mutability":"mutable","name":"bits","nameLocation":"1183:4:15","nodeType":"VariableDeclaration","scope":4808,"src":"1177:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4803,"name":"uint8","nodeType":"ElementaryTypeName","src":"1177:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4806,"mutability":"mutable","name":"value","nameLocation":"1196:5:15","nodeType":"VariableDeclaration","scope":4808,"src":"1189:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4805,"name":"int256","nodeType":"ElementaryTypeName","src":"1189:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1176:26:15"},"src":"1141:62:15"},{"documentation":{"id":4809,"nodeType":"StructuredDocumentation","src":"1209:75:15","text":" @dev An uint value doesn't fit in an int of `bits` size."},"errorSelector":"24775e06","id":4813,"name":"SafeCastOverflowedUintToInt","nameLocation":"1295:27:15","nodeType":"ErrorDefinition","parameters":{"id":4812,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4811,"mutability":"mutable","name":"value","nameLocation":"1331:5:15","nodeType":"VariableDeclaration","scope":4813,"src":"1323:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4810,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1322:15:15"},"src":"1289:49:15"},{"body":{"id":4840,"nodeType":"Block","src":"1695:152:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4821,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4816,"src":"1709:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4824,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1722:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":4823,"name":"uint248","nodeType":"ElementaryTypeName","src":"1722:7:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":4822,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1717:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4825,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1717:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":4826,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1731:3:15","memberName":"max","nodeType":"MemberAccess","src":"1717:17:15","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1709:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4834,"nodeType":"IfStatement","src":"1705:105:15","trueBody":{"id":4833,"nodeType":"Block","src":"1736:74:15","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":4829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1788:3:15","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":4830,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4816,"src":"1793:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4828,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4796,"src":"1757:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4831,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4832,"nodeType":"RevertStatement","src":"1750:49:15"}]}},{"expression":{"arguments":[{"id":4837,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4816,"src":"1834:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4836,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1826:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":4835,"name":"uint248","nodeType":"ElementaryTypeName","src":"1826:7:15","typeDescriptions":{}}},"id":4838,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1826:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":4820,"id":4839,"nodeType":"Return","src":"1819:21:15"}]},"documentation":{"id":4814,"nodeType":"StructuredDocumentation","src":"1344:280:15","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":4841,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1638:9:15","nodeType":"FunctionDefinition","parameters":{"id":4817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4816,"mutability":"mutable","name":"value","nameLocation":"1656:5:15","nodeType":"VariableDeclaration","scope":4841,"src":"1648:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4815,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1647:15:15"},"returnParameters":{"id":4820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4819,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4841,"src":"1686:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":4818,"name":"uint248","nodeType":"ElementaryTypeName","src":"1686:7:15","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1685:9:15"},"scope":6551,"src":"1629:218:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4868,"nodeType":"Block","src":"2204:152:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4849,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4844,"src":"2218:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4852,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2231:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":4851,"name":"uint240","nodeType":"ElementaryTypeName","src":"2231:7:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":4850,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2226:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4853,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2226:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":4854,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2240:3:15","memberName":"max","nodeType":"MemberAccess","src":"2226:17:15","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"2218:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4862,"nodeType":"IfStatement","src":"2214:105:15","trueBody":{"id":4861,"nodeType":"Block","src":"2245:74:15","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":4857,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2297:3:15","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":4858,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4844,"src":"2302:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4856,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4796,"src":"2266:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4859,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2266:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4860,"nodeType":"RevertStatement","src":"2259:49:15"}]}},{"expression":{"arguments":[{"id":4865,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4844,"src":"2343:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4864,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2335:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":4863,"name":"uint240","nodeType":"ElementaryTypeName","src":"2335:7:15","typeDescriptions":{}}},"id":4866,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":4848,"id":4867,"nodeType":"Return","src":"2328:21:15"}]},"documentation":{"id":4842,"nodeType":"StructuredDocumentation","src":"1853:280:15","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":4869,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"2147:9:15","nodeType":"FunctionDefinition","parameters":{"id":4845,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4844,"mutability":"mutable","name":"value","nameLocation":"2165:5:15","nodeType":"VariableDeclaration","scope":4869,"src":"2157:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4843,"name":"uint256","nodeType":"ElementaryTypeName","src":"2157:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2156:15:15"},"returnParameters":{"id":4848,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4847,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4869,"src":"2195:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":4846,"name":"uint240","nodeType":"ElementaryTypeName","src":"2195:7:15","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"2194:9:15"},"scope":6551,"src":"2138:218:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4896,"nodeType":"Block","src":"2713:152:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4877,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4872,"src":"2727:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4880,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2740:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":4879,"name":"uint232","nodeType":"ElementaryTypeName","src":"2740:7:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":4878,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2735:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4881,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2735:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":4882,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2749:3:15","memberName":"max","nodeType":"MemberAccess","src":"2735:17:15","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2727:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4890,"nodeType":"IfStatement","src":"2723:105:15","trueBody":{"id":4889,"nodeType":"Block","src":"2754:74:15","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":4885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2806:3:15","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":4886,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4872,"src":"2811:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4884,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4796,"src":"2775:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4887,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2775:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4888,"nodeType":"RevertStatement","src":"2768:49:15"}]}},{"expression":{"arguments":[{"id":4893,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4872,"src":"2852:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4892,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2844:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":4891,"name":"uint232","nodeType":"ElementaryTypeName","src":"2844:7:15","typeDescriptions":{}}},"id":4894,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2844:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":4876,"id":4895,"nodeType":"Return","src":"2837:21:15"}]},"documentation":{"id":4870,"nodeType":"StructuredDocumentation","src":"2362:280:15","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":4897,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2656:9:15","nodeType":"FunctionDefinition","parameters":{"id":4873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4872,"mutability":"mutable","name":"value","nameLocation":"2674:5:15","nodeType":"VariableDeclaration","scope":4897,"src":"2666:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4871,"name":"uint256","nodeType":"ElementaryTypeName","src":"2666:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:15:15"},"returnParameters":{"id":4876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4875,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4897,"src":"2704:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":4874,"name":"uint232","nodeType":"ElementaryTypeName","src":"2704:7:15","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2703:9:15"},"scope":6551,"src":"2647:218:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4924,"nodeType":"Block","src":"3222:152:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4905,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4900,"src":"3236:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4908,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3249:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":4907,"name":"uint224","nodeType":"ElementaryTypeName","src":"3249:7:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":4906,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3244:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4909,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3244:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":4910,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3258:3:15","memberName":"max","nodeType":"MemberAccess","src":"3244:17:15","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"3236:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4918,"nodeType":"IfStatement","src":"3232:105:15","trueBody":{"id":4917,"nodeType":"Block","src":"3263:74:15","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":4913,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3315:3:15","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":4914,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4900,"src":"3320:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4912,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4796,"src":"3284:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4915,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4916,"nodeType":"RevertStatement","src":"3277:49:15"}]}},{"expression":{"arguments":[{"id":4921,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4900,"src":"3361:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4920,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3353:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":4919,"name":"uint224","nodeType":"ElementaryTypeName","src":"3353:7:15","typeDescriptions":{}}},"id":4922,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3353:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":4904,"id":4923,"nodeType":"Return","src":"3346:21:15"}]},"documentation":{"id":4898,"nodeType":"StructuredDocumentation","src":"2871:280:15","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":4925,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"3165:9:15","nodeType":"FunctionDefinition","parameters":{"id":4901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4900,"mutability":"mutable","name":"value","nameLocation":"3183:5:15","nodeType":"VariableDeclaration","scope":4925,"src":"3175:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4899,"name":"uint256","nodeType":"ElementaryTypeName","src":"3175:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3174:15:15"},"returnParameters":{"id":4904,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4903,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4925,"src":"3213:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":4902,"name":"uint224","nodeType":"ElementaryTypeName","src":"3213:7:15","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3212:9:15"},"scope":6551,"src":"3156:218:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4952,"nodeType":"Block","src":"3731:152:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4933,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4928,"src":"3745:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4936,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3758:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":4935,"name":"uint216","nodeType":"ElementaryTypeName","src":"3758:7:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":4934,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3753:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3753:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":4938,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3767:3:15","memberName":"max","nodeType":"MemberAccess","src":"3753:17:15","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3745:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4946,"nodeType":"IfStatement","src":"3741:105:15","trueBody":{"id":4945,"nodeType":"Block","src":"3772:74:15","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":4941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3824:3:15","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":4942,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4928,"src":"3829:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4940,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4796,"src":"3793:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4943,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3793:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4944,"nodeType":"RevertStatement","src":"3786:49:15"}]}},{"expression":{"arguments":[{"id":4949,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4928,"src":"3870:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4948,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3862:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":4947,"name":"uint216","nodeType":"ElementaryTypeName","src":"3862:7:15","typeDescriptions":{}}},"id":4950,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3862:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":4932,"id":4951,"nodeType":"Return","src":"3855:21:15"}]},"documentation":{"id":4926,"nodeType":"StructuredDocumentation","src":"3380:280:15","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":4953,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3674:9:15","nodeType":"FunctionDefinition","parameters":{"id":4929,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4928,"mutability":"mutable","name":"value","nameLocation":"3692:5:15","nodeType":"VariableDeclaration","scope":4953,"src":"3684:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4927,"name":"uint256","nodeType":"ElementaryTypeName","src":"3684:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3683:15:15"},"returnParameters":{"id":4932,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4931,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4953,"src":"3722:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":4930,"name":"uint216","nodeType":"ElementaryTypeName","src":"3722:7:15","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3721:9:15"},"scope":6551,"src":"3665:218:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4980,"nodeType":"Block","src":"4240:152:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4961,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4956,"src":"4254:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4964,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4267:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":4963,"name":"uint208","nodeType":"ElementaryTypeName","src":"4267:7:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":4962,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4262:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4965,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4262:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":4966,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4276:3:15","memberName":"max","nodeType":"MemberAccess","src":"4262:17:15","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"4254:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4974,"nodeType":"IfStatement","src":"4250:105:15","trueBody":{"id":4973,"nodeType":"Block","src":"4281:74:15","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":4969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4333:3:15","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":4970,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4956,"src":"4338:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4968,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4796,"src":"4302:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4971,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4302:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4972,"nodeType":"RevertStatement","src":"4295:49:15"}]}},{"expression":{"arguments":[{"id":4977,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4956,"src":"4379:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4976,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4371:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":4975,"name":"uint208","nodeType":"ElementaryTypeName","src":"4371:7:15","typeDescriptions":{}}},"id":4978,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4371:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":4960,"id":4979,"nodeType":"Return","src":"4364:21:15"}]},"documentation":{"id":4954,"nodeType":"StructuredDocumentation","src":"3889:280:15","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":4981,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"4183:9:15","nodeType":"FunctionDefinition","parameters":{"id":4957,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4956,"mutability":"mutable","name":"value","nameLocation":"4201:5:15","nodeType":"VariableDeclaration","scope":4981,"src":"4193:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4955,"name":"uint256","nodeType":"ElementaryTypeName","src":"4193:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4192:15:15"},"returnParameters":{"id":4960,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4959,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4981,"src":"4231:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":4958,"name":"uint208","nodeType":"ElementaryTypeName","src":"4231:7:15","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"4230:9:15"},"scope":6551,"src":"4174:218:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5008,"nodeType":"Block","src":"4749:152:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4989,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4984,"src":"4763:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4992,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4776:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":4991,"name":"uint200","nodeType":"ElementaryTypeName","src":"4776:7:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":4990,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4771:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4771:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":4994,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4785:3:15","memberName":"max","nodeType":"MemberAccess","src":"4771:17:15","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4763:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5002,"nodeType":"IfStatement","src":"4759:105:15","trueBody":{"id":5001,"nodeType":"Block","src":"4790:74:15","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":4997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4842:3:15","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":4998,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4984,"src":"4847:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4996,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4796,"src":"4811:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4999,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4811:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5000,"nodeType":"RevertStatement","src":"4804:49:15"}]}},{"expression":{"arguments":[{"id":5005,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4984,"src":"4888:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5004,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4880:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":5003,"name":"uint200","nodeType":"ElementaryTypeName","src":"4880:7:15","typeDescriptions":{}}},"id":5006,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4880:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":4988,"id":5007,"nodeType":"Return","src":"4873:21:15"}]},"documentation":{"id":4982,"nodeType":"StructuredDocumentation","src":"4398:280:15","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":5009,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4692:9:15","nodeType":"FunctionDefinition","parameters":{"id":4985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4984,"mutability":"mutable","name":"value","nameLocation":"4710:5:15","nodeType":"VariableDeclaration","scope":5009,"src":"4702:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4983,"name":"uint256","nodeType":"ElementaryTypeName","src":"4702:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:15:15"},"returnParameters":{"id":4988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4987,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5009,"src":"4740:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":4986,"name":"uint200","nodeType":"ElementaryTypeName","src":"4740:7:15","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4739:9:15"},"scope":6551,"src":"4683:218:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5036,"nodeType":"Block","src":"5258:152:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5017,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5012,"src":"5272:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5020,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5285:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":5019,"name":"uint192","nodeType":"ElementaryTypeName","src":"5285:7:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":5018,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5280:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5280:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":5022,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5294:3:15","memberName":"max","nodeType":"MemberAccess","src":"5280:17:15","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5272:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5030,"nodeType":"IfStatement","src":"5268:105:15","trueBody":{"id":5029,"nodeType":"Block","src":"5299:74:15","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":5025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5351:3:15","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":5026,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5012,"src":"5356:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5024,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4796,"src":"5320:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5027,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5320:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5028,"nodeType":"RevertStatement","src":"5313:49:15"}]}},{"expression":{"arguments":[{"id":5033,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5012,"src":"5397:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5032,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5389:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":5031,"name":"uint192","nodeType":"ElementaryTypeName","src":"5389:7:15","typeDescriptions":{}}},"id":5034,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":5016,"id":5035,"nodeType":"Return","src":"5382:21:15"}]},"documentation":{"id":5010,"nodeType":"StructuredDocumentation","src":"4907:280:15","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":5037,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"5201:9:15","nodeType":"FunctionDefinition","parameters":{"id":5013,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5012,"mutability":"mutable","name":"value","nameLocation":"5219:5:15","nodeType":"VariableDeclaration","scope":5037,"src":"5211:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5011,"name":"uint256","nodeType":"ElementaryTypeName","src":"5211:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5210:15:15"},"returnParameters":{"id":5016,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5015,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5037,"src":"5249:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":5014,"name":"uint192","nodeType":"ElementaryTypeName","src":"5249:7:15","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"5248:9:15"},"scope":6551,"src":"5192:218:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5064,"nodeType":"Block","src":"5767:152:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5045,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5040,"src":"5781:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5048,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5794:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":5047,"name":"uint184","nodeType":"ElementaryTypeName","src":"5794:7:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":5046,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5789:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5049,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5789:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":5050,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5803:3:15","memberName":"max","nodeType":"MemberAccess","src":"5789:17:15","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5781:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5058,"nodeType":"IfStatement","src":"5777:105:15","trueBody":{"id":5057,"nodeType":"Block","src":"5808:74:15","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":5053,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5860:3:15","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":5054,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5040,"src":"5865:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5052,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4796,"src":"5829:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5055,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5829:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5056,"nodeType":"RevertStatement","src":"5822:49:15"}]}},{"expression":{"arguments":[{"id":5061,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5040,"src":"5906:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5060,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":5059,"name":"uint184","nodeType":"ElementaryTypeName","src":"5898:7:15","typeDescriptions":{}}},"id":5062,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":5044,"id":5063,"nodeType":"Return","src":"5891:21:15"}]},"documentation":{"id":5038,"nodeType":"StructuredDocumentation","src":"5416:280:15","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":5065,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5710:9:15","nodeType":"FunctionDefinition","parameters":{"id":5041,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5040,"mutability":"mutable","name":"value","nameLocation":"5728:5:15","nodeType":"VariableDeclaration","scope":5065,"src":"5720:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5039,"name":"uint256","nodeType":"ElementaryTypeName","src":"5720:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5719:15:15"},"returnParameters":{"id":5044,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5043,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5065,"src":"5758:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":5042,"name":"uint184","nodeType":"ElementaryTypeName","src":"5758:7:15","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5757:9:15"},"scope":6551,"src":"5701:218:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5092,"nodeType":"Block","src":"6276:152:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5073,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5068,"src":"6290:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5076,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6303:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":5075,"name":"uint176","nodeType":"ElementaryTypeName","src":"6303:7:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":5074,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6298:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5077,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":5078,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6312:3:15","memberName":"max","nodeType":"MemberAccess","src":"6298:17:15","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6290:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5086,"nodeType":"IfStatement","src":"6286:105:15","trueBody":{"id":5085,"nodeType":"Block","src":"6317:74:15","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":5081,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6369:3:15","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":5082,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5068,"src":"6374:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5080,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4796,"src":"6338:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5083,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6338:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5084,"nodeType":"RevertStatement","src":"6331:49:15"}]}},{"expression":{"arguments":[{"id":5089,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5068,"src":"6415:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5088,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6407:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":5087,"name":"uint176","nodeType":"ElementaryTypeName","src":"6407:7:15","typeDescriptions":{}}},"id":5090,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6407:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":5072,"id":5091,"nodeType":"Return","src":"6400:21:15"}]},"documentation":{"id":5066,"nodeType":"StructuredDocumentation","src":"5925:280:15","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":5093,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"6219:9:15","nodeType":"FunctionDefinition","parameters":{"id":5069,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5068,"mutability":"mutable","name":"value","nameLocation":"6237:5:15","nodeType":"VariableDeclaration","scope":5093,"src":"6229:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5067,"name":"uint256","nodeType":"ElementaryTypeName","src":"6229:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6228:15:15"},"returnParameters":{"id":5072,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5071,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5093,"src":"6267:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":5070,"name":"uint176","nodeType":"ElementaryTypeName","src":"6267:7:15","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6266:9:15"},"scope":6551,"src":"6210:218:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5120,"nodeType":"Block","src":"6785:152:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5101,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5096,"src":"6799:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5104,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6812:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":5103,"name":"uint168","nodeType":"ElementaryTypeName","src":"6812:7:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":5102,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6807:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6807:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":5106,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6821:3:15","memberName":"max","nodeType":"MemberAccess","src":"6807:17:15","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6799:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5114,"nodeType":"IfStatement","src":"6795:105:15","trueBody":{"id":5113,"nodeType":"Block","src":"6826:74:15","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":5109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6878:3:15","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":5110,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5096,"src":"6883:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5108,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4796,"src":"6847:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6847:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5112,"nodeType":"RevertStatement","src":"6840:49:15"}]}},{"expression":{"arguments":[{"id":5117,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5096,"src":"6924:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5116,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":5115,"name":"uint168","nodeType":"ElementaryTypeName","src":"6916:7:15","typeDescriptions":{}}},"id":5118,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":5100,"id":5119,"nodeType":"Return","src":"6909:21:15"}]},"documentation":{"id":5094,"nodeType":"StructuredDocumentation","src":"6434:280:15","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":5121,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6728:9:15","nodeType":"FunctionDefinition","parameters":{"id":5097,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5096,"mutability":"mutable","name":"value","nameLocation":"6746:5:15","nodeType":"VariableDeclaration","scope":5121,"src":"6738:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5095,"name":"uint256","nodeType":"ElementaryTypeName","src":"6738:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6737:15:15"},"returnParameters":{"id":5100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5099,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5121,"src":"6776:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":5098,"name":"uint168","nodeType":"ElementaryTypeName","src":"6776:7:15","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6775:9:15"},"scope":6551,"src":"6719:218:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5148,"nodeType":"Block","src":"7294:152:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5129,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5124,"src":"7308:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5132,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7321:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5131,"name":"uint160","nodeType":"ElementaryTypeName","src":"7321:7:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":5130,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7316:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5133,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7316:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":5134,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7330:3:15","memberName":"max","nodeType":"MemberAccess","src":"7316:17:15","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7308:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5142,"nodeType":"IfStatement","src":"7304:105:15","trueBody":{"id":5141,"nodeType":"Block","src":"7335:74:15","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":5137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7387:3:15","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":5138,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5124,"src":"7392:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5136,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4796,"src":"7356:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5139,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7356:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5140,"nodeType":"RevertStatement","src":"7349:49:15"}]}},{"expression":{"arguments":[{"id":5145,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5124,"src":"7433:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5144,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7425:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5143,"name":"uint160","nodeType":"ElementaryTypeName","src":"7425:7:15","typeDescriptions":{}}},"id":5146,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7425:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":5128,"id":5147,"nodeType":"Return","src":"7418:21:15"}]},"documentation":{"id":5122,"nodeType":"StructuredDocumentation","src":"6943:280:15","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":5149,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7237:9:15","nodeType":"FunctionDefinition","parameters":{"id":5125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5124,"mutability":"mutable","name":"value","nameLocation":"7255:5:15","nodeType":"VariableDeclaration","scope":5149,"src":"7247:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5123,"name":"uint256","nodeType":"ElementaryTypeName","src":"7247:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7246:15:15"},"returnParameters":{"id":5128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5127,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5149,"src":"7285:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":5126,"name":"uint160","nodeType":"ElementaryTypeName","src":"7285:7:15","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7284:9:15"},"scope":6551,"src":"7228:218:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5176,"nodeType":"Block","src":"7803:152:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5157,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5152,"src":"7817:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5160,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7830:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":5159,"name":"uint152","nodeType":"ElementaryTypeName","src":"7830:7:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":5158,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7825:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5161,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7825:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":5162,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7839:3:15","memberName":"max","nodeType":"MemberAccess","src":"7825:17:15","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7817:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5170,"nodeType":"IfStatement","src":"7813:105:15","trueBody":{"id":5169,"nodeType":"Block","src":"7844:74:15","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":5165,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:3:15","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":5166,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5152,"src":"7901:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5164,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4796,"src":"7865:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7865:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5168,"nodeType":"RevertStatement","src":"7858:49:15"}]}},{"expression":{"arguments":[{"id":5173,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5152,"src":"7942:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5172,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7934:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":5171,"name":"uint152","nodeType":"ElementaryTypeName","src":"7934:7:15","typeDescriptions":{}}},"id":5174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7934:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":5156,"id":5175,"nodeType":"Return","src":"7927:21:15"}]},"documentation":{"id":5150,"nodeType":"StructuredDocumentation","src":"7452:280:15","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":5177,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7746:9:15","nodeType":"FunctionDefinition","parameters":{"id":5153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5152,"mutability":"mutable","name":"value","nameLocation":"7764:5:15","nodeType":"VariableDeclaration","scope":5177,"src":"7756:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5151,"name":"uint256","nodeType":"ElementaryTypeName","src":"7756:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7755:15:15"},"returnParameters":{"id":5156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5155,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5177,"src":"7794:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":5154,"name":"uint152","nodeType":"ElementaryTypeName","src":"7794:7:15","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7793:9:15"},"scope":6551,"src":"7737:218:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5204,"nodeType":"Block","src":"8312:152:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5185,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5180,"src":"8326:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5188,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8339:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":5187,"name":"uint144","nodeType":"ElementaryTypeName","src":"8339:7:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":5186,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8334:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5189,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8334:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":5190,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8348:3:15","memberName":"max","nodeType":"MemberAccess","src":"8334:17:15","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8326:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5198,"nodeType":"IfStatement","src":"8322:105:15","trueBody":{"id":5197,"nodeType":"Block","src":"8353:74:15","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":5193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8405:3:15","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":5194,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5180,"src":"8410:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5192,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4796,"src":"8374:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8374:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5196,"nodeType":"RevertStatement","src":"8367:49:15"}]}},{"expression":{"arguments":[{"id":5201,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5180,"src":"8451:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5200,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8443:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":5199,"name":"uint144","nodeType":"ElementaryTypeName","src":"8443:7:15","typeDescriptions":{}}},"id":5202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8443:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":5184,"id":5203,"nodeType":"Return","src":"8436:21:15"}]},"documentation":{"id":5178,"nodeType":"StructuredDocumentation","src":"7961:280:15","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":5205,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8255:9:15","nodeType":"FunctionDefinition","parameters":{"id":5181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5180,"mutability":"mutable","name":"value","nameLocation":"8273:5:15","nodeType":"VariableDeclaration","scope":5205,"src":"8265:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5179,"name":"uint256","nodeType":"ElementaryTypeName","src":"8265:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8264:15:15"},"returnParameters":{"id":5184,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5183,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5205,"src":"8303:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":5182,"name":"uint144","nodeType":"ElementaryTypeName","src":"8303:7:15","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8302:9:15"},"scope":6551,"src":"8246:218:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5232,"nodeType":"Block","src":"8821:152:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5213,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5208,"src":"8835:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5216,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8848:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":5215,"name":"uint136","nodeType":"ElementaryTypeName","src":"8848:7:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":5214,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8843:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8843:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":5218,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8857:3:15","memberName":"max","nodeType":"MemberAccess","src":"8843:17:15","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8835:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5226,"nodeType":"IfStatement","src":"8831:105:15","trueBody":{"id":5225,"nodeType":"Block","src":"8862:74:15","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":5221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8914:3:15","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":5222,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5208,"src":"8919:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5220,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4796,"src":"8883:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8883:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5224,"nodeType":"RevertStatement","src":"8876:49:15"}]}},{"expression":{"arguments":[{"id":5229,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5208,"src":"8960:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5228,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8952:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":5227,"name":"uint136","nodeType":"ElementaryTypeName","src":"8952:7:15","typeDescriptions":{}}},"id":5230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":5212,"id":5231,"nodeType":"Return","src":"8945:21:15"}]},"documentation":{"id":5206,"nodeType":"StructuredDocumentation","src":"8470:280:15","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":5233,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8764:9:15","nodeType":"FunctionDefinition","parameters":{"id":5209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5208,"mutability":"mutable","name":"value","nameLocation":"8782:5:15","nodeType":"VariableDeclaration","scope":5233,"src":"8774:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5207,"name":"uint256","nodeType":"ElementaryTypeName","src":"8774:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8773:15:15"},"returnParameters":{"id":5212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5211,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5233,"src":"8812:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":5210,"name":"uint136","nodeType":"ElementaryTypeName","src":"8812:7:15","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8811:9:15"},"scope":6551,"src":"8755:218:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5260,"nodeType":"Block","src":"9330:152:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5241,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5236,"src":"9344:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5244,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9357:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":5243,"name":"uint128","nodeType":"ElementaryTypeName","src":"9357:7:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":5242,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9352:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9352:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":5246,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9366:3:15","memberName":"max","nodeType":"MemberAccess","src":"9352:17:15","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9344:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5254,"nodeType":"IfStatement","src":"9340:105:15","trueBody":{"id":5253,"nodeType":"Block","src":"9371:74:15","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":5249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9423:3:15","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":5250,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5236,"src":"9428:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5248,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4796,"src":"9392:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5251,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9392:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5252,"nodeType":"RevertStatement","src":"9385:49:15"}]}},{"expression":{"arguments":[{"id":5257,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5236,"src":"9469:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5256,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9461:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":5255,"name":"uint128","nodeType":"ElementaryTypeName","src":"9461:7:15","typeDescriptions":{}}},"id":5258,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9461:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":5240,"id":5259,"nodeType":"Return","src":"9454:21:15"}]},"documentation":{"id":5234,"nodeType":"StructuredDocumentation","src":"8979:280:15","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":5261,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9273:9:15","nodeType":"FunctionDefinition","parameters":{"id":5237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5236,"mutability":"mutable","name":"value","nameLocation":"9291:5:15","nodeType":"VariableDeclaration","scope":5261,"src":"9283:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5235,"name":"uint256","nodeType":"ElementaryTypeName","src":"9283:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9282:15:15"},"returnParameters":{"id":5240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5239,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5261,"src":"9321:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":5238,"name":"uint128","nodeType":"ElementaryTypeName","src":"9321:7:15","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9320:9:15"},"scope":6551,"src":"9264:218:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5288,"nodeType":"Block","src":"9839:152:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5269,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5264,"src":"9853:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5272,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9866:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":5271,"name":"uint120","nodeType":"ElementaryTypeName","src":"9866:7:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":5270,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9861:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9861:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":5274,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9875:3:15","memberName":"max","nodeType":"MemberAccess","src":"9861:17:15","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9853:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5282,"nodeType":"IfStatement","src":"9849:105:15","trueBody":{"id":5281,"nodeType":"Block","src":"9880:74:15","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":5277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9932:3:15","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":5278,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5264,"src":"9937:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5276,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4796,"src":"9901:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5279,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9901:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5280,"nodeType":"RevertStatement","src":"9894:49:15"}]}},{"expression":{"arguments":[{"id":5285,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5264,"src":"9978:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5284,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9970:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":5283,"name":"uint120","nodeType":"ElementaryTypeName","src":"9970:7:15","typeDescriptions":{}}},"id":5286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9970:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":5268,"id":5287,"nodeType":"Return","src":"9963:21:15"}]},"documentation":{"id":5262,"nodeType":"StructuredDocumentation","src":"9488:280:15","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":5289,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9782:9:15","nodeType":"FunctionDefinition","parameters":{"id":5265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5264,"mutability":"mutable","name":"value","nameLocation":"9800:5:15","nodeType":"VariableDeclaration","scope":5289,"src":"9792:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5263,"name":"uint256","nodeType":"ElementaryTypeName","src":"9792:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9791:15:15"},"returnParameters":{"id":5268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5267,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5289,"src":"9830:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":5266,"name":"uint120","nodeType":"ElementaryTypeName","src":"9830:7:15","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9829:9:15"},"scope":6551,"src":"9773:218:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5316,"nodeType":"Block","src":"10348:152:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5297,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5292,"src":"10362:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5300,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10375:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":5299,"name":"uint112","nodeType":"ElementaryTypeName","src":"10375:7:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":5298,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10370:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10370:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":5302,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10384:3:15","memberName":"max","nodeType":"MemberAccess","src":"10370:17:15","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10362:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5310,"nodeType":"IfStatement","src":"10358:105:15","trueBody":{"id":5309,"nodeType":"Block","src":"10389:74:15","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":5305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10441:3:15","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":5306,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5292,"src":"10446:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5304,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4796,"src":"10410:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10410:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5308,"nodeType":"RevertStatement","src":"10403:49:15"}]}},{"expression":{"arguments":[{"id":5313,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5292,"src":"10487:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5312,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10479:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":5311,"name":"uint112","nodeType":"ElementaryTypeName","src":"10479:7:15","typeDescriptions":{}}},"id":5314,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10479:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":5296,"id":5315,"nodeType":"Return","src":"10472:21:15"}]},"documentation":{"id":5290,"nodeType":"StructuredDocumentation","src":"9997:280:15","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":5317,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10291:9:15","nodeType":"FunctionDefinition","parameters":{"id":5293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5292,"mutability":"mutable","name":"value","nameLocation":"10309:5:15","nodeType":"VariableDeclaration","scope":5317,"src":"10301:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5291,"name":"uint256","nodeType":"ElementaryTypeName","src":"10301:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10300:15:15"},"returnParameters":{"id":5296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5295,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5317,"src":"10339:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":5294,"name":"uint112","nodeType":"ElementaryTypeName","src":"10339:7:15","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10338:9:15"},"scope":6551,"src":"10282:218:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5344,"nodeType":"Block","src":"10857:152:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5325,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5320,"src":"10871:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5328,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10884:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":5327,"name":"uint104","nodeType":"ElementaryTypeName","src":"10884:7:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":5326,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10879:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10879:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":5330,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10893:3:15","memberName":"max","nodeType":"MemberAccess","src":"10879:17:15","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10871:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5338,"nodeType":"IfStatement","src":"10867:105:15","trueBody":{"id":5337,"nodeType":"Block","src":"10898:74:15","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":5333,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10950:3:15","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":5334,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5320,"src":"10955:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5332,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4796,"src":"10919:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5335,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10919:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5336,"nodeType":"RevertStatement","src":"10912:49:15"}]}},{"expression":{"arguments":[{"id":5341,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5320,"src":"10996:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5340,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10988:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":5339,"name":"uint104","nodeType":"ElementaryTypeName","src":"10988:7:15","typeDescriptions":{}}},"id":5342,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10988:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":5324,"id":5343,"nodeType":"Return","src":"10981:21:15"}]},"documentation":{"id":5318,"nodeType":"StructuredDocumentation","src":"10506:280:15","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":5345,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10800:9:15","nodeType":"FunctionDefinition","parameters":{"id":5321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5320,"mutability":"mutable","name":"value","nameLocation":"10818:5:15","nodeType":"VariableDeclaration","scope":5345,"src":"10810:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5319,"name":"uint256","nodeType":"ElementaryTypeName","src":"10810:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10809:15:15"},"returnParameters":{"id":5324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5323,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5345,"src":"10848:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":5322,"name":"uint104","nodeType":"ElementaryTypeName","src":"10848:7:15","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10847:9:15"},"scope":6551,"src":"10791:218:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5372,"nodeType":"Block","src":"11360:149:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5353,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5348,"src":"11374:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5356,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11387:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":5355,"name":"uint96","nodeType":"ElementaryTypeName","src":"11387:6:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":5354,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11382:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11382:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":5358,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11395:3:15","memberName":"max","nodeType":"MemberAccess","src":"11382:16:15","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11374:24:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5366,"nodeType":"IfStatement","src":"11370:103:15","trueBody":{"id":5365,"nodeType":"Block","src":"11400:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":5361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11452:2:15","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":5362,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5348,"src":"11456:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5360,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4796,"src":"11421:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5363,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11421:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5364,"nodeType":"RevertStatement","src":"11414:48:15"}]}},{"expression":{"arguments":[{"id":5369,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5348,"src":"11496:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5368,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11489:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":5367,"name":"uint96","nodeType":"ElementaryTypeName","src":"11489:6:15","typeDescriptions":{}}},"id":5370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11489:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":5352,"id":5371,"nodeType":"Return","src":"11482:20:15"}]},"documentation":{"id":5346,"nodeType":"StructuredDocumentation","src":"11015:276:15","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":5373,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11305:8:15","nodeType":"FunctionDefinition","parameters":{"id":5349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5348,"mutability":"mutable","name":"value","nameLocation":"11322:5:15","nodeType":"VariableDeclaration","scope":5373,"src":"11314:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5347,"name":"uint256","nodeType":"ElementaryTypeName","src":"11314:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11313:15:15"},"returnParameters":{"id":5352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5351,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5373,"src":"11352:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":5350,"name":"uint96","nodeType":"ElementaryTypeName","src":"11352:6:15","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11351:8:15"},"scope":6551,"src":"11296:213:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5400,"nodeType":"Block","src":"11860:149:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5381,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5376,"src":"11874:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5384,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11887:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":5383,"name":"uint88","nodeType":"ElementaryTypeName","src":"11887:6:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":5382,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11882:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11882:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":5386,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11895:3:15","memberName":"max","nodeType":"MemberAccess","src":"11882:16:15","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11874:24:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5394,"nodeType":"IfStatement","src":"11870:103:15","trueBody":{"id":5393,"nodeType":"Block","src":"11900:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":5389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11952:2:15","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":5390,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5376,"src":"11956:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5388,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4796,"src":"11921:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5391,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11921:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5392,"nodeType":"RevertStatement","src":"11914:48:15"}]}},{"expression":{"arguments":[{"id":5397,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5376,"src":"11996:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5396,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11989:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":5395,"name":"uint88","nodeType":"ElementaryTypeName","src":"11989:6:15","typeDescriptions":{}}},"id":5398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11989:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":5380,"id":5399,"nodeType":"Return","src":"11982:20:15"}]},"documentation":{"id":5374,"nodeType":"StructuredDocumentation","src":"11515:276:15","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":5401,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11805:8:15","nodeType":"FunctionDefinition","parameters":{"id":5377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5376,"mutability":"mutable","name":"value","nameLocation":"11822:5:15","nodeType":"VariableDeclaration","scope":5401,"src":"11814:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5375,"name":"uint256","nodeType":"ElementaryTypeName","src":"11814:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11813:15:15"},"returnParameters":{"id":5380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5379,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5401,"src":"11852:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":5378,"name":"uint88","nodeType":"ElementaryTypeName","src":"11852:6:15","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11851:8:15"},"scope":6551,"src":"11796:213:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5428,"nodeType":"Block","src":"12360:149:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5409,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5404,"src":"12374:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5412,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12387:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":5411,"name":"uint80","nodeType":"ElementaryTypeName","src":"12387:6:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":5410,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12382:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12382:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":5414,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12395:3:15","memberName":"max","nodeType":"MemberAccess","src":"12382:16:15","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12374:24:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5422,"nodeType":"IfStatement","src":"12370:103:15","trueBody":{"id":5421,"nodeType":"Block","src":"12400:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":5417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12452:2:15","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":5418,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5404,"src":"12456:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5416,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4796,"src":"12421:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12421:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5420,"nodeType":"RevertStatement","src":"12414:48:15"}]}},{"expression":{"arguments":[{"id":5425,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5404,"src":"12496:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5424,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12489:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":5423,"name":"uint80","nodeType":"ElementaryTypeName","src":"12489:6:15","typeDescriptions":{}}},"id":5426,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12489:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":5408,"id":5427,"nodeType":"Return","src":"12482:20:15"}]},"documentation":{"id":5402,"nodeType":"StructuredDocumentation","src":"12015:276:15","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":5429,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12305:8:15","nodeType":"FunctionDefinition","parameters":{"id":5405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5404,"mutability":"mutable","name":"value","nameLocation":"12322:5:15","nodeType":"VariableDeclaration","scope":5429,"src":"12314:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5403,"name":"uint256","nodeType":"ElementaryTypeName","src":"12314:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12313:15:15"},"returnParameters":{"id":5408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5407,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5429,"src":"12352:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":5406,"name":"uint80","nodeType":"ElementaryTypeName","src":"12352:6:15","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12351:8:15"},"scope":6551,"src":"12296:213:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5456,"nodeType":"Block","src":"12860:149:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5437,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5432,"src":"12874:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5440,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12887:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":5439,"name":"uint72","nodeType":"ElementaryTypeName","src":"12887:6:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":5438,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12882:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12882:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":5442,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12895:3:15","memberName":"max","nodeType":"MemberAccess","src":"12882:16:15","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12874:24:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5450,"nodeType":"IfStatement","src":"12870:103:15","trueBody":{"id":5449,"nodeType":"Block","src":"12900:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":5445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12952:2:15","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":5446,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5432,"src":"12956:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5444,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4796,"src":"12921:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12921:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5448,"nodeType":"RevertStatement","src":"12914:48:15"}]}},{"expression":{"arguments":[{"id":5453,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5432,"src":"12996:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5452,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12989:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":5451,"name":"uint72","nodeType":"ElementaryTypeName","src":"12989:6:15","typeDescriptions":{}}},"id":5454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12989:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":5436,"id":5455,"nodeType":"Return","src":"12982:20:15"}]},"documentation":{"id":5430,"nodeType":"StructuredDocumentation","src":"12515:276:15","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":5457,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12805:8:15","nodeType":"FunctionDefinition","parameters":{"id":5433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5432,"mutability":"mutable","name":"value","nameLocation":"12822:5:15","nodeType":"VariableDeclaration","scope":5457,"src":"12814:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5431,"name":"uint256","nodeType":"ElementaryTypeName","src":"12814:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12813:15:15"},"returnParameters":{"id":5436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5435,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5457,"src":"12852:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":5434,"name":"uint72","nodeType":"ElementaryTypeName","src":"12852:6:15","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12851:8:15"},"scope":6551,"src":"12796:213:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5484,"nodeType":"Block","src":"13360:149:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5465,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5460,"src":"13374:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5468,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13387:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":5467,"name":"uint64","nodeType":"ElementaryTypeName","src":"13387:6:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":5466,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13382:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13382:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":5470,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13395:3:15","memberName":"max","nodeType":"MemberAccess","src":"13382:16:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13374:24:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5478,"nodeType":"IfStatement","src":"13370:103:15","trueBody":{"id":5477,"nodeType":"Block","src":"13400:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":5473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13452:2:15","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":5474,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5460,"src":"13456:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5472,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4796,"src":"13421:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5475,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13421:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5476,"nodeType":"RevertStatement","src":"13414:48:15"}]}},{"expression":{"arguments":[{"id":5481,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5460,"src":"13496:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5480,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13489:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":5479,"name":"uint64","nodeType":"ElementaryTypeName","src":"13489:6:15","typeDescriptions":{}}},"id":5482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13489:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":5464,"id":5483,"nodeType":"Return","src":"13482:20:15"}]},"documentation":{"id":5458,"nodeType":"StructuredDocumentation","src":"13015:276:15","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":5485,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13305:8:15","nodeType":"FunctionDefinition","parameters":{"id":5461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5460,"mutability":"mutable","name":"value","nameLocation":"13322:5:15","nodeType":"VariableDeclaration","scope":5485,"src":"13314:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5459,"name":"uint256","nodeType":"ElementaryTypeName","src":"13314:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13313:15:15"},"returnParameters":{"id":5464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5463,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5485,"src":"13352:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":5462,"name":"uint64","nodeType":"ElementaryTypeName","src":"13352:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13351:8:15"},"scope":6551,"src":"13296:213:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5512,"nodeType":"Block","src":"13860:149:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5493,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5488,"src":"13874:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5496,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13887:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":5495,"name":"uint56","nodeType":"ElementaryTypeName","src":"13887:6:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":5494,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13882:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13882:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":5498,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13895:3:15","memberName":"max","nodeType":"MemberAccess","src":"13882:16:15","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13874:24:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5506,"nodeType":"IfStatement","src":"13870:103:15","trueBody":{"id":5505,"nodeType":"Block","src":"13900:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":5501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13952:2:15","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":5502,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5488,"src":"13956:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5500,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4796,"src":"13921:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13921:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5504,"nodeType":"RevertStatement","src":"13914:48:15"}]}},{"expression":{"arguments":[{"id":5509,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5488,"src":"13996:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5508,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13989:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":5507,"name":"uint56","nodeType":"ElementaryTypeName","src":"13989:6:15","typeDescriptions":{}}},"id":5510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13989:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":5492,"id":5511,"nodeType":"Return","src":"13982:20:15"}]},"documentation":{"id":5486,"nodeType":"StructuredDocumentation","src":"13515:276:15","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":5513,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13805:8:15","nodeType":"FunctionDefinition","parameters":{"id":5489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5488,"mutability":"mutable","name":"value","nameLocation":"13822:5:15","nodeType":"VariableDeclaration","scope":5513,"src":"13814:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5487,"name":"uint256","nodeType":"ElementaryTypeName","src":"13814:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13813:15:15"},"returnParameters":{"id":5492,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5491,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5513,"src":"13852:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":5490,"name":"uint56","nodeType":"ElementaryTypeName","src":"13852:6:15","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13851:8:15"},"scope":6551,"src":"13796:213:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5540,"nodeType":"Block","src":"14360:149:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5521,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5516,"src":"14374:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5524,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14387:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":5523,"name":"uint48","nodeType":"ElementaryTypeName","src":"14387:6:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":5522,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14382:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5525,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14382:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":5526,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14395:3:15","memberName":"max","nodeType":"MemberAccess","src":"14382:16:15","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14374:24:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5534,"nodeType":"IfStatement","src":"14370:103:15","trueBody":{"id":5533,"nodeType":"Block","src":"14400:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":5529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14452:2:15","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":5530,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5516,"src":"14456:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5528,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4796,"src":"14421:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5531,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14421:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5532,"nodeType":"RevertStatement","src":"14414:48:15"}]}},{"expression":{"arguments":[{"id":5537,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5516,"src":"14496:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5536,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14489:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":5535,"name":"uint48","nodeType":"ElementaryTypeName","src":"14489:6:15","typeDescriptions":{}}},"id":5538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14489:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":5520,"id":5539,"nodeType":"Return","src":"14482:20:15"}]},"documentation":{"id":5514,"nodeType":"StructuredDocumentation","src":"14015:276:15","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":5541,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14305:8:15","nodeType":"FunctionDefinition","parameters":{"id":5517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5516,"mutability":"mutable","name":"value","nameLocation":"14322:5:15","nodeType":"VariableDeclaration","scope":5541,"src":"14314:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5515,"name":"uint256","nodeType":"ElementaryTypeName","src":"14314:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14313:15:15"},"returnParameters":{"id":5520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5519,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5541,"src":"14352:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":5518,"name":"uint48","nodeType":"ElementaryTypeName","src":"14352:6:15","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14351:8:15"},"scope":6551,"src":"14296:213:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5568,"nodeType":"Block","src":"14860:149:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5549,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5544,"src":"14874:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5552,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14887:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":5551,"name":"uint40","nodeType":"ElementaryTypeName","src":"14887:6:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":5550,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14882:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14882:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":5554,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14895:3:15","memberName":"max","nodeType":"MemberAccess","src":"14882:16:15","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14874:24:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5562,"nodeType":"IfStatement","src":"14870:103:15","trueBody":{"id":5561,"nodeType":"Block","src":"14900:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":5557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14952:2:15","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":5558,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5544,"src":"14956:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5556,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4796,"src":"14921:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5559,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14921:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5560,"nodeType":"RevertStatement","src":"14914:48:15"}]}},{"expression":{"arguments":[{"id":5565,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5544,"src":"14996:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5564,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14989:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":5563,"name":"uint40","nodeType":"ElementaryTypeName","src":"14989:6:15","typeDescriptions":{}}},"id":5566,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14989:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":5548,"id":5567,"nodeType":"Return","src":"14982:20:15"}]},"documentation":{"id":5542,"nodeType":"StructuredDocumentation","src":"14515:276:15","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":5569,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14805:8:15","nodeType":"FunctionDefinition","parameters":{"id":5545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5544,"mutability":"mutable","name":"value","nameLocation":"14822:5:15","nodeType":"VariableDeclaration","scope":5569,"src":"14814:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5543,"name":"uint256","nodeType":"ElementaryTypeName","src":"14814:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14813:15:15"},"returnParameters":{"id":5548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5547,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5569,"src":"14852:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":5546,"name":"uint40","nodeType":"ElementaryTypeName","src":"14852:6:15","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14851:8:15"},"scope":6551,"src":"14796:213:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5596,"nodeType":"Block","src":"15360:149:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5577,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5572,"src":"15374:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5580,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15387:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":5579,"name":"uint32","nodeType":"ElementaryTypeName","src":"15387:6:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":5578,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15382:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15382:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":5582,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15395:3:15","memberName":"max","nodeType":"MemberAccess","src":"15382:16:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15374:24:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5590,"nodeType":"IfStatement","src":"15370:103:15","trueBody":{"id":5589,"nodeType":"Block","src":"15400:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":5585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15452:2:15","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":5586,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5572,"src":"15456:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5584,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4796,"src":"15421:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15421:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5588,"nodeType":"RevertStatement","src":"15414:48:15"}]}},{"expression":{"arguments":[{"id":5593,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5572,"src":"15496:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5592,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15489:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":5591,"name":"uint32","nodeType":"ElementaryTypeName","src":"15489:6:15","typeDescriptions":{}}},"id":5594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15489:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":5576,"id":5595,"nodeType":"Return","src":"15482:20:15"}]},"documentation":{"id":5570,"nodeType":"StructuredDocumentation","src":"15015:276:15","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":5597,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15305:8:15","nodeType":"FunctionDefinition","parameters":{"id":5573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5572,"mutability":"mutable","name":"value","nameLocation":"15322:5:15","nodeType":"VariableDeclaration","scope":5597,"src":"15314:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5571,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15313:15:15"},"returnParameters":{"id":5576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5575,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5597,"src":"15352:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":5574,"name":"uint32","nodeType":"ElementaryTypeName","src":"15352:6:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15351:8:15"},"scope":6551,"src":"15296:213:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5624,"nodeType":"Block","src":"15860:149:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5605,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5600,"src":"15874:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5608,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15887:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":5607,"name":"uint24","nodeType":"ElementaryTypeName","src":"15887:6:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":5606,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15882:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15882:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":5610,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15895:3:15","memberName":"max","nodeType":"MemberAccess","src":"15882:16:15","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15874:24:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5618,"nodeType":"IfStatement","src":"15870:103:15","trueBody":{"id":5617,"nodeType":"Block","src":"15900:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":5613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15952:2:15","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":5614,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5600,"src":"15956:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5612,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4796,"src":"15921:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5615,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15921:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5616,"nodeType":"RevertStatement","src":"15914:48:15"}]}},{"expression":{"arguments":[{"id":5621,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5600,"src":"15996:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5620,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15989:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":5619,"name":"uint24","nodeType":"ElementaryTypeName","src":"15989:6:15","typeDescriptions":{}}},"id":5622,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15989:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":5604,"id":5623,"nodeType":"Return","src":"15982:20:15"}]},"documentation":{"id":5598,"nodeType":"StructuredDocumentation","src":"15515:276:15","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":5625,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15805:8:15","nodeType":"FunctionDefinition","parameters":{"id":5601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5600,"mutability":"mutable","name":"value","nameLocation":"15822:5:15","nodeType":"VariableDeclaration","scope":5625,"src":"15814:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5599,"name":"uint256","nodeType":"ElementaryTypeName","src":"15814:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15813:15:15"},"returnParameters":{"id":5604,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5603,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5625,"src":"15852:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":5602,"name":"uint24","nodeType":"ElementaryTypeName","src":"15852:6:15","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15851:8:15"},"scope":6551,"src":"15796:213:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5652,"nodeType":"Block","src":"16360:149:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5633,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5628,"src":"16374:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5636,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16387:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":5635,"name":"uint16","nodeType":"ElementaryTypeName","src":"16387:6:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":5634,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16382:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5637,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16382:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":5638,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16395:3:15","memberName":"max","nodeType":"MemberAccess","src":"16382:16:15","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16374:24:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5646,"nodeType":"IfStatement","src":"16370:103:15","trueBody":{"id":5645,"nodeType":"Block","src":"16400:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":5641,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16452:2:15","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":5642,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5628,"src":"16456:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5640,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4796,"src":"16421:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5643,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16421:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5644,"nodeType":"RevertStatement","src":"16414:48:15"}]}},{"expression":{"arguments":[{"id":5649,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5628,"src":"16496:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5648,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16489:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":5647,"name":"uint16","nodeType":"ElementaryTypeName","src":"16489:6:15","typeDescriptions":{}}},"id":5650,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16489:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":5632,"id":5651,"nodeType":"Return","src":"16482:20:15"}]},"documentation":{"id":5626,"nodeType":"StructuredDocumentation","src":"16015:276:15","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":5653,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16305:8:15","nodeType":"FunctionDefinition","parameters":{"id":5629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5628,"mutability":"mutable","name":"value","nameLocation":"16322:5:15","nodeType":"VariableDeclaration","scope":5653,"src":"16314:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5627,"name":"uint256","nodeType":"ElementaryTypeName","src":"16314:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16313:15:15"},"returnParameters":{"id":5632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5631,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5653,"src":"16352:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":5630,"name":"uint16","nodeType":"ElementaryTypeName","src":"16352:6:15","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16351:8:15"},"scope":6551,"src":"16296:213:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5680,"nodeType":"Block","src":"16854:146:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5661,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5656,"src":"16868:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5664,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16881:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5663,"name":"uint8","nodeType":"ElementaryTypeName","src":"16881:5:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":5662,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16876:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16876:11:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":5666,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16888:3:15","memberName":"max","nodeType":"MemberAccess","src":"16876:15:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16868:23:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5674,"nodeType":"IfStatement","src":"16864:101:15","trueBody":{"id":5673,"nodeType":"Block","src":"16893:72:15","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":5669,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16945:1:15","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":5670,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5656,"src":"16948:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5668,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4796,"src":"16914:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5671,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16914:40:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5672,"nodeType":"RevertStatement","src":"16907:47:15"}]}},{"expression":{"arguments":[{"id":5677,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5656,"src":"16987:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5676,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16981:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5675,"name":"uint8","nodeType":"ElementaryTypeName","src":"16981:5:15","typeDescriptions":{}}},"id":5678,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16981:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":5660,"id":5679,"nodeType":"Return","src":"16974:19:15"}]},"documentation":{"id":5654,"nodeType":"StructuredDocumentation","src":"16515:272:15","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":5681,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16801:7:15","nodeType":"FunctionDefinition","parameters":{"id":5657,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5656,"mutability":"mutable","name":"value","nameLocation":"16817:5:15","nodeType":"VariableDeclaration","scope":5681,"src":"16809:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5655,"name":"uint256","nodeType":"ElementaryTypeName","src":"16809:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16808:15:15"},"returnParameters":{"id":5660,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5659,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5681,"src":"16847:5:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5658,"name":"uint8","nodeType":"ElementaryTypeName","src":"16847:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16846:7:15"},"scope":6551,"src":"16792:208:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5703,"nodeType":"Block","src":"17236:128:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5689,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5684,"src":"17250:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":5690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17258:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17250:9:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5697,"nodeType":"IfStatement","src":"17246:81:15","trueBody":{"id":5696,"nodeType":"Block","src":"17261:66:15","statements":[{"errorCall":{"arguments":[{"id":5693,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5684,"src":"17310:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5692,"name":"SafeCastOverflowedIntToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4801,"src":"17282:27:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$_t_error_$","typeString":"function (int256) pure returns (error)"}},"id":5694,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17282:34:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5695,"nodeType":"RevertStatement","src":"17275:41:15"}]}},{"expression":{"arguments":[{"id":5700,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5684,"src":"17351:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5699,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17343:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5698,"name":"uint256","nodeType":"ElementaryTypeName","src":"17343:7:15","typeDescriptions":{}}},"id":5701,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17343:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5688,"id":5702,"nodeType":"Return","src":"17336:21:15"}]},"documentation":{"id":5682,"nodeType":"StructuredDocumentation","src":"17006:160:15","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."},"id":5704,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17180:9:15","nodeType":"FunctionDefinition","parameters":{"id":5685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5684,"mutability":"mutable","name":"value","nameLocation":"17197:5:15","nodeType":"VariableDeclaration","scope":5704,"src":"17190:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5683,"name":"int256","nodeType":"ElementaryTypeName","src":"17190:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17189:14:15"},"returnParameters":{"id":5688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5687,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5704,"src":"17227:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5686,"name":"uint256","nodeType":"ElementaryTypeName","src":"17227:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17226:9:15"},"scope":6551,"src":"17171:193:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5729,"nodeType":"Block","src":"17761:150:15","statements":[{"expression":{"id":5717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5712,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5710,"src":"17771:10:15","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5715,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5707,"src":"17791:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5714,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17784:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":5713,"name":"int248","nodeType":"ElementaryTypeName","src":"17784:6:15","typeDescriptions":{}}},"id":5716,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17784:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17771:26:15","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":5718,"nodeType":"ExpressionStatement","src":"17771:26:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5719,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5710,"src":"17811:10:15","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5720,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5707,"src":"17825:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17811:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5728,"nodeType":"IfStatement","src":"17807:98:15","trueBody":{"id":5727,"nodeType":"Block","src":"17832:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":5723,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17883:3:15","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":5724,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5707,"src":"17888:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5722,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4808,"src":"17853:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5725,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17853:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5726,"nodeType":"RevertStatement","src":"17846:48:15"}]}}]},"documentation":{"id":5705,"nodeType":"StructuredDocumentation","src":"17370:312:15","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":5730,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17696:8:15","nodeType":"FunctionDefinition","parameters":{"id":5708,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5707,"mutability":"mutable","name":"value","nameLocation":"17712:5:15","nodeType":"VariableDeclaration","scope":5730,"src":"17705:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5706,"name":"int256","nodeType":"ElementaryTypeName","src":"17705:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17704:14:15"},"returnParameters":{"id":5711,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5710,"mutability":"mutable","name":"downcasted","nameLocation":"17749:10:15","nodeType":"VariableDeclaration","scope":5730,"src":"17742:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":5709,"name":"int248","nodeType":"ElementaryTypeName","src":"17742:6:15","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17741:19:15"},"scope":6551,"src":"17687:224:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5755,"nodeType":"Block","src":"18308:150:15","statements":[{"expression":{"id":5743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5738,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5736,"src":"18318:10:15","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5741,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5733,"src":"18338:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5740,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18331:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":5739,"name":"int240","nodeType":"ElementaryTypeName","src":"18331:6:15","typeDescriptions":{}}},"id":5742,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18331:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18318:26:15","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":5744,"nodeType":"ExpressionStatement","src":"18318:26:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5745,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5736,"src":"18358:10:15","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5746,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5733,"src":"18372:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18358:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5754,"nodeType":"IfStatement","src":"18354:98:15","trueBody":{"id":5753,"nodeType":"Block","src":"18379:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":5749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18430:3:15","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":5750,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5733,"src":"18435:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5748,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4808,"src":"18400:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5751,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18400:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5752,"nodeType":"RevertStatement","src":"18393:48:15"}]}}]},"documentation":{"id":5731,"nodeType":"StructuredDocumentation","src":"17917:312:15","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":5756,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18243:8:15","nodeType":"FunctionDefinition","parameters":{"id":5734,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5733,"mutability":"mutable","name":"value","nameLocation":"18259:5:15","nodeType":"VariableDeclaration","scope":5756,"src":"18252:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5732,"name":"int256","nodeType":"ElementaryTypeName","src":"18252:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18251:14:15"},"returnParameters":{"id":5737,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5736,"mutability":"mutable","name":"downcasted","nameLocation":"18296:10:15","nodeType":"VariableDeclaration","scope":5756,"src":"18289:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":5735,"name":"int240","nodeType":"ElementaryTypeName","src":"18289:6:15","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18288:19:15"},"scope":6551,"src":"18234:224:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5781,"nodeType":"Block","src":"18855:150:15","statements":[{"expression":{"id":5769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5764,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5762,"src":"18865:10:15","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5767,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5759,"src":"18885:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5766,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18878:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":5765,"name":"int232","nodeType":"ElementaryTypeName","src":"18878:6:15","typeDescriptions":{}}},"id":5768,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18878:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18865:26:15","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":5770,"nodeType":"ExpressionStatement","src":"18865:26:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5771,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5762,"src":"18905:10:15","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5772,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5759,"src":"18919:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18905:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5780,"nodeType":"IfStatement","src":"18901:98:15","trueBody":{"id":5779,"nodeType":"Block","src":"18926:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":5775,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18977:3:15","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":5776,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5759,"src":"18982:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5774,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4808,"src":"18947:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5777,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18947:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5778,"nodeType":"RevertStatement","src":"18940:48:15"}]}}]},"documentation":{"id":5757,"nodeType":"StructuredDocumentation","src":"18464:312:15","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":5782,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18790:8:15","nodeType":"FunctionDefinition","parameters":{"id":5760,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5759,"mutability":"mutable","name":"value","nameLocation":"18806:5:15","nodeType":"VariableDeclaration","scope":5782,"src":"18799:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5758,"name":"int256","nodeType":"ElementaryTypeName","src":"18799:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18798:14:15"},"returnParameters":{"id":5763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5762,"mutability":"mutable","name":"downcasted","nameLocation":"18843:10:15","nodeType":"VariableDeclaration","scope":5782,"src":"18836:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":5761,"name":"int232","nodeType":"ElementaryTypeName","src":"18836:6:15","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18835:19:15"},"scope":6551,"src":"18781:224:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5807,"nodeType":"Block","src":"19402:150:15","statements":[{"expression":{"id":5795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5790,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5788,"src":"19412:10:15","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5793,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5785,"src":"19432:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5792,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19425:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":5791,"name":"int224","nodeType":"ElementaryTypeName","src":"19425:6:15","typeDescriptions":{}}},"id":5794,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19425:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19412:26:15","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":5796,"nodeType":"ExpressionStatement","src":"19412:26:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5797,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5788,"src":"19452:10:15","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5798,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5785,"src":"19466:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19452:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5806,"nodeType":"IfStatement","src":"19448:98:15","trueBody":{"id":5805,"nodeType":"Block","src":"19473:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":5801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19524:3:15","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":5802,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5785,"src":"19529:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5800,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4808,"src":"19494:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5803,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19494:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5804,"nodeType":"RevertStatement","src":"19487:48:15"}]}}]},"documentation":{"id":5783,"nodeType":"StructuredDocumentation","src":"19011:312:15","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":5808,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19337:8:15","nodeType":"FunctionDefinition","parameters":{"id":5786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5785,"mutability":"mutable","name":"value","nameLocation":"19353:5:15","nodeType":"VariableDeclaration","scope":5808,"src":"19346:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5784,"name":"int256","nodeType":"ElementaryTypeName","src":"19346:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19345:14:15"},"returnParameters":{"id":5789,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5788,"mutability":"mutable","name":"downcasted","nameLocation":"19390:10:15","nodeType":"VariableDeclaration","scope":5808,"src":"19383:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":5787,"name":"int224","nodeType":"ElementaryTypeName","src":"19383:6:15","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19382:19:15"},"scope":6551,"src":"19328:224:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5833,"nodeType":"Block","src":"19949:150:15","statements":[{"expression":{"id":5821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5816,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5814,"src":"19959:10:15","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5819,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5811,"src":"19979:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5818,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19972:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":5817,"name":"int216","nodeType":"ElementaryTypeName","src":"19972:6:15","typeDescriptions":{}}},"id":5820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19972:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"19959:26:15","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":5822,"nodeType":"ExpressionStatement","src":"19959:26:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5823,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5814,"src":"19999:10:15","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5824,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5811,"src":"20013:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19999:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5832,"nodeType":"IfStatement","src":"19995:98:15","trueBody":{"id":5831,"nodeType":"Block","src":"20020:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":5827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20071:3:15","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":5828,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5811,"src":"20076:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5826,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4808,"src":"20041:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5829,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20041:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5830,"nodeType":"RevertStatement","src":"20034:48:15"}]}}]},"documentation":{"id":5809,"nodeType":"StructuredDocumentation","src":"19558:312:15","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":5834,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19884:8:15","nodeType":"FunctionDefinition","parameters":{"id":5812,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5811,"mutability":"mutable","name":"value","nameLocation":"19900:5:15","nodeType":"VariableDeclaration","scope":5834,"src":"19893:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5810,"name":"int256","nodeType":"ElementaryTypeName","src":"19893:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19892:14:15"},"returnParameters":{"id":5815,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5814,"mutability":"mutable","name":"downcasted","nameLocation":"19937:10:15","nodeType":"VariableDeclaration","scope":5834,"src":"19930:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":5813,"name":"int216","nodeType":"ElementaryTypeName","src":"19930:6:15","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"19929:19:15"},"scope":6551,"src":"19875:224:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5859,"nodeType":"Block","src":"20496:150:15","statements":[{"expression":{"id":5847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5842,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5840,"src":"20506:10:15","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5845,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5837,"src":"20526:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5844,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20519:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":5843,"name":"int208","nodeType":"ElementaryTypeName","src":"20519:6:15","typeDescriptions":{}}},"id":5846,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20519:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20506:26:15","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":5848,"nodeType":"ExpressionStatement","src":"20506:26:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5849,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5840,"src":"20546:10:15","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5850,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5837,"src":"20560:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20546:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5858,"nodeType":"IfStatement","src":"20542:98:15","trueBody":{"id":5857,"nodeType":"Block","src":"20567:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":5853,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20618:3:15","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":5854,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5837,"src":"20623:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5852,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4808,"src":"20588:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5855,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20588:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5856,"nodeType":"RevertStatement","src":"20581:48:15"}]}}]},"documentation":{"id":5835,"nodeType":"StructuredDocumentation","src":"20105:312:15","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":5860,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20431:8:15","nodeType":"FunctionDefinition","parameters":{"id":5838,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5837,"mutability":"mutable","name":"value","nameLocation":"20447:5:15","nodeType":"VariableDeclaration","scope":5860,"src":"20440:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5836,"name":"int256","nodeType":"ElementaryTypeName","src":"20440:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20439:14:15"},"returnParameters":{"id":5841,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5840,"mutability":"mutable","name":"downcasted","nameLocation":"20484:10:15","nodeType":"VariableDeclaration","scope":5860,"src":"20477:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":5839,"name":"int208","nodeType":"ElementaryTypeName","src":"20477:6:15","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20476:19:15"},"scope":6551,"src":"20422:224:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5885,"nodeType":"Block","src":"21043:150:15","statements":[{"expression":{"id":5873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5868,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5866,"src":"21053:10:15","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5871,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5863,"src":"21073:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5870,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21066:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":5869,"name":"int200","nodeType":"ElementaryTypeName","src":"21066:6:15","typeDescriptions":{}}},"id":5872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21066:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21053:26:15","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":5874,"nodeType":"ExpressionStatement","src":"21053:26:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5875,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5866,"src":"21093:10:15","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5876,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5863,"src":"21107:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21093:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5884,"nodeType":"IfStatement","src":"21089:98:15","trueBody":{"id":5883,"nodeType":"Block","src":"21114:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":5879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21165:3:15","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":5880,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5863,"src":"21170:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5878,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4808,"src":"21135:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5881,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21135:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5882,"nodeType":"RevertStatement","src":"21128:48:15"}]}}]},"documentation":{"id":5861,"nodeType":"StructuredDocumentation","src":"20652:312:15","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":5886,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"20978:8:15","nodeType":"FunctionDefinition","parameters":{"id":5864,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5863,"mutability":"mutable","name":"value","nameLocation":"20994:5:15","nodeType":"VariableDeclaration","scope":5886,"src":"20987:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5862,"name":"int256","nodeType":"ElementaryTypeName","src":"20987:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20986:14:15"},"returnParameters":{"id":5867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5866,"mutability":"mutable","name":"downcasted","nameLocation":"21031:10:15","nodeType":"VariableDeclaration","scope":5886,"src":"21024:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":5865,"name":"int200","nodeType":"ElementaryTypeName","src":"21024:6:15","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21023:19:15"},"scope":6551,"src":"20969:224:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5911,"nodeType":"Block","src":"21590:150:15","statements":[{"expression":{"id":5899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5894,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5892,"src":"21600:10:15","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5897,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5889,"src":"21620:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5896,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21613:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":5895,"name":"int192","nodeType":"ElementaryTypeName","src":"21613:6:15","typeDescriptions":{}}},"id":5898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21613:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21600:26:15","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":5900,"nodeType":"ExpressionStatement","src":"21600:26:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5901,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5892,"src":"21640:10:15","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5902,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5889,"src":"21654:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21640:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5910,"nodeType":"IfStatement","src":"21636:98:15","trueBody":{"id":5909,"nodeType":"Block","src":"21661:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":5905,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21712:3:15","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":5906,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5889,"src":"21717:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5904,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4808,"src":"21682:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5907,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21682:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5908,"nodeType":"RevertStatement","src":"21675:48:15"}]}}]},"documentation":{"id":5887,"nodeType":"StructuredDocumentation","src":"21199:312:15","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":5912,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21525:8:15","nodeType":"FunctionDefinition","parameters":{"id":5890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5889,"mutability":"mutable","name":"value","nameLocation":"21541:5:15","nodeType":"VariableDeclaration","scope":5912,"src":"21534:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5888,"name":"int256","nodeType":"ElementaryTypeName","src":"21534:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21533:14:15"},"returnParameters":{"id":5893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5892,"mutability":"mutable","name":"downcasted","nameLocation":"21578:10:15","nodeType":"VariableDeclaration","scope":5912,"src":"21571:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":5891,"name":"int192","nodeType":"ElementaryTypeName","src":"21571:6:15","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21570:19:15"},"scope":6551,"src":"21516:224:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5937,"nodeType":"Block","src":"22137:150:15","statements":[{"expression":{"id":5925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5920,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5918,"src":"22147:10:15","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5923,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5915,"src":"22167:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5922,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22160:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":5921,"name":"int184","nodeType":"ElementaryTypeName","src":"22160:6:15","typeDescriptions":{}}},"id":5924,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22160:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22147:26:15","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":5926,"nodeType":"ExpressionStatement","src":"22147:26:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5927,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5918,"src":"22187:10:15","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5928,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5915,"src":"22201:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22187:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5936,"nodeType":"IfStatement","src":"22183:98:15","trueBody":{"id":5935,"nodeType":"Block","src":"22208:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":5931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22259:3:15","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":5932,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5915,"src":"22264:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5930,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4808,"src":"22229:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5933,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22229:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5934,"nodeType":"RevertStatement","src":"22222:48:15"}]}}]},"documentation":{"id":5913,"nodeType":"StructuredDocumentation","src":"21746:312:15","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":5938,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22072:8:15","nodeType":"FunctionDefinition","parameters":{"id":5916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5915,"mutability":"mutable","name":"value","nameLocation":"22088:5:15","nodeType":"VariableDeclaration","scope":5938,"src":"22081:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5914,"name":"int256","nodeType":"ElementaryTypeName","src":"22081:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22080:14:15"},"returnParameters":{"id":5919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5918,"mutability":"mutable","name":"downcasted","nameLocation":"22125:10:15","nodeType":"VariableDeclaration","scope":5938,"src":"22118:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":5917,"name":"int184","nodeType":"ElementaryTypeName","src":"22118:6:15","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22117:19:15"},"scope":6551,"src":"22063:224:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5963,"nodeType":"Block","src":"22684:150:15","statements":[{"expression":{"id":5951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5946,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5944,"src":"22694:10:15","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5949,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5941,"src":"22714:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5948,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22707:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":5947,"name":"int176","nodeType":"ElementaryTypeName","src":"22707:6:15","typeDescriptions":{}}},"id":5950,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22707:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22694:26:15","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":5952,"nodeType":"ExpressionStatement","src":"22694:26:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5953,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5944,"src":"22734:10:15","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5954,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5941,"src":"22748:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22734:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5962,"nodeType":"IfStatement","src":"22730:98:15","trueBody":{"id":5961,"nodeType":"Block","src":"22755:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":5957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22806:3:15","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":5958,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5941,"src":"22811:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5956,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4808,"src":"22776:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5959,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22776:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5960,"nodeType":"RevertStatement","src":"22769:48:15"}]}}]},"documentation":{"id":5939,"nodeType":"StructuredDocumentation","src":"22293:312:15","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":5964,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22619:8:15","nodeType":"FunctionDefinition","parameters":{"id":5942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5941,"mutability":"mutable","name":"value","nameLocation":"22635:5:15","nodeType":"VariableDeclaration","scope":5964,"src":"22628:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5940,"name":"int256","nodeType":"ElementaryTypeName","src":"22628:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22627:14:15"},"returnParameters":{"id":5945,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5944,"mutability":"mutable","name":"downcasted","nameLocation":"22672:10:15","nodeType":"VariableDeclaration","scope":5964,"src":"22665:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":5943,"name":"int176","nodeType":"ElementaryTypeName","src":"22665:6:15","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22664:19:15"},"scope":6551,"src":"22610:224:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5989,"nodeType":"Block","src":"23231:150:15","statements":[{"expression":{"id":5977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5972,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5970,"src":"23241:10:15","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5975,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5967,"src":"23261:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5974,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23254:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":5973,"name":"int168","nodeType":"ElementaryTypeName","src":"23254:6:15","typeDescriptions":{}}},"id":5976,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23254:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23241:26:15","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":5978,"nodeType":"ExpressionStatement","src":"23241:26:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5979,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5970,"src":"23281:10:15","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5980,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5967,"src":"23295:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23281:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5988,"nodeType":"IfStatement","src":"23277:98:15","trueBody":{"id":5987,"nodeType":"Block","src":"23302:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":5983,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23353:3:15","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":5984,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5967,"src":"23358:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5982,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4808,"src":"23323:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5985,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23323:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5986,"nodeType":"RevertStatement","src":"23316:48:15"}]}}]},"documentation":{"id":5965,"nodeType":"StructuredDocumentation","src":"22840:312:15","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":5990,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23166:8:15","nodeType":"FunctionDefinition","parameters":{"id":5968,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5967,"mutability":"mutable","name":"value","nameLocation":"23182:5:15","nodeType":"VariableDeclaration","scope":5990,"src":"23175:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5966,"name":"int256","nodeType":"ElementaryTypeName","src":"23175:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23174:14:15"},"returnParameters":{"id":5971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5970,"mutability":"mutable","name":"downcasted","nameLocation":"23219:10:15","nodeType":"VariableDeclaration","scope":5990,"src":"23212:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":5969,"name":"int168","nodeType":"ElementaryTypeName","src":"23212:6:15","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23211:19:15"},"scope":6551,"src":"23157:224:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6015,"nodeType":"Block","src":"23778:150:15","statements":[{"expression":{"id":6003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5998,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5996,"src":"23788:10:15","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6001,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5993,"src":"23808:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6000,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23801:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":5999,"name":"int160","nodeType":"ElementaryTypeName","src":"23801:6:15","typeDescriptions":{}}},"id":6002,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23801:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23788:26:15","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":6004,"nodeType":"ExpressionStatement","src":"23788:26:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6005,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5996,"src":"23828:10:15","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6006,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5993,"src":"23842:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23828:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6014,"nodeType":"IfStatement","src":"23824:98:15","trueBody":{"id":6013,"nodeType":"Block","src":"23849:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":6009,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23900:3:15","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":6010,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5993,"src":"23905:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6008,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4808,"src":"23870:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6011,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23870:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6012,"nodeType":"RevertStatement","src":"23863:48:15"}]}}]},"documentation":{"id":5991,"nodeType":"StructuredDocumentation","src":"23387:312:15","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":6016,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23713:8:15","nodeType":"FunctionDefinition","parameters":{"id":5994,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5993,"mutability":"mutable","name":"value","nameLocation":"23729:5:15","nodeType":"VariableDeclaration","scope":6016,"src":"23722:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5992,"name":"int256","nodeType":"ElementaryTypeName","src":"23722:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23721:14:15"},"returnParameters":{"id":5997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5996,"mutability":"mutable","name":"downcasted","nameLocation":"23766:10:15","nodeType":"VariableDeclaration","scope":6016,"src":"23759:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":5995,"name":"int160","nodeType":"ElementaryTypeName","src":"23759:6:15","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23758:19:15"},"scope":6551,"src":"23704:224:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6041,"nodeType":"Block","src":"24325:150:15","statements":[{"expression":{"id":6029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6024,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6022,"src":"24335:10:15","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6027,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6019,"src":"24355:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6026,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24348:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":6025,"name":"int152","nodeType":"ElementaryTypeName","src":"24348:6:15","typeDescriptions":{}}},"id":6028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24348:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24335:26:15","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":6030,"nodeType":"ExpressionStatement","src":"24335:26:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6031,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6022,"src":"24375:10:15","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6032,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6019,"src":"24389:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24375:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6040,"nodeType":"IfStatement","src":"24371:98:15","trueBody":{"id":6039,"nodeType":"Block","src":"24396:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":6035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24447:3:15","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":6036,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6019,"src":"24452:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6034,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4808,"src":"24417:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6037,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24417:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6038,"nodeType":"RevertStatement","src":"24410:48:15"}]}}]},"documentation":{"id":6017,"nodeType":"StructuredDocumentation","src":"23934:312:15","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":6042,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24260:8:15","nodeType":"FunctionDefinition","parameters":{"id":6020,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6019,"mutability":"mutable","name":"value","nameLocation":"24276:5:15","nodeType":"VariableDeclaration","scope":6042,"src":"24269:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6018,"name":"int256","nodeType":"ElementaryTypeName","src":"24269:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24268:14:15"},"returnParameters":{"id":6023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6022,"mutability":"mutable","name":"downcasted","nameLocation":"24313:10:15","nodeType":"VariableDeclaration","scope":6042,"src":"24306:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":6021,"name":"int152","nodeType":"ElementaryTypeName","src":"24306:6:15","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24305:19:15"},"scope":6551,"src":"24251:224:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6067,"nodeType":"Block","src":"24872:150:15","statements":[{"expression":{"id":6055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6050,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6048,"src":"24882:10:15","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6053,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6045,"src":"24902:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6052,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24895:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":6051,"name":"int144","nodeType":"ElementaryTypeName","src":"24895:6:15","typeDescriptions":{}}},"id":6054,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24895:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"24882:26:15","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":6056,"nodeType":"ExpressionStatement","src":"24882:26:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6057,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6048,"src":"24922:10:15","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6058,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6045,"src":"24936:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24922:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6066,"nodeType":"IfStatement","src":"24918:98:15","trueBody":{"id":6065,"nodeType":"Block","src":"24943:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":6061,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24994:3:15","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":6062,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6045,"src":"24999:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6060,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4808,"src":"24964:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6063,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24964:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6064,"nodeType":"RevertStatement","src":"24957:48:15"}]}}]},"documentation":{"id":6043,"nodeType":"StructuredDocumentation","src":"24481:312:15","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":6068,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24807:8:15","nodeType":"FunctionDefinition","parameters":{"id":6046,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6045,"mutability":"mutable","name":"value","nameLocation":"24823:5:15","nodeType":"VariableDeclaration","scope":6068,"src":"24816:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6044,"name":"int256","nodeType":"ElementaryTypeName","src":"24816:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24815:14:15"},"returnParameters":{"id":6049,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6048,"mutability":"mutable","name":"downcasted","nameLocation":"24860:10:15","nodeType":"VariableDeclaration","scope":6068,"src":"24853:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":6047,"name":"int144","nodeType":"ElementaryTypeName","src":"24853:6:15","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"24852:19:15"},"scope":6551,"src":"24798:224:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6093,"nodeType":"Block","src":"25419:150:15","statements":[{"expression":{"id":6081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6076,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6074,"src":"25429:10:15","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6079,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6071,"src":"25449:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6078,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25442:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":6077,"name":"int136","nodeType":"ElementaryTypeName","src":"25442:6:15","typeDescriptions":{}}},"id":6080,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25442:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25429:26:15","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":6082,"nodeType":"ExpressionStatement","src":"25429:26:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6083,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6074,"src":"25469:10:15","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6084,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6071,"src":"25483:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25469:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6092,"nodeType":"IfStatement","src":"25465:98:15","trueBody":{"id":6091,"nodeType":"Block","src":"25490:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":6087,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25541:3:15","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":6088,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6071,"src":"25546:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6086,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4808,"src":"25511:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6089,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25511:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6090,"nodeType":"RevertStatement","src":"25504:48:15"}]}}]},"documentation":{"id":6069,"nodeType":"StructuredDocumentation","src":"25028:312:15","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":6094,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25354:8:15","nodeType":"FunctionDefinition","parameters":{"id":6072,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6071,"mutability":"mutable","name":"value","nameLocation":"25370:5:15","nodeType":"VariableDeclaration","scope":6094,"src":"25363:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6070,"name":"int256","nodeType":"ElementaryTypeName","src":"25363:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25362:14:15"},"returnParameters":{"id":6075,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6074,"mutability":"mutable","name":"downcasted","nameLocation":"25407:10:15","nodeType":"VariableDeclaration","scope":6094,"src":"25400:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":6073,"name":"int136","nodeType":"ElementaryTypeName","src":"25400:6:15","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25399:19:15"},"scope":6551,"src":"25345:224:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6119,"nodeType":"Block","src":"25966:150:15","statements":[{"expression":{"id":6107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6102,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6100,"src":"25976:10:15","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6105,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6097,"src":"25996:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6104,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25989:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":6103,"name":"int128","nodeType":"ElementaryTypeName","src":"25989:6:15","typeDescriptions":{}}},"id":6106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25989:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"25976:26:15","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":6108,"nodeType":"ExpressionStatement","src":"25976:26:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6109,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6100,"src":"26016:10:15","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6110,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6097,"src":"26030:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26016:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6118,"nodeType":"IfStatement","src":"26012:98:15","trueBody":{"id":6117,"nodeType":"Block","src":"26037:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":6113,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26088:3:15","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":6114,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6097,"src":"26093:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6112,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4808,"src":"26058:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6115,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26058:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6116,"nodeType":"RevertStatement","src":"26051:48:15"}]}}]},"documentation":{"id":6095,"nodeType":"StructuredDocumentation","src":"25575:312:15","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":6120,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"25901:8:15","nodeType":"FunctionDefinition","parameters":{"id":6098,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6097,"mutability":"mutable","name":"value","nameLocation":"25917:5:15","nodeType":"VariableDeclaration","scope":6120,"src":"25910:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6096,"name":"int256","nodeType":"ElementaryTypeName","src":"25910:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25909:14:15"},"returnParameters":{"id":6101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6100,"mutability":"mutable","name":"downcasted","nameLocation":"25954:10:15","nodeType":"VariableDeclaration","scope":6120,"src":"25947:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":6099,"name":"int128","nodeType":"ElementaryTypeName","src":"25947:6:15","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"25946:19:15"},"scope":6551,"src":"25892:224:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6145,"nodeType":"Block","src":"26513:150:15","statements":[{"expression":{"id":6133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6128,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6126,"src":"26523:10:15","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6131,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6123,"src":"26543:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6130,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26536:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":6129,"name":"int120","nodeType":"ElementaryTypeName","src":"26536:6:15","typeDescriptions":{}}},"id":6132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26536:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26523:26:15","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":6134,"nodeType":"ExpressionStatement","src":"26523:26:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6135,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6126,"src":"26563:10:15","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6136,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6123,"src":"26577:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26563:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6144,"nodeType":"IfStatement","src":"26559:98:15","trueBody":{"id":6143,"nodeType":"Block","src":"26584:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":6139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26635:3:15","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":6140,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6123,"src":"26640:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6138,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4808,"src":"26605:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6141,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26605:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6142,"nodeType":"RevertStatement","src":"26598:48:15"}]}}]},"documentation":{"id":6121,"nodeType":"StructuredDocumentation","src":"26122:312:15","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":6146,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26448:8:15","nodeType":"FunctionDefinition","parameters":{"id":6124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6123,"mutability":"mutable","name":"value","nameLocation":"26464:5:15","nodeType":"VariableDeclaration","scope":6146,"src":"26457:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6122,"name":"int256","nodeType":"ElementaryTypeName","src":"26457:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26456:14:15"},"returnParameters":{"id":6127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6126,"mutability":"mutable","name":"downcasted","nameLocation":"26501:10:15","nodeType":"VariableDeclaration","scope":6146,"src":"26494:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":6125,"name":"int120","nodeType":"ElementaryTypeName","src":"26494:6:15","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26493:19:15"},"scope":6551,"src":"26439:224:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6171,"nodeType":"Block","src":"27060:150:15","statements":[{"expression":{"id":6159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6154,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6152,"src":"27070:10:15","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6157,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6149,"src":"27090:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6156,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27083:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":6155,"name":"int112","nodeType":"ElementaryTypeName","src":"27083:6:15","typeDescriptions":{}}},"id":6158,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27083:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27070:26:15","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":6160,"nodeType":"ExpressionStatement","src":"27070:26:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6161,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6152,"src":"27110:10:15","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6162,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6149,"src":"27124:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27110:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6170,"nodeType":"IfStatement","src":"27106:98:15","trueBody":{"id":6169,"nodeType":"Block","src":"27131:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":6165,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27182:3:15","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":6166,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6149,"src":"27187:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6164,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4808,"src":"27152:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27152:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6168,"nodeType":"RevertStatement","src":"27145:48:15"}]}}]},"documentation":{"id":6147,"nodeType":"StructuredDocumentation","src":"26669:312:15","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":6172,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"26995:8:15","nodeType":"FunctionDefinition","parameters":{"id":6150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6149,"mutability":"mutable","name":"value","nameLocation":"27011:5:15","nodeType":"VariableDeclaration","scope":6172,"src":"27004:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6148,"name":"int256","nodeType":"ElementaryTypeName","src":"27004:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27003:14:15"},"returnParameters":{"id":6153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6152,"mutability":"mutable","name":"downcasted","nameLocation":"27048:10:15","nodeType":"VariableDeclaration","scope":6172,"src":"27041:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":6151,"name":"int112","nodeType":"ElementaryTypeName","src":"27041:6:15","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27040:19:15"},"scope":6551,"src":"26986:224:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6197,"nodeType":"Block","src":"27607:150:15","statements":[{"expression":{"id":6185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6180,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6178,"src":"27617:10:15","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6183,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6175,"src":"27637:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6182,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27630:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":6181,"name":"int104","nodeType":"ElementaryTypeName","src":"27630:6:15","typeDescriptions":{}}},"id":6184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27630:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27617:26:15","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":6186,"nodeType":"ExpressionStatement","src":"27617:26:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6187,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6178,"src":"27657:10:15","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6188,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6175,"src":"27671:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27657:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6196,"nodeType":"IfStatement","src":"27653:98:15","trueBody":{"id":6195,"nodeType":"Block","src":"27678:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":6191,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27729:3:15","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":6192,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6175,"src":"27734:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6190,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4808,"src":"27699:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6193,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27699:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6194,"nodeType":"RevertStatement","src":"27692:48:15"}]}}]},"documentation":{"id":6173,"nodeType":"StructuredDocumentation","src":"27216:312:15","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":6198,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27542:8:15","nodeType":"FunctionDefinition","parameters":{"id":6176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6175,"mutability":"mutable","name":"value","nameLocation":"27558:5:15","nodeType":"VariableDeclaration","scope":6198,"src":"27551:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6174,"name":"int256","nodeType":"ElementaryTypeName","src":"27551:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27550:14:15"},"returnParameters":{"id":6179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6178,"mutability":"mutable","name":"downcasted","nameLocation":"27595:10:15","nodeType":"VariableDeclaration","scope":6198,"src":"27588:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":6177,"name":"int104","nodeType":"ElementaryTypeName","src":"27588:6:15","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27587:19:15"},"scope":6551,"src":"27533:224:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6223,"nodeType":"Block","src":"28147:148:15","statements":[{"expression":{"id":6211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6206,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6204,"src":"28157:10:15","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6209,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6201,"src":"28176:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6208,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28170:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":6207,"name":"int96","nodeType":"ElementaryTypeName","src":"28170:5:15","typeDescriptions":{}}},"id":6210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28170:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28157:25:15","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":6212,"nodeType":"ExpressionStatement","src":"28157:25:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6213,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6204,"src":"28196:10:15","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6214,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6201,"src":"28210:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28196:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6222,"nodeType":"IfStatement","src":"28192:97:15","trueBody":{"id":6221,"nodeType":"Block","src":"28217:72:15","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":6217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28268:2:15","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":6218,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6201,"src":"28272:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6216,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4808,"src":"28238:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28238:40:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6220,"nodeType":"RevertStatement","src":"28231:47:15"}]}}]},"documentation":{"id":6199,"nodeType":"StructuredDocumentation","src":"27763:307:15","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":6224,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28084:7:15","nodeType":"FunctionDefinition","parameters":{"id":6202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6201,"mutability":"mutable","name":"value","nameLocation":"28099:5:15","nodeType":"VariableDeclaration","scope":6224,"src":"28092:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6200,"name":"int256","nodeType":"ElementaryTypeName","src":"28092:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28091:14:15"},"returnParameters":{"id":6205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6204,"mutability":"mutable","name":"downcasted","nameLocation":"28135:10:15","nodeType":"VariableDeclaration","scope":6224,"src":"28129:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":6203,"name":"int96","nodeType":"ElementaryTypeName","src":"28129:5:15","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28128:18:15"},"scope":6551,"src":"28075:220:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6249,"nodeType":"Block","src":"28685:148:15","statements":[{"expression":{"id":6237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6232,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6230,"src":"28695:10:15","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6235,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6227,"src":"28714:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6234,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28708:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":6233,"name":"int88","nodeType":"ElementaryTypeName","src":"28708:5:15","typeDescriptions":{}}},"id":6236,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28708:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28695:25:15","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":6238,"nodeType":"ExpressionStatement","src":"28695:25:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6239,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6230,"src":"28734:10:15","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6240,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6227,"src":"28748:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28734:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6248,"nodeType":"IfStatement","src":"28730:97:15","trueBody":{"id":6247,"nodeType":"Block","src":"28755:72:15","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":6243,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28806:2:15","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":6244,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6227,"src":"28810:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6242,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4808,"src":"28776:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28776:40:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6246,"nodeType":"RevertStatement","src":"28769:47:15"}]}}]},"documentation":{"id":6225,"nodeType":"StructuredDocumentation","src":"28301:307:15","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":6250,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28622:7:15","nodeType":"FunctionDefinition","parameters":{"id":6228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6227,"mutability":"mutable","name":"value","nameLocation":"28637:5:15","nodeType":"VariableDeclaration","scope":6250,"src":"28630:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6226,"name":"int256","nodeType":"ElementaryTypeName","src":"28630:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28629:14:15"},"returnParameters":{"id":6231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6230,"mutability":"mutable","name":"downcasted","nameLocation":"28673:10:15","nodeType":"VariableDeclaration","scope":6250,"src":"28667:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":6229,"name":"int88","nodeType":"ElementaryTypeName","src":"28667:5:15","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28666:18:15"},"scope":6551,"src":"28613:220:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6275,"nodeType":"Block","src":"29223:148:15","statements":[{"expression":{"id":6263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6258,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6256,"src":"29233:10:15","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6261,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6253,"src":"29252:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6260,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29246:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":6259,"name":"int80","nodeType":"ElementaryTypeName","src":"29246:5:15","typeDescriptions":{}}},"id":6262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29246:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29233:25:15","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":6264,"nodeType":"ExpressionStatement","src":"29233:25:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6265,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6256,"src":"29272:10:15","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6266,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6253,"src":"29286:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29272:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6274,"nodeType":"IfStatement","src":"29268:97:15","trueBody":{"id":6273,"nodeType":"Block","src":"29293:72:15","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":6269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29344:2:15","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":6270,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6253,"src":"29348:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6268,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4808,"src":"29314:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6271,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29314:40:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6272,"nodeType":"RevertStatement","src":"29307:47:15"}]}}]},"documentation":{"id":6251,"nodeType":"StructuredDocumentation","src":"28839:307:15","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":6276,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29160:7:15","nodeType":"FunctionDefinition","parameters":{"id":6254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6253,"mutability":"mutable","name":"value","nameLocation":"29175:5:15","nodeType":"VariableDeclaration","scope":6276,"src":"29168:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6252,"name":"int256","nodeType":"ElementaryTypeName","src":"29168:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29167:14:15"},"returnParameters":{"id":6257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6256,"mutability":"mutable","name":"downcasted","nameLocation":"29211:10:15","nodeType":"VariableDeclaration","scope":6276,"src":"29205:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":6255,"name":"int80","nodeType":"ElementaryTypeName","src":"29205:5:15","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29204:18:15"},"scope":6551,"src":"29151:220:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6301,"nodeType":"Block","src":"29761:148:15","statements":[{"expression":{"id":6289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6284,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6282,"src":"29771:10:15","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6287,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6279,"src":"29790:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6286,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29784:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":6285,"name":"int72","nodeType":"ElementaryTypeName","src":"29784:5:15","typeDescriptions":{}}},"id":6288,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29784:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"29771:25:15","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":6290,"nodeType":"ExpressionStatement","src":"29771:25:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6291,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6282,"src":"29810:10:15","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6292,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6279,"src":"29824:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29810:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6300,"nodeType":"IfStatement","src":"29806:97:15","trueBody":{"id":6299,"nodeType":"Block","src":"29831:72:15","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":6295,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29882:2:15","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":6296,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6279,"src":"29886:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6294,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4808,"src":"29852:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29852:40:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6298,"nodeType":"RevertStatement","src":"29845:47:15"}]}}]},"documentation":{"id":6277,"nodeType":"StructuredDocumentation","src":"29377:307:15","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":6302,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29698:7:15","nodeType":"FunctionDefinition","parameters":{"id":6280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6279,"mutability":"mutable","name":"value","nameLocation":"29713:5:15","nodeType":"VariableDeclaration","scope":6302,"src":"29706:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6278,"name":"int256","nodeType":"ElementaryTypeName","src":"29706:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29705:14:15"},"returnParameters":{"id":6283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6282,"mutability":"mutable","name":"downcasted","nameLocation":"29749:10:15","nodeType":"VariableDeclaration","scope":6302,"src":"29743:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":6281,"name":"int72","nodeType":"ElementaryTypeName","src":"29743:5:15","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"29742:18:15"},"scope":6551,"src":"29689:220:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6327,"nodeType":"Block","src":"30299:148:15","statements":[{"expression":{"id":6315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6310,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6308,"src":"30309:10:15","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6313,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6305,"src":"30328:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6312,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30322:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":6311,"name":"int64","nodeType":"ElementaryTypeName","src":"30322:5:15","typeDescriptions":{}}},"id":6314,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30322:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30309:25:15","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":6316,"nodeType":"ExpressionStatement","src":"30309:25:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6317,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6308,"src":"30348:10:15","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6318,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6305,"src":"30362:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30348:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6326,"nodeType":"IfStatement","src":"30344:97:15","trueBody":{"id":6325,"nodeType":"Block","src":"30369:72:15","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":6321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30420:2:15","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":6322,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6305,"src":"30424:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6320,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4808,"src":"30390:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30390:40:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6324,"nodeType":"RevertStatement","src":"30383:47:15"}]}}]},"documentation":{"id":6303,"nodeType":"StructuredDocumentation","src":"29915:307:15","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":6328,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30236:7:15","nodeType":"FunctionDefinition","parameters":{"id":6306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6305,"mutability":"mutable","name":"value","nameLocation":"30251:5:15","nodeType":"VariableDeclaration","scope":6328,"src":"30244:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6304,"name":"int256","nodeType":"ElementaryTypeName","src":"30244:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30243:14:15"},"returnParameters":{"id":6309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6308,"mutability":"mutable","name":"downcasted","nameLocation":"30287:10:15","nodeType":"VariableDeclaration","scope":6328,"src":"30281:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":6307,"name":"int64","nodeType":"ElementaryTypeName","src":"30281:5:15","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30280:18:15"},"scope":6551,"src":"30227:220:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6353,"nodeType":"Block","src":"30837:148:15","statements":[{"expression":{"id":6341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6336,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6334,"src":"30847:10:15","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6339,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6331,"src":"30866:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6338,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30860:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":6337,"name":"int56","nodeType":"ElementaryTypeName","src":"30860:5:15","typeDescriptions":{}}},"id":6340,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30860:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"30847:25:15","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":6342,"nodeType":"ExpressionStatement","src":"30847:25:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6343,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6334,"src":"30886:10:15","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6344,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6331,"src":"30900:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30886:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6352,"nodeType":"IfStatement","src":"30882:97:15","trueBody":{"id":6351,"nodeType":"Block","src":"30907:72:15","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":6347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30958:2:15","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":6348,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6331,"src":"30962:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6346,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4808,"src":"30928:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6349,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30928:40:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6350,"nodeType":"RevertStatement","src":"30921:47:15"}]}}]},"documentation":{"id":6329,"nodeType":"StructuredDocumentation","src":"30453:307:15","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":6354,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"30774:7:15","nodeType":"FunctionDefinition","parameters":{"id":6332,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6331,"mutability":"mutable","name":"value","nameLocation":"30789:5:15","nodeType":"VariableDeclaration","scope":6354,"src":"30782:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6330,"name":"int256","nodeType":"ElementaryTypeName","src":"30782:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30781:14:15"},"returnParameters":{"id":6335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6334,"mutability":"mutable","name":"downcasted","nameLocation":"30825:10:15","nodeType":"VariableDeclaration","scope":6354,"src":"30819:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":6333,"name":"int56","nodeType":"ElementaryTypeName","src":"30819:5:15","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"30818:18:15"},"scope":6551,"src":"30765:220:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6379,"nodeType":"Block","src":"31375:148:15","statements":[{"expression":{"id":6367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6362,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6360,"src":"31385:10:15","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6365,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6357,"src":"31404:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6364,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31398:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":6363,"name":"int48","nodeType":"ElementaryTypeName","src":"31398:5:15","typeDescriptions":{}}},"id":6366,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31398:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31385:25:15","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":6368,"nodeType":"ExpressionStatement","src":"31385:25:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6369,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6360,"src":"31424:10:15","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6370,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6357,"src":"31438:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31424:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6378,"nodeType":"IfStatement","src":"31420:97:15","trueBody":{"id":6377,"nodeType":"Block","src":"31445:72:15","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":6373,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31496:2:15","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":6374,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6357,"src":"31500:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6372,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4808,"src":"31466:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6375,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31466:40:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6376,"nodeType":"RevertStatement","src":"31459:47:15"}]}}]},"documentation":{"id":6355,"nodeType":"StructuredDocumentation","src":"30991:307:15","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":6380,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31312:7:15","nodeType":"FunctionDefinition","parameters":{"id":6358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6357,"mutability":"mutable","name":"value","nameLocation":"31327:5:15","nodeType":"VariableDeclaration","scope":6380,"src":"31320:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6356,"name":"int256","nodeType":"ElementaryTypeName","src":"31320:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31319:14:15"},"returnParameters":{"id":6361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6360,"mutability":"mutable","name":"downcasted","nameLocation":"31363:10:15","nodeType":"VariableDeclaration","scope":6380,"src":"31357:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":6359,"name":"int48","nodeType":"ElementaryTypeName","src":"31357:5:15","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31356:18:15"},"scope":6551,"src":"31303:220:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6405,"nodeType":"Block","src":"31913:148:15","statements":[{"expression":{"id":6393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6388,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6386,"src":"31923:10:15","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6391,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6383,"src":"31942:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6390,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31936:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":6389,"name":"int40","nodeType":"ElementaryTypeName","src":"31936:5:15","typeDescriptions":{}}},"id":6392,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31936:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"31923:25:15","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":6394,"nodeType":"ExpressionStatement","src":"31923:25:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6395,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6386,"src":"31962:10:15","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6396,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6383,"src":"31976:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31962:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6404,"nodeType":"IfStatement","src":"31958:97:15","trueBody":{"id":6403,"nodeType":"Block","src":"31983:72:15","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":6399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32034:2:15","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":6400,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6383,"src":"32038:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6398,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4808,"src":"32004:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6401,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32004:40:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6402,"nodeType":"RevertStatement","src":"31997:47:15"}]}}]},"documentation":{"id":6381,"nodeType":"StructuredDocumentation","src":"31529:307:15","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":6406,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"31850:7:15","nodeType":"FunctionDefinition","parameters":{"id":6384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6383,"mutability":"mutable","name":"value","nameLocation":"31865:5:15","nodeType":"VariableDeclaration","scope":6406,"src":"31858:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6382,"name":"int256","nodeType":"ElementaryTypeName","src":"31858:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31857:14:15"},"returnParameters":{"id":6387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6386,"mutability":"mutable","name":"downcasted","nameLocation":"31901:10:15","nodeType":"VariableDeclaration","scope":6406,"src":"31895:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":6385,"name":"int40","nodeType":"ElementaryTypeName","src":"31895:5:15","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"31894:18:15"},"scope":6551,"src":"31841:220:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6431,"nodeType":"Block","src":"32451:148:15","statements":[{"expression":{"id":6419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6414,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6412,"src":"32461:10:15","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6417,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6409,"src":"32480:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6416,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32474:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":6415,"name":"int32","nodeType":"ElementaryTypeName","src":"32474:5:15","typeDescriptions":{}}},"id":6418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32474:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32461:25:15","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":6420,"nodeType":"ExpressionStatement","src":"32461:25:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6421,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6412,"src":"32500:10:15","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6422,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6409,"src":"32514:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32500:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6430,"nodeType":"IfStatement","src":"32496:97:15","trueBody":{"id":6429,"nodeType":"Block","src":"32521:72:15","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":6425,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32572:2:15","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":6426,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6409,"src":"32576:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6424,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4808,"src":"32542:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6427,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32542:40:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6428,"nodeType":"RevertStatement","src":"32535:47:15"}]}}]},"documentation":{"id":6407,"nodeType":"StructuredDocumentation","src":"32067:307:15","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":6432,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32388:7:15","nodeType":"FunctionDefinition","parameters":{"id":6410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6409,"mutability":"mutable","name":"value","nameLocation":"32403:5:15","nodeType":"VariableDeclaration","scope":6432,"src":"32396:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6408,"name":"int256","nodeType":"ElementaryTypeName","src":"32396:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32395:14:15"},"returnParameters":{"id":6413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6412,"mutability":"mutable","name":"downcasted","nameLocation":"32439:10:15","nodeType":"VariableDeclaration","scope":6432,"src":"32433:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":6411,"name":"int32","nodeType":"ElementaryTypeName","src":"32433:5:15","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32432:18:15"},"scope":6551,"src":"32379:220:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6457,"nodeType":"Block","src":"32989:148:15","statements":[{"expression":{"id":6445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6440,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6438,"src":"32999:10:15","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6443,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6435,"src":"33018:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6442,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33012:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":6441,"name":"int24","nodeType":"ElementaryTypeName","src":"33012:5:15","typeDescriptions":{}}},"id":6444,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33012:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"32999:25:15","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":6446,"nodeType":"ExpressionStatement","src":"32999:25:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6447,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6438,"src":"33038:10:15","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6448,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6435,"src":"33052:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33038:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6456,"nodeType":"IfStatement","src":"33034:97:15","trueBody":{"id":6455,"nodeType":"Block","src":"33059:72:15","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":6451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33110:2:15","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":6452,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6435,"src":"33114:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6450,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4808,"src":"33080:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6453,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33080:40:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6454,"nodeType":"RevertStatement","src":"33073:47:15"}]}}]},"documentation":{"id":6433,"nodeType":"StructuredDocumentation","src":"32605:307:15","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":6458,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"32926:7:15","nodeType":"FunctionDefinition","parameters":{"id":6436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6435,"mutability":"mutable","name":"value","nameLocation":"32941:5:15","nodeType":"VariableDeclaration","scope":6458,"src":"32934:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6434,"name":"int256","nodeType":"ElementaryTypeName","src":"32934:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32933:14:15"},"returnParameters":{"id":6439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6438,"mutability":"mutable","name":"downcasted","nameLocation":"32977:10:15","nodeType":"VariableDeclaration","scope":6458,"src":"32971:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":6437,"name":"int24","nodeType":"ElementaryTypeName","src":"32971:5:15","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"32970:18:15"},"scope":6551,"src":"32917:220:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6483,"nodeType":"Block","src":"33527:148:15","statements":[{"expression":{"id":6471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6466,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6464,"src":"33537:10:15","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6469,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6461,"src":"33556:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6468,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33550:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":6467,"name":"int16","nodeType":"ElementaryTypeName","src":"33550:5:15","typeDescriptions":{}}},"id":6470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33550:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33537:25:15","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":6472,"nodeType":"ExpressionStatement","src":"33537:25:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6473,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6464,"src":"33576:10:15","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6474,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6461,"src":"33590:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33576:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6482,"nodeType":"IfStatement","src":"33572:97:15","trueBody":{"id":6481,"nodeType":"Block","src":"33597:72:15","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":6477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33648:2:15","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":6478,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6461,"src":"33652:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6476,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4808,"src":"33618:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33618:40:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6480,"nodeType":"RevertStatement","src":"33611:47:15"}]}}]},"documentation":{"id":6459,"nodeType":"StructuredDocumentation","src":"33143:307:15","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":6484,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33464:7:15","nodeType":"FunctionDefinition","parameters":{"id":6462,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6461,"mutability":"mutable","name":"value","nameLocation":"33479:5:15","nodeType":"VariableDeclaration","scope":6484,"src":"33472:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6460,"name":"int256","nodeType":"ElementaryTypeName","src":"33472:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33471:14:15"},"returnParameters":{"id":6465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6464,"mutability":"mutable","name":"downcasted","nameLocation":"33515:10:15","nodeType":"VariableDeclaration","scope":6484,"src":"33509:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":6463,"name":"int16","nodeType":"ElementaryTypeName","src":"33509:5:15","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33508:18:15"},"scope":6551,"src":"33455:220:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6509,"nodeType":"Block","src":"34058:146:15","statements":[{"expression":{"id":6497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6492,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6490,"src":"34068:10:15","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6495,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6487,"src":"34086:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6494,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34081:4:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":6493,"name":"int8","nodeType":"ElementaryTypeName","src":"34081:4:15","typeDescriptions":{}}},"id":6496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34081:11:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34068:24:15","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":6498,"nodeType":"ExpressionStatement","src":"34068:24:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6499,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6490,"src":"34106:10:15","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6500,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6487,"src":"34120:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34106:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6508,"nodeType":"IfStatement","src":"34102:96:15","trueBody":{"id":6507,"nodeType":"Block","src":"34127:71:15","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":6503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34178:1:15","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":6504,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6487,"src":"34181:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6502,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4808,"src":"34148:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34148:39:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6506,"nodeType":"RevertStatement","src":"34141:46:15"}]}}]},"documentation":{"id":6485,"nodeType":"StructuredDocumentation","src":"33681:302:15","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":6510,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"33997:6:15","nodeType":"FunctionDefinition","parameters":{"id":6488,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6487,"mutability":"mutable","name":"value","nameLocation":"34011:5:15","nodeType":"VariableDeclaration","scope":6510,"src":"34004:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6486,"name":"int256","nodeType":"ElementaryTypeName","src":"34004:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34003:14:15"},"returnParameters":{"id":6491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6490,"mutability":"mutable","name":"downcasted","nameLocation":"34046:10:15","nodeType":"VariableDeclaration","scope":6510,"src":"34041:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":6489,"name":"int8","nodeType":"ElementaryTypeName","src":"34041:4:15","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34040:17:15"},"scope":6551,"src":"33988:216:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6539,"nodeType":"Block","src":"34444:250:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6518,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6513,"src":"34557:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":6523,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34578:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6522,"name":"int256","nodeType":"ElementaryTypeName","src":"34578:6:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":6521,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34573:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34573:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":6525,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34586:3:15","memberName":"max","nodeType":"MemberAccess","src":"34573:16:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6520,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34565:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6519,"name":"uint256","nodeType":"ElementaryTypeName","src":"34565:7:15","typeDescriptions":{}}},"id":6526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34565:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34557:33:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6533,"nodeType":"IfStatement","src":"34553:105:15","trueBody":{"id":6532,"nodeType":"Block","src":"34592:66:15","statements":[{"errorCall":{"arguments":[{"id":6529,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6513,"src":"34641:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6528,"name":"SafeCastOverflowedUintToInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4813,"src":"34613:27:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":6530,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34613:34:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6531,"nodeType":"RevertStatement","src":"34606:41:15"}]}},{"expression":{"arguments":[{"id":6536,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6513,"src":"34681:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6535,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34674:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6534,"name":"int256","nodeType":"ElementaryTypeName","src":"34674:6:15","typeDescriptions":{}}},"id":6537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34674:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6517,"id":6538,"nodeType":"Return","src":"34667:20:15"}]},"documentation":{"id":6511,"nodeType":"StructuredDocumentation","src":"34210:165:15","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"id":6540,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34389:8:15","nodeType":"FunctionDefinition","parameters":{"id":6514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6513,"mutability":"mutable","name":"value","nameLocation":"34406:5:15","nodeType":"VariableDeclaration","scope":6540,"src":"34398:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6512,"name":"uint256","nodeType":"ElementaryTypeName","src":"34398:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34397:15:15"},"returnParameters":{"id":6517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6516,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6540,"src":"34436:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6515,"name":"int256","nodeType":"ElementaryTypeName","src":"34436:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34435:8:15"},"scope":6551,"src":"34380:314:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6549,"nodeType":"Block","src":"34853:87:15","statements":[{"AST":{"nativeSrc":"34888:46:15","nodeType":"YulBlock","src":"34888:46:15","statements":[{"nativeSrc":"34902:22:15","nodeType":"YulAssignment","src":"34902:22:15","value":{"arguments":[{"arguments":[{"name":"b","nativeSrc":"34921:1:15","nodeType":"YulIdentifier","src":"34921:1:15"}],"functionName":{"name":"iszero","nativeSrc":"34914:6:15","nodeType":"YulIdentifier","src":"34914:6:15"},"nativeSrc":"34914:9:15","nodeType":"YulFunctionCall","src":"34914:9:15"}],"functionName":{"name":"iszero","nativeSrc":"34907:6:15","nodeType":"YulIdentifier","src":"34907:6:15"},"nativeSrc":"34907:17:15","nodeType":"YulFunctionCall","src":"34907:17:15"},"variableNames":[{"name":"u","nativeSrc":"34902:1:15","nodeType":"YulIdentifier","src":"34902:1:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6543,"isOffset":false,"isSlot":false,"src":"34921:1:15","valueSize":1},{"declaration":6546,"isOffset":false,"isSlot":false,"src":"34902:1:15","valueSize":1}],"flags":["memory-safe"],"id":6548,"nodeType":"InlineAssembly","src":"34863:71:15"}]},"documentation":{"id":6541,"nodeType":"StructuredDocumentation","src":"34700:90:15","text":" @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."},"id":6550,"implemented":true,"kind":"function","modifiers":[],"name":"toUint","nameLocation":"34804:6:15","nodeType":"FunctionDefinition","parameters":{"id":6544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6543,"mutability":"mutable","name":"b","nameLocation":"34816:1:15","nodeType":"VariableDeclaration","scope":6550,"src":"34811:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6542,"name":"bool","nodeType":"ElementaryTypeName","src":"34811:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"34810:8:15"},"returnParameters":{"id":6547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6546,"mutability":"mutable","name":"u","nameLocation":"34850:1:15","nodeType":"VariableDeclaration","scope":6550,"src":"34842:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6545,"name":"uint256","nodeType":"ElementaryTypeName","src":"34842:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34841:11:15"},"scope":6551,"src":"34795:145:15","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":6552,"src":"769:34173:15","usedErrors":[4796,4801,4808,4813],"usedEvents":[]}],"src":"192:34751:15"},"id":15},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SafeCast":[6551],"SignedMath":[6695]},"id":6696,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6553,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:16"},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":6555,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6696,"sourceUnit":6552,"src":"135:40:16","symbolAliases":[{"foreign":{"id":6554,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6551,"src":"143:8:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":6556,"nodeType":"StructuredDocumentation","src":"177:80:16","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":6695,"linearizedBaseContracts":[6695],"name":"SignedMath","nameLocation":"266:10:16","nodeType":"ContractDefinition","nodes":[{"body":{"id":6585,"nodeType":"Block","src":"746:215:16","statements":[{"id":6584,"nodeType":"UncheckedBlock","src":"756:199:16","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6568,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6563,"src":"894:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6569,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6561,"src":"900:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6570,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6563,"src":"904:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"900:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6572,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"899:7:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"arguments":[{"id":6577,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6559,"src":"932:9:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6575,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6551,"src":"916:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6551_$","typeString":"type(library SafeCast)"}},"id":6576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"925:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6550,"src":"916:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6574,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"909:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6573,"name":"int256","nodeType":"ElementaryTypeName","src":"909:6:16","typeDescriptions":{}}},"id":6579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"909:34:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"899:44:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6581,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"898:46:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"894:50:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6567,"id":6583,"nodeType":"Return","src":"887:57:16"}]}]},"documentation":{"id":6557,"nodeType":"StructuredDocumentation","src":"283:374:16","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":6586,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"671:7:16","nodeType":"FunctionDefinition","parameters":{"id":6564,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6559,"mutability":"mutable","name":"condition","nameLocation":"684:9:16","nodeType":"VariableDeclaration","scope":6586,"src":"679:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6558,"name":"bool","nodeType":"ElementaryTypeName","src":"679:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6561,"mutability":"mutable","name":"a","nameLocation":"702:1:16","nodeType":"VariableDeclaration","scope":6586,"src":"695:8:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6560,"name":"int256","nodeType":"ElementaryTypeName","src":"695:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6563,"mutability":"mutable","name":"b","nameLocation":"712:1:16","nodeType":"VariableDeclaration","scope":6586,"src":"705:8:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6562,"name":"int256","nodeType":"ElementaryTypeName","src":"705:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"678:36:16"},"returnParameters":{"id":6567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6566,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6586,"src":"738:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6565,"name":"int256","nodeType":"ElementaryTypeName","src":"738:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"737:8:16"},"scope":6695,"src":"662:299:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6604,"nodeType":"Block","src":"1102:44:16","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6597,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6589,"src":"1127:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":6598,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6591,"src":"1131:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1127:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":6600,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6589,"src":"1134:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":6601,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6591,"src":"1137:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6596,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6586,"src":"1119:7:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":6602,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1119:20:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6595,"id":6603,"nodeType":"Return","src":"1112:27:16"}]},"documentation":{"id":6587,"nodeType":"StructuredDocumentation","src":"967:66:16","text":" @dev Returns the largest of two signed numbers."},"id":6605,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"1047:3:16","nodeType":"FunctionDefinition","parameters":{"id":6592,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6589,"mutability":"mutable","name":"a","nameLocation":"1058:1:16","nodeType":"VariableDeclaration","scope":6605,"src":"1051:8:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6588,"name":"int256","nodeType":"ElementaryTypeName","src":"1051:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6591,"mutability":"mutable","name":"b","nameLocation":"1068:1:16","nodeType":"VariableDeclaration","scope":6605,"src":"1061:8:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6590,"name":"int256","nodeType":"ElementaryTypeName","src":"1061:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1050:20:16"},"returnParameters":{"id":6595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6594,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6605,"src":"1094:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6593,"name":"int256","nodeType":"ElementaryTypeName","src":"1094:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1093:8:16"},"scope":6695,"src":"1038:108:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6623,"nodeType":"Block","src":"1288:44:16","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6616,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6608,"src":"1313:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6617,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6610,"src":"1317:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1313:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":6619,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6608,"src":"1320:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":6620,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6610,"src":"1323:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6615,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6586,"src":"1305:7:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":6621,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1305:20:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6614,"id":6622,"nodeType":"Return","src":"1298:27:16"}]},"documentation":{"id":6606,"nodeType":"StructuredDocumentation","src":"1152:67:16","text":" @dev Returns the smallest of two signed numbers."},"id":6624,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"1233:3:16","nodeType":"FunctionDefinition","parameters":{"id":6611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6608,"mutability":"mutable","name":"a","nameLocation":"1244:1:16","nodeType":"VariableDeclaration","scope":6624,"src":"1237:8:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6607,"name":"int256","nodeType":"ElementaryTypeName","src":"1237:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6610,"mutability":"mutable","name":"b","nameLocation":"1254:1:16","nodeType":"VariableDeclaration","scope":6624,"src":"1247:8:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6609,"name":"int256","nodeType":"ElementaryTypeName","src":"1247:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1236:20:16"},"returnParameters":{"id":6614,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6613,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6624,"src":"1280:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6612,"name":"int256","nodeType":"ElementaryTypeName","src":"1280:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1279:8:16"},"scope":6695,"src":"1224:108:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6667,"nodeType":"Block","src":"1537:162:16","statements":[{"assignments":[6635],"declarations":[{"constant":false,"id":6635,"mutability":"mutable","name":"x","nameLocation":"1606:1:16","nodeType":"VariableDeclaration","scope":6667,"src":"1599:8:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6634,"name":"int256","nodeType":"ElementaryTypeName","src":"1599:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":6648,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6636,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6627,"src":"1611:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":6637,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6629,"src":"1615:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1611:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6639,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1610:7:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6640,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6627,"src":"1622:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6641,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6629,"src":"1626:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1622:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6643,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1621:7:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":6644,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1632:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1621:12:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6646,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1620:14:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1610:24:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"1599:35:16"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6649,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6635,"src":"1651:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6654,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6635,"src":"1671:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6653,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1663:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6652,"name":"uint256","nodeType":"ElementaryTypeName","src":"1663:7:16","typeDescriptions":{}}},"id":6655,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1663:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":6656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1677:3:16","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"1663:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6651,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1656:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6650,"name":"int256","nodeType":"ElementaryTypeName","src":"1656:6:16","typeDescriptions":{}}},"id":6658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1656:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6659,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6627,"src":"1685:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6660,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6629,"src":"1689:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1685:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6662,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1684:7:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1656:35:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6664,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1655:37:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1651:41:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6633,"id":6666,"nodeType":"Return","src":"1644:48:16"}]},"documentation":{"id":6625,"nodeType":"StructuredDocumentation","src":"1338:126:16","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":6668,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"1478:7:16","nodeType":"FunctionDefinition","parameters":{"id":6630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6627,"mutability":"mutable","name":"a","nameLocation":"1493:1:16","nodeType":"VariableDeclaration","scope":6668,"src":"1486:8:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6626,"name":"int256","nodeType":"ElementaryTypeName","src":"1486:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6629,"mutability":"mutable","name":"b","nameLocation":"1503:1:16","nodeType":"VariableDeclaration","scope":6668,"src":"1496:8:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6628,"name":"int256","nodeType":"ElementaryTypeName","src":"1496:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1485:20:16"},"returnParameters":{"id":6633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6632,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6668,"src":"1529:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6631,"name":"int256","nodeType":"ElementaryTypeName","src":"1529:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1528:8:16"},"scope":6695,"src":"1469:230:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6693,"nodeType":"Block","src":"1843:767:16","statements":[{"id":6692,"nodeType":"UncheckedBlock","src":"1853:751:16","statements":[{"assignments":[6677],"declarations":[{"constant":false,"id":6677,"mutability":"mutable","name":"mask","nameLocation":"2424:4:16","nodeType":"VariableDeclaration","scope":6692,"src":"2417:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6676,"name":"int256","nodeType":"ElementaryTypeName","src":"2417:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":6681,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6678,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6671,"src":"2431:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":6679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2436:3:16","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"2431:8:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"2417:22:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6684,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6671,"src":"2576:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":6685,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6677,"src":"2580:4:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2576:8:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6687,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2575:10:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6688,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6677,"src":"2588:4:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2575:17:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6683,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2567:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6682,"name":"uint256","nodeType":"ElementaryTypeName","src":"2567:7:16","typeDescriptions":{}}},"id":6690,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2567:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6675,"id":6691,"nodeType":"Return","src":"2560:33:16"}]}]},"documentation":{"id":6669,"nodeType":"StructuredDocumentation","src":"1705:78:16","text":" @dev Returns the absolute unsigned value of a signed value."},"id":6694,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1797:3:16","nodeType":"FunctionDefinition","parameters":{"id":6672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6671,"mutability":"mutable","name":"n","nameLocation":"1808:1:16","nodeType":"VariableDeclaration","scope":6694,"src":"1801:8:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6670,"name":"int256","nodeType":"ElementaryTypeName","src":"1801:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1800:10:16"},"returnParameters":{"id":6675,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6674,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6694,"src":"1834:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6673,"name":"uint256","nodeType":"ElementaryTypeName","src":"1834:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1833:9:16"},"scope":6695,"src":"1788:822:16","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":6696,"src":"258:2354:16","usedErrors":[],"usedEvents":[]}],"src":"109:2504:16"},"id":16},"contracts/MetadataEncoding.sol":{"ast":{"absolutePath":"contracts/MetadataEncoding.sol","exportedSymbols":{"MetadataEncoding":[7225]},"id":7226,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6697,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:17"},{"abstract":false,"baseContracts":[],"canonicalName":"MetadataEncoding","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":7225,"linearizedBaseContracts":[7225],"name":"MetadataEncoding","nameLocation":"69:16:17","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":6700,"mutability":"constant","name":"MAX_WEARABLE_ID","nameLocation":"118:15:17","nodeType":"VariableDeclaration","scope":7225,"src":"93:47:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6698,"name":"uint256","nodeType":"ElementaryTypeName","src":"93:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31303030","id":6699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"136:4:17","typeDescriptions":{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"},"value":"1000"},"visibility":"private"},{"constant":true,"id":6703,"mutability":"constant","name":"MAX_WEARABLES","nameLocation":"172:13:17","nodeType":"VariableDeclaration","scope":7225,"src":"147:43:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6701,"name":"uint256","nodeType":"ElementaryTypeName","src":"147:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3130","id":6702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"188:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"visibility":"private"},{"constant":true,"id":6706,"mutability":"constant","name":"BITS_PER_WEARABLE","nameLocation":"222:17:17","nodeType":"VariableDeclaration","scope":7225,"src":"197:47:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6704,"name":"uint256","nodeType":"ElementaryTypeName","src":"197:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3130","id":6705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"242:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"visibility":"private"},{"constant":true,"id":6709,"mutability":"constant","name":"DECIMAL_PRECISION","nameLocation":"389:17:17","nodeType":"VariableDeclaration","scope":7225,"src":"364:48:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6707,"name":"uint256","nodeType":"ElementaryTypeName","src":"364:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"313030","id":6708,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"409:3:17","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"visibility":"private"},{"constant":true,"id":6712,"mutability":"constant","name":"BITS_PER_DECIMAL","nameLocation":"468:16:17","nodeType":"VariableDeclaration","scope":7225,"src":"443:45:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6710,"name":"uint256","nodeType":"ElementaryTypeName","src":"443:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"37","id":6711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"487:1:17","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"visibility":"private"},{"constant":true,"id":6715,"mutability":"constant","name":"POSITION_WEARABLES","nameLocation":"559:18:17","nodeType":"VariableDeclaration","scope":7225,"src":"534:47:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6713,"name":"uint256","nodeType":"ElementaryTypeName","src":"534:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30","id":6714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"580:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"visibility":"private"},{"constant":true,"id":6720,"mutability":"constant","name":"POSITION_TALKATIVE","nameLocation":"613:18:17","nodeType":"VariableDeclaration","scope":7225,"src":"588:79:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6716,"name":"uint256","nodeType":"ElementaryTypeName","src":"588:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6719,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"id":6717,"name":"BITS_PER_WEARABLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6706,"src":"634:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6718,"name":"MAX_WEARABLES","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6703,"src":"654:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"634:33:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":true,"id":6725,"mutability":"constant","name":"POSITION_SPEED","nameLocation":"699:14:17","nodeType":"VariableDeclaration","scope":7225,"src":"674:64:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6721,"name":"uint256","nodeType":"ElementaryTypeName","src":"674:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6724,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"id":6722,"name":"POSITION_TALKATIVE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6720,"src":"716:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":6723,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"737:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"716:22:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":true,"id":6730,"mutability":"constant","name":"POSITION_LAZINESS","nameLocation":"770:17:17","nodeType":"VariableDeclaration","scope":7225,"src":"745:78:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6726,"name":"uint256","nodeType":"ElementaryTypeName","src":"745:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6729,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"id":6727,"name":"POSITION_SPEED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6725,"src":"790:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":6728,"name":"BITS_PER_DECIMAL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6712,"src":"807:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"790:33:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":true,"id":6738,"mutability":"constant","name":"MASK_WEARABLE","nameLocation":"897:13:17","nodeType":"VariableDeclaration","scope":7225,"src":"872:69:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6731,"name":"uint256","nodeType":"ElementaryTypeName","src":"872:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6737,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6734,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"914:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":6733,"name":"BITS_PER_WEARABLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6706,"src":"919:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"914:22:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6735,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"913:24:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":6736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"940:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"913:28:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":true,"id":6741,"mutability":"constant","name":"MASK_TALKATIVE","nameLocation":"973:14:17","nodeType":"VariableDeclaration","scope":7225,"src":"948:43:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6739,"name":"uint256","nodeType":"ElementaryTypeName","src":"948:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":6740,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"990:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":6749,"mutability":"constant","name":"MASK_DECIMAL","nameLocation":"1023:12:17","nodeType":"VariableDeclaration","scope":7225,"src":"998:67:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6742,"name":"uint256","nodeType":"ElementaryTypeName","src":"998:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6748,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6745,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6743,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1039:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":6744,"name":"BITS_PER_DECIMAL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6712,"src":"1044:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1039:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6746,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1038:23:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":6747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1064:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1038:27:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"body":{"id":6863,"nodeType":"Block","src":"1258:1212:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6764,"name":"wearableIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6752,"src":"1277:11:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":6765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1289:6:17","memberName":"length","nodeType":"MemberAccess","src":"1277:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":6766,"name":"MAX_WEARABLES","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6703,"src":"1299:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1277:35:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6f206d616e79207765617261626c6573","id":6768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1314:20:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_fdd381a726b54d8c15c73bba3a3de5e692184b1d8a125726ebe8796ef8a99551","typeString":"literal_string \"Too many wearables\""},"value":"Too many wearables"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fdd381a726b54d8c15c73bba3a3de5e692184b1d8a125726ebe8796ef8a99551","typeString":"literal_string \"Too many wearables\""}],"id":6763,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"1269:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6769,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1269:66:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6770,"nodeType":"ExpressionStatement","src":"1269:66:17"},{"body":{"id":6791,"nodeType":"Block","src":"1460:97:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":6783,"name":"wearableIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6752,"src":"1483:11:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":6785,"indexExpression":{"id":6784,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6772,"src":"1495:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1483:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":6786,"name":"MAX_WEARABLE_ID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6700,"src":"1501:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1483:33:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5765617261626c65204944206f7574206f662072616e6765","id":6788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1518:26:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_181af2fc56b1000f2c65d243f58951087031f52731a9a415f22be1dc1082b4cf","typeString":"literal_string \"Wearable ID out of range\""},"value":"Wearable ID out of range"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_181af2fc56b1000f2c65d243f58951087031f52731a9a415f22be1dc1082b4cf","typeString":"literal_string \"Wearable ID out of range\""}],"id":6782,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"1475:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6789,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1475:70:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6790,"nodeType":"ExpressionStatement","src":"1475:70:17"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6775,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6772,"src":"1431:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":6776,"name":"wearableIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6752,"src":"1435:11:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":6777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1447:6:17","memberName":"length","nodeType":"MemberAccess","src":"1435:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1431:22:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6792,"initializationExpression":{"assignments":[6772],"declarations":[{"constant":false,"id":6772,"mutability":"mutable","name":"i","nameLocation":"1424:1:17","nodeType":"VariableDeclaration","scope":6792,"src":"1416:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6771,"name":"uint256","nodeType":"ElementaryTypeName","src":"1416:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6774,"initialValue":{"hexValue":"30","id":6773,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1428:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1416:13:17"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":6780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1455:3:17","subExpression":{"id":6779,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6772,"src":"1455:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6781,"nodeType":"ExpressionStatement","src":"1455:3:17"},"nodeType":"ForStatement","src":"1411:146:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6794,"name":"speed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6756,"src":"1676:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"313030","id":6795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1685:3:17","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"1676:12:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5370656564206f7574206f662072616e6765","id":6797,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1690:20:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_f1104c77096bcba68b089b7178e3188596e6db3c7a026b531335224fe8e00527","typeString":"literal_string \"Speed out of range\""},"value":"Speed out of range"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f1104c77096bcba68b089b7178e3188596e6db3c7a026b531335224fe8e00527","typeString":"literal_string \"Speed out of range\""}],"id":6793,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"1668:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6798,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1668:43:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6799,"nodeType":"ExpressionStatement","src":"1668:43:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6801,"name":"laziness","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6758,"src":"1744:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"313030","id":6802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1756:3:17","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"1744:15:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c617a696e657373206f7574206f662072616e6765","id":6804,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1761:23:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_d120ba773af54e15d4c605843a42f0929a96e9abeb4494a22b66904ff2a5fef9","typeString":"literal_string \"Laziness out of range\""},"value":"Laziness out of range"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d120ba773af54e15d4c605843a42f0929a96e9abeb4494a22b66904ff2a5fef9","typeString":"literal_string \"Laziness out of range\""}],"id":6800,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"1736:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1736:49:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6806,"nodeType":"ExpressionStatement","src":"1736:49:17"},{"assignments":[6808],"declarations":[{"constant":false,"id":6808,"mutability":"mutable","name":"metadata","nameLocation":"1828:8:17","nodeType":"VariableDeclaration","scope":6863,"src":"1820:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6807,"name":"uint256","nodeType":"ElementaryTypeName","src":"1820:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6810,"initialValue":{"hexValue":"30","id":6809,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1839:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1820:20:17"},{"body":{"id":6835,"nodeType":"Block","src":"1942:101:17","statements":[{"expression":{"id":6833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6822,"name":"metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6808,"src":"1957:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":6823,"name":"wearableIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6752,"src":"1969:11:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":6825,"indexExpression":{"id":6824,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6812,"src":"1981:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1969:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6826,"name":"POSITION_WEARABLES","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6715,"src":"1988:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6827,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6812,"src":"2009:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6828,"name":"BITS_PER_WEARABLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6706,"src":"2013:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2009:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1988:42:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6831,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1987:44:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1969:62:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1957:74:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6834,"nodeType":"ExpressionStatement","src":"1957:74:17"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6815,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6812,"src":"1913:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":6816,"name":"wearableIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6752,"src":"1917:11:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":6817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1929:6:17","memberName":"length","nodeType":"MemberAccess","src":"1917:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1913:22:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6836,"initializationExpression":{"assignments":[6812],"declarations":[{"constant":false,"id":6812,"mutability":"mutable","name":"i","nameLocation":"1906:1:17","nodeType":"VariableDeclaration","scope":6836,"src":"1898:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6811,"name":"uint256","nodeType":"ElementaryTypeName","src":"1898:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6814,"initialValue":{"hexValue":"30","id":6813,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1910:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1898:13:17"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":6820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1937:3:17","subExpression":{"id":6819,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6812,"src":"1937:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6821,"nodeType":"ExpressionStatement","src":"1937:3:17"},"nodeType":"ForStatement","src":"1893:150:17"},{"condition":{"id":6837,"name":"isTalkative","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6754,"src":"2098:11:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6848,"nodeType":"IfStatement","src":"2094:88:17","trueBody":{"id":6847,"nodeType":"Block","src":"2111:71:17","statements":[{"expression":{"id":6845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6838,"name":"metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6808,"src":"2126:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6844,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"arguments":[{"hexValue":"31","id":6841,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2146:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":6840,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2138:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6839,"name":"uint256","nodeType":"ElementaryTypeName","src":"2138:7:17","typeDescriptions":{}}},"id":6842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2138:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":6843,"name":"POSITION_TALKATIVE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6720,"src":"2152:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2138:32:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2126:44:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6846,"nodeType":"ExpressionStatement","src":"2126:44:17"}]}},{"expression":{"id":6853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6849,"name":"metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6808,"src":"2264:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6850,"name":"speed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6756,"src":"2276:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":6851,"name":"POSITION_SPEED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6725,"src":"2285:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2276:23:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2264:35:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6854,"nodeType":"ExpressionStatement","src":"2264:35:17"},{"expression":{"id":6859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6855,"name":"metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6808,"src":"2385:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6856,"name":"laziness","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6758,"src":"2397:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":6857,"name":"POSITION_LAZINESS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6730,"src":"2409:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2397:29:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2385:41:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6860,"nodeType":"ExpressionStatement","src":"2385:41:17"},{"expression":{"id":6861,"name":"metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6808,"src":"2454:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6762,"id":6862,"nodeType":"Return","src":"2447:15:17"}]},"id":6864,"implemented":true,"kind":"function","modifiers":[],"name":"encodeMetadata","nameLocation":"1087:14:17","nodeType":"FunctionDefinition","parameters":{"id":6759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6752,"mutability":"mutable","name":"wearableIds","nameLocation":"1129:11:17","nodeType":"VariableDeclaration","scope":6864,"src":"1112:28:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":6750,"name":"uint256","nodeType":"ElementaryTypeName","src":"1112:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6751,"nodeType":"ArrayTypeName","src":"1112:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":6754,"mutability":"mutable","name":"isTalkative","nameLocation":"1156:11:17","nodeType":"VariableDeclaration","scope":6864,"src":"1151:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6753,"name":"bool","nodeType":"ElementaryTypeName","src":"1151:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6756,"mutability":"mutable","name":"speed","nameLocation":"1186:5:17","nodeType":"VariableDeclaration","scope":6864,"src":"1178:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6755,"name":"uint256","nodeType":"ElementaryTypeName","src":"1178:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6758,"mutability":"mutable","name":"laziness","nameLocation":"1210:8:17","nodeType":"VariableDeclaration","scope":6864,"src":"1202:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6757,"name":"uint256","nodeType":"ElementaryTypeName","src":"1202:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1101:124:17"},"returnParameters":{"id":6762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6761,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6864,"src":"1249:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6760,"name":"uint256","nodeType":"ElementaryTypeName","src":"1249:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1248:9:17"},"scope":7225,"src":"1078:1392:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6944,"nodeType":"Block","src":"2671:662:17","statements":[{"expression":{"id":6884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6878,"name":"wearableIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6870,"src":"2682:11:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6882,"name":"MAX_WEARABLES","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6703,"src":"2710:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6881,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2696:13:17","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":6879,"name":"uint256","nodeType":"ElementaryTypeName","src":"2700:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6880,"nodeType":"ArrayTypeName","src":"2700:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":6883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2696:28:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"src":"2682:42:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":6885,"nodeType":"ExpressionStatement","src":"2682:42:17"},{"body":{"id":6912,"nodeType":"Block","src":"2821:118:17","statements":[{"expression":{"id":6910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6896,"name":"wearableIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6870,"src":"2836:11:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":6898,"indexExpression":{"id":6897,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6887,"src":"2848:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2836:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6899,"name":"metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6866,"src":"2854:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6900,"name":"POSITION_WEARABLES","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6715,"src":"2867:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6901,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6887,"src":"2888:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6902,"name":"BITS_PER_WEARABLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6706,"src":"2892:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2888:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2867:42:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6905,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2866:44:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2854:56:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6907,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2853:58:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":6908,"name":"MASK_WEARABLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6738,"src":"2914:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2853:74:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2836:91:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6911,"nodeType":"ExpressionStatement","src":"2836:91:17"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6890,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6887,"src":"2797:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6891,"name":"MAX_WEARABLES","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6703,"src":"2801:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2797:17:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6913,"initializationExpression":{"assignments":[6887],"declarations":[{"constant":false,"id":6887,"mutability":"mutable","name":"i","nameLocation":"2790:1:17","nodeType":"VariableDeclaration","scope":6913,"src":"2782:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6886,"name":"uint256","nodeType":"ElementaryTypeName","src":"2782:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6889,"initialValue":{"hexValue":"30","id":6888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2794:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2782:13:17"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":6894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2816:3:17","subExpression":{"id":6893,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6887,"src":"2816:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6895,"nodeType":"ExpressionStatement","src":"2816:3:17"},"nodeType":"ForStatement","src":"2777:162:17"},{"expression":{"id":6924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6914,"name":"isTalkative","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6872,"src":"2990:11:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6915,"name":"metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6866,"src":"3006:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":6916,"name":"POSITION_TALKATIVE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6720,"src":"3018:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3006:30:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6918,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3005:32:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":6919,"name":"MASK_TALKATIVE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6741,"src":"3040:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3005:49:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6921,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3004:51:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":6922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3059:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3004:56:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2990:70:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6925,"nodeType":"ExpressionStatement","src":"2990:70:17"},{"expression":{"id":6933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6926,"name":"speed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6874,"src":"3137:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6927,"name":"metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6866,"src":"3146:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":6928,"name":"POSITION_SPEED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6725,"src":"3158:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3146:26:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6930,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3145:28:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":6931,"name":"MASK_DECIMAL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6749,"src":"3176:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3145:43:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3137:51:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6934,"nodeType":"ExpressionStatement","src":"3137:51:17"},{"expression":{"id":6942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6935,"name":"laziness","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6876,"src":"3268:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6936,"name":"metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6866,"src":"3280:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":6937,"name":"POSITION_LAZINESS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6730,"src":"3292:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3280:29:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6939,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3279:31:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":6940,"name":"MASK_DECIMAL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6749,"src":"3313:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3279:46:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3268:57:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6943,"nodeType":"ExpressionStatement","src":"3268:57:17"}]},"id":6945,"implemented":true,"kind":"function","modifiers":[],"name":"decodeMetadata","nameLocation":"2491:14:17","nodeType":"FunctionDefinition","parameters":{"id":6867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6866,"mutability":"mutable","name":"metadata","nameLocation":"2514:8:17","nodeType":"VariableDeclaration","scope":6945,"src":"2506:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6865,"name":"uint256","nodeType":"ElementaryTypeName","src":"2506:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2505:18:17"},"returnParameters":{"id":6877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6870,"mutability":"mutable","name":"wearableIds","nameLocation":"2574:11:17","nodeType":"VariableDeclaration","scope":6945,"src":"2557:28:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":6868,"name":"uint256","nodeType":"ElementaryTypeName","src":"2557:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6869,"nodeType":"ArrayTypeName","src":"2557:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":6872,"mutability":"mutable","name":"isTalkative","nameLocation":"2601:11:17","nodeType":"VariableDeclaration","scope":6945,"src":"2596:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6871,"name":"bool","nodeType":"ElementaryTypeName","src":"2596:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6874,"mutability":"mutable","name":"speed","nameLocation":"2631:5:17","nodeType":"VariableDeclaration","scope":6945,"src":"2623:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6873,"name":"uint256","nodeType":"ElementaryTypeName","src":"2623:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6876,"mutability":"mutable","name":"laziness","nameLocation":"2655:8:17","nodeType":"VariableDeclaration","scope":6945,"src":"2647:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6875,"name":"uint256","nodeType":"ElementaryTypeName","src":"2647:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2546:124:17"},"scope":7225,"src":"2482:851:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7004,"nodeType":"Block","src":"3515:580:17","statements":[{"assignments":[6953],"declarations":[{"constant":false,"id":6953,"mutability":"mutable","name":"integerPart","nameLocation":"3580:11:17","nodeType":"VariableDeclaration","scope":7004,"src":"3572:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6952,"name":"uint256","nodeType":"ElementaryTypeName","src":"3572:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6957,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6954,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6947,"src":"3594:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6955,"name":"DECIMAL_PRECISION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6709,"src":"3602:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3594:25:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3572:47:17"},{"assignments":[6959],"declarations":[{"constant":false,"id":6959,"mutability":"mutable","name":"fractionalPart","nameLocation":"3638:14:17","nodeType":"VariableDeclaration","scope":7004,"src":"3630:22:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6958,"name":"uint256","nodeType":"ElementaryTypeName","src":"3630:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6963,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6960,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6947,"src":"3655:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":6961,"name":"DECIMAL_PRECISION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6709,"src":"3663:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3655:25:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3630:50:17"},{"assignments":[6965],"declarations":[{"constant":false,"id":6965,"mutability":"mutable","name":"fractionalStr","nameLocation":"3773:13:17","nodeType":"VariableDeclaration","scope":7004,"src":"3759:27:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6964,"name":"string","nodeType":"ElementaryTypeName","src":"3759:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":6966,"nodeType":"VariableDeclarationStatement","src":"3759:27:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6967,"name":"fractionalPart","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6959,"src":"3801:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3130","id":6968,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3818:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"3801:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":6990,"nodeType":"Block","src":"3926:67:17","statements":[{"expression":{"id":6988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6984,"name":"fractionalStr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6965,"src":"3941:13:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6986,"name":"fractionalPart","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6959,"src":"3966:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6985,"name":"uint2str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7095,"src":"3957:8:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":6987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3957:24:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"3941:40:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":6989,"nodeType":"ExpressionStatement","src":"3941:40:17"}]},"id":6991,"nodeType":"IfStatement","src":"3797:196:17","trueBody":{"id":6983,"nodeType":"Block","src":"3822:98:17","statements":[{"expression":{"id":6981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6970,"name":"fractionalStr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6965,"src":"3837:13:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"hexValue":"30","id":6975,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3877:3:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},{"arguments":[{"id":6977,"name":"fractionalPart","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6959,"src":"3891:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6976,"name":"uint2str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7095,"src":"3882:8:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":6978,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3882:24:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":6973,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3860:3:17","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":6974,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3864:12:17","memberName":"encodePacked","nodeType":"MemberAccess","src":"3860:16:17","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":6979,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3860:47:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6972,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3853:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":6971,"name":"string","nodeType":"ElementaryTypeName","src":"3853:6:17","typeDescriptions":{}}},"id":6980,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3853:55:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"3837:71:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":6982,"nodeType":"ExpressionStatement","src":"3837:71:17"}]}},{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":6997,"name":"integerPart","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6953,"src":"4053:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6996,"name":"uint2str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7095,"src":"4044:8:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":6998,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4044:21:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"2e","id":6999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4067:3:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf","typeString":"literal_string \".\""},"value":"."},{"id":7000,"name":"fractionalStr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6965,"src":"4072:13:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf","typeString":"literal_string \".\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":6994,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4027:3:17","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":6995,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4031:12:17","memberName":"encodePacked","nodeType":"MemberAccess","src":"4027:16:17","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":7001,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4027:59:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6993,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4020:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":6992,"name":"string","nodeType":"ElementaryTypeName","src":"4020:6:17","typeDescriptions":{}}},"id":7002,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4020:67:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":6951,"id":7003,"nodeType":"Return","src":"4013:74:17"}]},"id":7005,"implemented":true,"kind":"function","modifiers":[],"name":"toDecimalValue","nameLocation":"3447:14:17","nodeType":"FunctionDefinition","parameters":{"id":6948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6947,"mutability":"mutable","name":"value","nameLocation":"3470:5:17","nodeType":"VariableDeclaration","scope":7005,"src":"3462:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6946,"name":"uint256","nodeType":"ElementaryTypeName","src":"3462:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3461:15:17"},"returnParameters":{"id":6951,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6950,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7005,"src":"3500:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6949,"name":"string","nodeType":"ElementaryTypeName","src":"3500:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3499:15:17"},"scope":7225,"src":"3438:657:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7094,"nodeType":"Block","src":"4225:543:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7012,"name":"_i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7007,"src":"4240:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":7013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4246:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4240:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7018,"nodeType":"IfStatement","src":"4236:50:17","trueBody":{"id":7017,"nodeType":"Block","src":"4249:37:17","statements":[{"expression":{"hexValue":"30","id":7015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4271:3:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"functionReturnParameters":7011,"id":7016,"nodeType":"Return","src":"4264:10:17"}]}},{"assignments":[7020],"declarations":[{"constant":false,"id":7020,"mutability":"mutable","name":"j","nameLocation":"4314:1:17","nodeType":"VariableDeclaration","scope":7094,"src":"4306:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7019,"name":"uint256","nodeType":"ElementaryTypeName","src":"4306:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7022,"initialValue":{"id":7021,"name":"_i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7007,"src":"4318:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4306:14:17"},{"assignments":[7024],"declarations":[{"constant":false,"id":7024,"mutability":"mutable","name":"len","nameLocation":"4339:3:17","nodeType":"VariableDeclaration","scope":7094,"src":"4331:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7023,"name":"uint256","nodeType":"ElementaryTypeName","src":"4331:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7025,"nodeType":"VariableDeclarationStatement","src":"4331:11:17"},{"body":{"id":7036,"nodeType":"Block","src":"4378:54:17","statements":[{"expression":{"id":7030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4393:5:17","subExpression":{"id":7029,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7024,"src":"4393:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7031,"nodeType":"ExpressionStatement","src":"4393:5:17"},{"expression":{"id":7034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7032,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7020,"src":"4413:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":7033,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4418:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"4413:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7035,"nodeType":"ExpressionStatement","src":"4413:7:17"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7026,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7020,"src":"4370:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":7027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4375:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4370:6:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7037,"nodeType":"WhileStatement","src":"4363:69:17"},{"assignments":[7039],"declarations":[{"constant":false,"id":7039,"mutability":"mutable","name":"bstr","nameLocation":"4465:4:17","nodeType":"VariableDeclaration","scope":7094,"src":"4452:17:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7038,"name":"bytes","nodeType":"ElementaryTypeName","src":"4452:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":7044,"initialValue":{"arguments":[{"id":7042,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7024,"src":"4482:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7041,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"4472:9:17","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":7040,"name":"bytes","nodeType":"ElementaryTypeName","src":"4476:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":7043,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4472:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"4452:34:17"},{"assignments":[7046],"declarations":[{"constant":false,"id":7046,"mutability":"mutable","name":"k","nameLocation":"4505:1:17","nodeType":"VariableDeclaration","scope":7094,"src":"4497:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7045,"name":"uint256","nodeType":"ElementaryTypeName","src":"4497:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7048,"initialValue":{"id":7047,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7024,"src":"4509:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4497:15:17"},{"body":{"id":7087,"nodeType":"Block","src":"4549:172:17","statements":[{"expression":{"id":7056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7052,"name":"k","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7046,"src":"4564:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7053,"name":"k","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7046,"src":"4568:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":7054,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4570:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4568:3:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4564:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7057,"nodeType":"ExpressionStatement","src":"4564:7:17"},{"assignments":[7059],"declarations":[{"constant":false,"id":7059,"mutability":"mutable","name":"temp","nameLocation":"4592:4:17","nodeType":"VariableDeclaration","scope":7087,"src":"4586:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":7058,"name":"uint8","nodeType":"ElementaryTypeName","src":"4586:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":7069,"initialValue":{"components":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":7067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3438","id":7060,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4600:2:17","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7063,"name":"_i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7007,"src":"4611:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"3130","id":7064,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4616:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"4611:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7062,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4605:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":7061,"name":"uint8","nodeType":"ElementaryTypeName","src":"4605:5:17","typeDescriptions":{}}},"id":7066,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4605:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"4600:19:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":7068,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4599:21:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4586:34:17"},{"assignments":[7071],"declarations":[{"constant":false,"id":7071,"mutability":"mutable","name":"b1","nameLocation":"4642:2:17","nodeType":"VariableDeclaration","scope":7087,"src":"4635:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":7070,"name":"bytes1","nodeType":"ElementaryTypeName","src":"4635:6:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":7076,"initialValue":{"arguments":[{"id":7074,"name":"temp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7059,"src":"4654:4:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":7073,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4647:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":7072,"name":"bytes1","nodeType":"ElementaryTypeName","src":"4647:6:17","typeDescriptions":{}}},"id":7075,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4647:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"4635:24:17"},{"expression":{"id":7081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7077,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7039,"src":"4674:4:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":7079,"indexExpression":{"id":7078,"name":"k","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7046,"src":"4679:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4674:7:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7080,"name":"b1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7071,"src":"4684:2:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"4674:12:17","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":7082,"nodeType":"ExpressionStatement","src":"4674:12:17"},{"expression":{"id":7085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7083,"name":"_i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7007,"src":"4701:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":7084,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4707:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"4701:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7086,"nodeType":"ExpressionStatement","src":"4701:8:17"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7049,"name":"_i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7007,"src":"4540:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":7050,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4546:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4540:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7088,"nodeType":"WhileStatement","src":"4533:188:17"},{"expression":{"arguments":[{"id":7091,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7039,"src":"4755:4:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7090,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4748:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":7089,"name":"string","nodeType":"ElementaryTypeName","src":"4748:6:17","typeDescriptions":{}}},"id":7092,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4748:12:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":7011,"id":7093,"nodeType":"Return","src":"4741:19:17"}]},"id":7095,"implemented":true,"kind":"function","modifiers":[],"name":"uint2str","nameLocation":"4166:8:17","nodeType":"FunctionDefinition","parameters":{"id":7008,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7007,"mutability":"mutable","name":"_i","nameLocation":"4183:2:17","nodeType":"VariableDeclaration","scope":7095,"src":"4175:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7006,"name":"uint256","nodeType":"ElementaryTypeName","src":"4175:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4174:12:17"},"returnParameters":{"id":7011,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7010,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7095,"src":"4210:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7009,"name":"string","nodeType":"ElementaryTypeName","src":"4210:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4209:15:17"},"scope":7225,"src":"4157:611:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7146,"nodeType":"Block","src":"4922:378:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7105,"name":"wearableId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7099,"src":"4941:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":7106,"name":"MAX_WEARABLE_ID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6700,"src":"4955:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4941:29:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5765617261626c65204944206f7574206f662072616e6765","id":7108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4972:26:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_181af2fc56b1000f2c65d243f58951087031f52731a9a415f22be1dc1082b4cf","typeString":"literal_string \"Wearable ID out of range\""},"value":"Wearable ID out of range"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_181af2fc56b1000f2c65d243f58951087031f52731a9a415f22be1dc1082b4cf","typeString":"literal_string \"Wearable ID out of range\""}],"id":7104,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"4933:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4933:66:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7110,"nodeType":"ExpressionStatement","src":"4933:66:17"},{"body":{"id":7142,"nodeType":"Block","src":"5064:196:17","statements":[{"assignments":[7122],"declarations":[{"constant":false,"id":7122,"mutability":"mutable","name":"id","nameLocation":"5087:2:17","nodeType":"VariableDeclaration","scope":7142,"src":"5079:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7121,"name":"uint256","nodeType":"ElementaryTypeName","src":"5079:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7134,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7123,"name":"metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7097,"src":"5093:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7124,"name":"POSITION_WEARABLES","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6715,"src":"5106:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7125,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7112,"src":"5127:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":7126,"name":"BITS_PER_WEARABLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6706,"src":"5131:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5127:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5106:42:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7129,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5105:44:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5093:56:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7131,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5092:58:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":7132,"name":"MASK_WEARABLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6738,"src":"5153:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5092:74:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5079:87:17"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7135,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7122,"src":"5185:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7136,"name":"wearableId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7099,"src":"5191:10:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5185:16:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7141,"nodeType":"IfStatement","src":"5181:68:17","trueBody":{"id":7140,"nodeType":"Block","src":"5203:46:17","statements":[{"expression":{"hexValue":"74727565","id":7138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5229:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":7103,"id":7139,"nodeType":"Return","src":"5222:11:17"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7115,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7112,"src":"5040:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7116,"name":"MAX_WEARABLES","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6703,"src":"5044:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5040:17:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7143,"initializationExpression":{"assignments":[7112],"declarations":[{"constant":false,"id":7112,"mutability":"mutable","name":"i","nameLocation":"5033:1:17","nodeType":"VariableDeclaration","scope":7143,"src":"5025:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7111,"name":"uint256","nodeType":"ElementaryTypeName","src":"5025:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7114,"initialValue":{"hexValue":"30","id":7113,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5037:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5025:13:17"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":7119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5059:3:17","subExpression":{"id":7118,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7112,"src":"5059:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7120,"nodeType":"ExpressionStatement","src":"5059:3:17"},"nodeType":"ForStatement","src":"5020:240:17"},{"expression":{"hexValue":"66616c7365","id":7144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5287:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":7103,"id":7145,"nodeType":"Return","src":"5280:12:17"}]},"id":7147,"implemented":true,"kind":"function","modifiers":[],"name":"_hasWearable","nameLocation":"4842:12:17","nodeType":"FunctionDefinition","parameters":{"id":7100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7097,"mutability":"mutable","name":"metadata","nameLocation":"4863:8:17","nodeType":"VariableDeclaration","scope":7147,"src":"4855:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7096,"name":"uint256","nodeType":"ElementaryTypeName","src":"4855:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7099,"mutability":"mutable","name":"wearableId","nameLocation":"4881:10:17","nodeType":"VariableDeclaration","scope":7147,"src":"4873:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7098,"name":"uint256","nodeType":"ElementaryTypeName","src":"4873:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4854:38:17"},"returnParameters":{"id":7103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7102,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7147,"src":"4916:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7101,"name":"bool","nodeType":"ElementaryTypeName","src":"4916:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4915:6:17"},"scope":7225,"src":"4833:467:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7175,"nodeType":"Block","src":"5398:177:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7157,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7151,"src":"5417:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7158,"name":"MAX_WEARABLES","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6703,"src":"5425:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5417:21:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e646578206f7574206f662072616e6765","id":7160,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5440:20:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_c9580fd05844cb84bf0a747c48ec42a21f1dca0bc044d3619707fb319eddae0d","typeString":"literal_string \"Index out of range\""},"value":"Index out of range"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c9580fd05844cb84bf0a747c48ec42a21f1dca0bc044d3619707fb319eddae0d","typeString":"literal_string \"Index out of range\""}],"id":7156,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"5409:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5409:52:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7162,"nodeType":"ExpressionStatement","src":"5409:52:17"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7163,"name":"metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7149,"src":"5490:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7164,"name":"POSITION_WEARABLES","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6715,"src":"5503:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7165,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7151,"src":"5524:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":7166,"name":"BITS_PER_WEARABLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6706,"src":"5532:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5524:25:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5503:46:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7169,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5502:48:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5490:60:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7171,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5489:62:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":7172,"name":"MASK_WEARABLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6738,"src":"5554:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5489:78:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7155,"id":7174,"nodeType":"Return","src":"5482:85:17"}]},"functionSelector":"0a02c9ac","id":7176,"implemented":true,"kind":"function","modifiers":[],"name":"getWearableAt","nameLocation":"5321:13:17","nodeType":"FunctionDefinition","parameters":{"id":7152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7149,"mutability":"mutable","name":"metadata","nameLocation":"5343:8:17","nodeType":"VariableDeclaration","scope":7176,"src":"5335:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7148,"name":"uint256","nodeType":"ElementaryTypeName","src":"5335:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7151,"mutability":"mutable","name":"index","nameLocation":"5361:5:17","nodeType":"VariableDeclaration","scope":7176,"src":"5353:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7150,"name":"uint256","nodeType":"ElementaryTypeName","src":"5353:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5334:33:17"},"returnParameters":{"id":7155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7154,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7176,"src":"5389:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7153,"name":"uint256","nodeType":"ElementaryTypeName","src":"5389:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5388:9:17"},"scope":7225,"src":"5312:263:17","stateMutability":"pure","virtual":false,"visibility":"public"},{"body":{"id":7193,"nodeType":"Block","src":"5659:82:17","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7183,"name":"metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7178,"src":"5679:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":7184,"name":"POSITION_TALKATIVE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6720,"src":"5691:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5679:30:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7186,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5678:32:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":7187,"name":"MASK_TALKATIVE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6741,"src":"5713:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5678:49:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7189,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5677:51:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":7190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5732:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5677:56:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":7182,"id":7192,"nodeType":"Return","src":"5670:63:17"}]},"id":7194,"implemented":true,"kind":"function","modifiers":[],"name":"_getIsTalkative","nameLocation":"5596:15:17","nodeType":"FunctionDefinition","parameters":{"id":7179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7178,"mutability":"mutable","name":"metadata","nameLocation":"5620:8:17","nodeType":"VariableDeclaration","scope":7194,"src":"5612:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7177,"name":"uint256","nodeType":"ElementaryTypeName","src":"5612:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5611:18:17"},"returnParameters":{"id":7182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7181,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7194,"src":"5653:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7180,"name":"bool","nodeType":"ElementaryTypeName","src":"5653:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5652:6:17"},"scope":7225,"src":"5587:154:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7208,"nodeType":"Block","src":"5820:69:17","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7201,"name":"metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7196,"src":"5839:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":7202,"name":"POSITION_SPEED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6725,"src":"5851:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5839:26:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7204,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5838:28:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":7205,"name":"MASK_DECIMAL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6749,"src":"5869:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5838:43:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7200,"id":7207,"nodeType":"Return","src":"5831:50:17"}]},"functionSelector":"9f7c43cd","id":7209,"implemented":true,"kind":"function","modifiers":[],"name":"_getSpeed","nameLocation":"5762:9:17","nodeType":"FunctionDefinition","parameters":{"id":7197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7196,"mutability":"mutable","name":"metadata","nameLocation":"5780:8:17","nodeType":"VariableDeclaration","scope":7209,"src":"5772:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7195,"name":"uint256","nodeType":"ElementaryTypeName","src":"5772:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5771:18:17"},"returnParameters":{"id":7200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7199,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7209,"src":"5811:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7198,"name":"uint256","nodeType":"ElementaryTypeName","src":"5811:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5810:9:17"},"scope":7225,"src":"5753:136:17","stateMutability":"pure","virtual":false,"visibility":"public"},{"body":{"id":7223,"nodeType":"Block","src":"5973:72:17","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7216,"name":"metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7211,"src":"5992:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":7217,"name":"POSITION_LAZINESS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6730,"src":"6004:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5992:29:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7219,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5991:31:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":7220,"name":"MASK_DECIMAL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6749,"src":"6025:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5991:46:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7215,"id":7222,"nodeType":"Return","src":"5984:53:17"}]},"functionSelector":"722f7412","id":7224,"implemented":true,"kind":"function","modifiers":[],"name":"_getLaziness","nameLocation":"5912:12:17","nodeType":"FunctionDefinition","parameters":{"id":7212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7211,"mutability":"mutable","name":"metadata","nameLocation":"5933:8:17","nodeType":"VariableDeclaration","scope":7224,"src":"5925:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7210,"name":"uint256","nodeType":"ElementaryTypeName","src":"5925:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5924:18:17"},"returnParameters":{"id":7215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7214,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7224,"src":"5964:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7213,"name":"uint256","nodeType":"ElementaryTypeName","src":"5964:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5963:9:17"},"scope":7225,"src":"5903:142:17","stateMutability":"pure","virtual":false,"visibility":"public"}],"scope":7226,"src":"60:5996:17","usedErrors":[],"usedEvents":[]}],"src":"33:6023:17"},"id":17},"contracts/SkyBuds.sol":{"ast":{"absolutePath":"contracts/SkyBuds.sol","exportedSymbols":{"Base64":[1576],"Context":[1606],"ERC721":[1241],"MetadataEncoding":[7225],"Ownable":[147],"ReentrancyGuard":[1727],"SkyBuds":[7512],"SkyBudsMetadata":[8014],"Strings":[3129]},"id":7513,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7227,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"59:24:18"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","file":"@openzeppelin/contracts/token/ERC721/ERC721.sol","id":7229,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7513,"sourceUnit":1242,"src":"85:71:18","symbolAliases":[{"foreign":{"id":7228,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1241,"src":"93:6:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":7231,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7513,"sourceUnit":148,"src":"158:67:18","symbolAliases":[{"foreign":{"id":7230,"name":"Ownable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":147,"src":"166:7:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Base64.sol","file":"@openzeppelin/contracts/utils/Base64.sol","id":7233,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7513,"sourceUnit":1577,"src":"227:64:18","symbolAliases":[{"foreign":{"id":7232,"name":"Base64","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1576,"src":"235:6:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"@openzeppelin/contracts/utils/Strings.sol","id":7235,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7513,"sourceUnit":3130,"src":"293:66:18","symbolAliases":[{"foreign":{"id":7234,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3129,"src":"301:7:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","file":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","id":7236,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7513,"sourceUnit":1728,"src":"361:59:18","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/SkybudsMetadata.sol","file":"./SkybudsMetadata.sol","id":7237,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7513,"sourceUnit":8015,"src":"422:31:18","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":7238,"name":"ReentrancyGuard","nameLocations":["477:15:18"],"nodeType":"IdentifierPath","referencedDeclaration":1727,"src":"477:15:18"},"id":7239,"nodeType":"InheritanceSpecifier","src":"477:15:18"},{"baseName":{"id":7240,"name":"ERC721","nameLocations":["493:6:18"],"nodeType":"IdentifierPath","referencedDeclaration":1241,"src":"493:6:18"},"id":7241,"nodeType":"InheritanceSpecifier","src":"493:6:18"},{"baseName":{"id":7242,"name":"Ownable","nameLocations":["501:7:18"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"501:7:18"},"id":7243,"nodeType":"InheritanceSpecifier","src":"501:7:18"}],"canonicalName":"SkyBuds","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":7512,"linearizedBaseContracts":[7512,147,1241,237,1404,1358,3153,3165,1606,1727],"name":"SkyBuds","nameLocation":"466:7:18","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":7246,"mutability":"mutable","name":"_nextTokenId","nameLocation":"532:12:18","nodeType":"VariableDeclaration","scope":7512,"src":"516:32:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7244,"name":"uint256","nodeType":"ElementaryTypeName","src":"516:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":7245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"547:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":false,"functionSelector":"03753cf6","id":7249,"mutability":"mutable","name":"contractSkybudsMetadata","nameLocation":"580:23:18","nodeType":"VariableDeclaration","scope":7512,"src":"557:46:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_SkyBudsMetadata_$8014","typeString":"contract SkyBudsMetadata"},"typeName":{"id":7248,"nodeType":"UserDefinedTypeName","pathNode":{"id":7247,"name":"SkyBudsMetadata","nameLocations":["557:15:18"],"nodeType":"IdentifierPath","referencedDeclaration":8014,"src":"557:15:18"},"referencedDeclaration":8014,"src":"557:15:18","typeDescriptions":{"typeIdentifier":"t_contract$_SkyBudsMetadata_$8014","typeString":"contract SkyBudsMetadata"}},"visibility":"public"},{"constant":true,"functionSelector":"f47c84c5","id":7252,"mutability":"constant","name":"MAX_TOKENS","nameLocation":"636:10:18","nodeType":"VariableDeclaration","scope":7512,"src":"612:41:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7250,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32303030","id":7251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"649:4:18","typeDescriptions":{"typeIdentifier":"t_rational_2000_by_1","typeString":"int_const 2000"},"value":"2000"},"visibility":"public"},{"body":{"id":7271,"nodeType":"Block","src":"773:73:18","statements":[{"expression":{"arguments":[{"id":7268,"name":"_addressContractMetadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7254,"src":"811:24:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7267,"name":"setMetadataContractAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7286,"src":"784:26:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":7269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"784:52:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7270,"nodeType":"ExpressionStatement","src":"784:52:18"}]},"id":7272,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"expression":{"id":7257,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"718:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"722:6:18","memberName":"sender","nodeType":"MemberAccess","src":"718:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":7259,"kind":"baseConstructorSpecifier","modifierName":{"id":7256,"name":"Ownable","nameLocations":["710:7:18"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"710:7:18"},"nodeType":"ModifierInvocation","src":"710:19:18"},{"arguments":[],"id":7261,"kind":"baseConstructorSpecifier","modifierName":{"id":7260,"name":"ReentrancyGuard","nameLocations":["730:15:18"],"nodeType":"IdentifierPath","referencedDeclaration":1727,"src":"730:15:18"},"nodeType":"ModifierInvocation","src":"730:17:18"},{"arguments":[{"hexValue":"536b7942756473","id":7263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"755:9:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_50e113a6bf2a96718754e8638e5ae1a86ca916a8d8325005e36e99b645479238","typeString":"literal_string \"SkyBuds\""},"value":"SkyBuds"},{"hexValue":"534b42","id":7264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"766:5:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_0fa191d2c3d67a83cbd74abed4902490b9d070c82f219060074f1b0703caf7c4","typeString":"literal_string \"SKB\""},"value":"SKB"}],"id":7265,"kind":"baseConstructorSpecifier","modifierName":{"id":7262,"name":"ERC721","nameLocations":["748:6:18"],"nodeType":"IdentifierPath","referencedDeclaration":1241,"src":"748:6:18"},"nodeType":"ModifierInvocation","src":"748:24:18"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":7255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7254,"mutability":"mutable","name":"_addressContractMetadata","nameLocation":"684:24:18","nodeType":"VariableDeclaration","scope":7272,"src":"676:32:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7253,"name":"address","nodeType":"ElementaryTypeName","src":"676:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"675:34:18"},"returnParameters":{"id":7266,"nodeType":"ParameterList","parameters":[],"src":"773:0:18"},"scope":7512,"src":"664:182:18","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7285,"nodeType":"Block","src":"941:77:18","statements":[{"expression":{"id":7283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7279,"name":"contractSkybudsMetadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7249,"src":"946:23:18","typeDescriptions":{"typeIdentifier":"t_contract$_SkyBudsMetadata_$8014","typeString":"contract SkyBudsMetadata"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7281,"name":"_addressContractMetadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7274,"src":"988:24:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7280,"name":"SkyBudsMetadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8014,"src":"972:15:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SkyBudsMetadata_$8014_$","typeString":"type(contract SkyBudsMetadata)"}},"id":7282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"972:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_SkyBudsMetadata_$8014","typeString":"contract SkyBudsMetadata"}},"src":"946:67:18","typeDescriptions":{"typeIdentifier":"t_contract$_SkyBudsMetadata_$8014","typeString":"contract SkyBudsMetadata"}},"id":7284,"nodeType":"ExpressionStatement","src":"946:67:18"}]},"functionSelector":"4d74d3b4","id":7286,"implemented":true,"kind":"function","modifiers":[{"id":7277,"kind":"modifierInvocation","modifierName":{"id":7276,"name":"onlyOwner","nameLocations":["931:9:18"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"931:9:18"},"nodeType":"ModifierInvocation","src":"931:9:18"}],"name":"setMetadataContractAddress","nameLocation":"863:26:18","nodeType":"FunctionDefinition","parameters":{"id":7275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7274,"mutability":"mutable","name":"_addressContractMetadata","nameLocation":"898:24:18","nodeType":"VariableDeclaration","scope":7286,"src":"890:32:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7273,"name":"address","nodeType":"ElementaryTypeName","src":"890:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"889:34:18"},"returnParameters":{"id":7278,"nodeType":"ParameterList","parameters":[],"src":"941:0:18"},"scope":7512,"src":"854:164:18","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[480],"body":{"id":7308,"nodeType":"Block","src":"1122:158:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7295,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7288,"src":"1143:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7296,"name":"_nextTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7246,"src":"1153:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":7297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1166:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1153:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1143:24:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"55524920717565727920666f72206e6f6e6578697374656e7420746f6b656e","id":7300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1169:33:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_1cdec463df0fbdce13585c1435e3c4772f0033ebb8a813b127e59d923b0c9730","typeString":"literal_string \"URI query for nonexistent token\""},"value":"URI query for nonexistent token"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1cdec463df0fbdce13585c1435e3c4772f0033ebb8a813b127e59d923b0c9730","typeString":"literal_string \"URI query for nonexistent token\""}],"id":7294,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"1135:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7301,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1135:68:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7302,"nodeType":"ExpressionStatement","src":"1135:68:18"},{"expression":{"arguments":[{"id":7305,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7288,"src":"1264:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7303,"name":"contractSkybudsMetadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7249,"src":"1223:23:18","typeDescriptions":{"typeIdentifier":"t_contract$_SkyBudsMetadata_$8014","typeString":"contract SkyBudsMetadata"}},"id":7304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1247:16:18","memberName":"generateTokenURI","nodeType":"MemberAccess","referencedDeclaration":7683,"src":"1223:40:18","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) view external returns (string memory)"}},"id":7306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1223:49:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":7293,"id":7307,"nodeType":"Return","src":"1216:56:18"}]},"functionSelector":"c87b56dd","id":7309,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"1035:8:18","nodeType":"FunctionDefinition","overrides":{"id":7290,"nodeType":"OverrideSpecifier","overrides":[],"src":"1089:8:18"},"parameters":{"id":7289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7288,"mutability":"mutable","name":"tokenId","nameLocation":"1062:7:18","nodeType":"VariableDeclaration","scope":7309,"src":"1054:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7287,"name":"uint256","nodeType":"ElementaryTypeName","src":"1054:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1043:33:18"},"returnParameters":{"id":7293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7292,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7309,"src":"1107:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7291,"name":"string","nodeType":"ElementaryTypeName","src":"1107:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1106:15:18"},"scope":7512,"src":"1026:254:18","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":7318,"nodeType":"Block","src":"1343:42:18","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7314,"name":"_nextTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7246,"src":"1361:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":7315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1376:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1361:16:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7313,"id":7317,"nodeType":"Return","src":"1354:23:18"}]},"functionSelector":"18160ddd","id":7319,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"1299:11:18","nodeType":"FunctionDefinition","parameters":{"id":7310,"nodeType":"ParameterList","parameters":[],"src":"1310:2:18"},"returnParameters":{"id":7313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7312,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7319,"src":"1334:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7311,"name":"uint256","nodeType":"ElementaryTypeName","src":"1334:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1333:9:18"},"scope":7512,"src":"1290:95:18","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":7379,"nodeType":"Block","src":"1589:483:18","statements":[{"assignments":[7336],"declarations":[{"constant":false,"id":7336,"mutability":"mutable","name":"tokenId","nameLocation":"1608:7:18","nodeType":"VariableDeclaration","scope":7379,"src":"1600:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7335,"name":"uint256","nodeType":"ElementaryTypeName","src":"1600:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7339,"initialValue":{"id":7338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1618:14:18","subExpression":{"id":7337,"name":"_nextTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7246,"src":"1618:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1600:32:18"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7341,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7336,"src":"1651:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":7342,"name":"MAX_TOKENS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7252,"src":"1662:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1651:21:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d617820746f6b656e73206d696e746564","id":7344,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1674:19:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_fb07b66d42cb1e8874011bd11e3ec8ed67e5eaeebd1c05c818bbc46f45dac4a2","typeString":"literal_string \"Max tokens minted\""},"value":"Max tokens minted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fb07b66d42cb1e8874011bd11e3ec8ed67e5eaeebd1c05c818bbc46f45dac4a2","typeString":"literal_string \"Max tokens minted\""}],"id":7340,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"1643:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7345,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1643:51:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7346,"nodeType":"ExpressionStatement","src":"1643:51:18"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":7350,"name":"base64uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7330,"src":"1729:9:18","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}],"id":7349,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1723:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":7348,"name":"bytes","nodeType":"ElementaryTypeName","src":"1723:5:18","typeDescriptions":{}}},"id":7351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1723:16:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":7352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1740:6:18","memberName":"length","nodeType":"MemberAccess","src":"1723:23:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1749:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1723:27:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"426173653634205552492063616e6e6f7420626520656d707479","id":7355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1752:28:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_c519b308913a9a0e7e2ec9c5e42b999728ea2c183ab718a9c899ecfb2d7aae0f","typeString":"literal_string \"Base64 URI cannot be empty\""},"value":"Base64 URI cannot be empty"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c519b308913a9a0e7e2ec9c5e42b999728ea2c183ab718a9c899ecfb2d7aae0f","typeString":"literal_string \"Base64 URI cannot be empty\""}],"id":7347,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"1715:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7356,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1715:66:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7357,"nodeType":"ExpressionStatement","src":"1715:66:18"},{"expression":{"arguments":[{"id":7361,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7336,"src":"1854:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7362,"name":"wearables","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7322,"src":"1876:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7363,"name":"isTalkative","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7328,"src":"1900:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":7364,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1913:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1900:14:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":7366,"name":"speed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7326,"src":"1929:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7367,"name":"laziness","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7324,"src":"1949:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7368,"name":"base64uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7330,"src":"1972:9:18","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}],"expression":{"id":7358,"name":"contractSkybudsMetadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7249,"src":"1804:23:18","typeDescriptions":{"typeIdentifier":"t_contract$_SkyBudsMetadata_$8014","typeString":"contract SkyBudsMetadata"}},"id":7360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1828:11:18","memberName":"setMetadata","nodeType":"MemberAccess","referencedDeclaration":7607,"src":"1804:35:18","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bool_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,uint256[] memory,bool,uint256,uint256,string memory) external"}},"id":7369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1804:188:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7370,"nodeType":"ExpressionStatement","src":"1804:188:18"},{"expression":{"arguments":[{"expression":{"id":7372,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2015:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2019:6:18","memberName":"sender","nodeType":"MemberAccess","src":"2015:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7374,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7336,"src":"2027:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7371,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[919,949],"referencedDeclaration":919,"src":"2005:9:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":7375,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2005:30:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7376,"nodeType":"ExpressionStatement","src":"2005:30:18"},{"expression":{"id":7377,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7336,"src":"2057:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7334,"id":7378,"nodeType":"Return","src":"2050:14:18"}]},"functionSelector":"64fd8894","id":7380,"implemented":true,"kind":"function","modifiers":[],"name":"mint","nameLocation":"1443:4:18","nodeType":"FunctionDefinition","parameters":{"id":7331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7322,"mutability":"mutable","name":"wearables","nameLocation":"1468:9:18","nodeType":"VariableDeclaration","scope":7380,"src":"1449:28:18","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":7320,"name":"uint256","nodeType":"ElementaryTypeName","src":"1449:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7321,"nodeType":"ArrayTypeName","src":"1449:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":7324,"mutability":"mutable","name":"laziness","nameLocation":"1488:8:18","nodeType":"VariableDeclaration","scope":7380,"src":"1479:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7323,"name":"uint256","nodeType":"ElementaryTypeName","src":"1479:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7326,"mutability":"mutable","name":"speed","nameLocation":"1507:5:18","nodeType":"VariableDeclaration","scope":7380,"src":"1498:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7325,"name":"uint256","nodeType":"ElementaryTypeName","src":"1498:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7328,"mutability":"mutable","name":"isTalkative","nameLocation":"1524:11:18","nodeType":"VariableDeclaration","scope":7380,"src":"1515:20:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7327,"name":"uint256","nodeType":"ElementaryTypeName","src":"1515:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7330,"mutability":"mutable","name":"base64uri","nameLocation":"1553:9:18","nodeType":"VariableDeclaration","scope":7380,"src":"1537:25:18","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":7329,"name":"string","nodeType":"ElementaryTypeName","src":"1537:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1447:116:18"},"returnParameters":{"id":7334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7333,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7380,"src":"1580:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7332,"name":"uint256","nodeType":"ElementaryTypeName","src":"1580:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1579:9:18"},"scope":7512,"src":"1434:638:18","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7414,"nodeType":"Block","src":"2161:257:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7389,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7382,"src":"2180:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7390,"name":"_nextTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7246,"src":"2191:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":7391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2204:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2191:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2180:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5765617261626c652075706461746520666f72206e6f6e6578697374656e7420746f6b656e","id":7394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2207:39:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_370a1212bd32de3db3dd9ad789e1669a7861543e8880080a528332490d0b9ede","typeString":"literal_string \"Wearable update for nonexistent token\""},"value":"Wearable update for nonexistent token"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_370a1212bd32de3db3dd9ad789e1669a7861543e8880080a528332490d0b9ede","typeString":"literal_string \"Wearable update for nonexistent token\""}],"id":7388,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2172:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7395,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2172:75:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7396,"nodeType":"ExpressionStatement","src":"2172:75:18"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7399,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7382,"src":"2274:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7398,"name":"ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":426,"src":"2266:7:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":7400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2266:16:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":7401,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2286:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2290:6:18","memberName":"sender","nodeType":"MemberAccess","src":"2286:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2266:30:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c7920746865206f776e65722063616e20757064617465207765617261626c6573","id":7404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2298:37:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_e3626cd243f5f3fa10d62483928383e00105ae4b5748fb0ad03c739d1ad8d3e6","typeString":"literal_string \"Only the owner can update wearables\""},"value":"Only the owner can update wearables"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e3626cd243f5f3fa10d62483928383e00105ae4b5748fb0ad03c739d1ad8d3e6","typeString":"literal_string \"Only the owner can update wearables\""}],"id":7397,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2258:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2258:78:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7406,"nodeType":"ExpressionStatement","src":"2258:78:18"},{"expression":{"arguments":[{"id":7410,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7382,"src":"2389:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7411,"name":"wearableIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7385,"src":"2398:11:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}],"expression":{"id":7407,"name":"contractSkybudsMetadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7249,"src":"2349:23:18","typeDescriptions":{"typeIdentifier":"t_contract$_SkyBudsMetadata_$8014","typeString":"contract SkyBudsMetadata"}},"id":7409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2373:15:18","memberName":"updateWearables","nodeType":"MemberAccess","referencedDeclaration":7955,"src":"2349:39:18","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (uint256,uint256[] memory) external"}},"id":7412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2349:61:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7413,"nodeType":"ExpressionStatement","src":"2349:61:18"}]},"functionSelector":"6ae83f79","id":7415,"implemented":true,"kind":"function","modifiers":[],"name":"updateWearables","nameLocation":"2089:15:18","nodeType":"FunctionDefinition","parameters":{"id":7386,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7382,"mutability":"mutable","name":"tokenId","nameLocation":"2113:7:18","nodeType":"VariableDeclaration","scope":7415,"src":"2105:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7381,"name":"uint256","nodeType":"ElementaryTypeName","src":"2105:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7385,"mutability":"mutable","name":"wearableIds","nameLocation":"2141:11:18","nodeType":"VariableDeclaration","scope":7415,"src":"2122:30:18","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":7383,"name":"uint256","nodeType":"ElementaryTypeName","src":"2122:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7384,"nodeType":"ArrayTypeName","src":"2122:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2104:49:18"},"returnParameters":{"id":7387,"nodeType":"ParameterList","parameters":[],"src":"2161:0:18"},"scope":7512,"src":"2080:338:18","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7461,"nodeType":"Block","src":"2512:332:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7425,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7417,"src":"2531:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7426,"name":"_nextTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7246,"src":"2542:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":7427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2555:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2542:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2531:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5765617261626c652075706461746520666f72206e6f6e6578697374656e7420746f6b656e","id":7430,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2558:39:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_370a1212bd32de3db3dd9ad789e1669a7861543e8880080a528332490d0b9ede","typeString":"literal_string \"Wearable update for nonexistent token\""},"value":"Wearable update for nonexistent token"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_370a1212bd32de3db3dd9ad789e1669a7861543e8880080a528332490d0b9ede","typeString":"literal_string \"Wearable update for nonexistent token\""}],"id":7424,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2523:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2523:75:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7432,"nodeType":"ExpressionStatement","src":"2523:75:18"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7435,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7417,"src":"2625:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7434,"name":"ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":426,"src":"2617:7:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":7436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2617:16:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":7437,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2637:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2641:6:18","memberName":"sender","nodeType":"MemberAccess","src":"2637:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2617:30:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c7920746865206f776e65722063616e20757064617465207765617261626c6573","id":7440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2649:37:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_e3626cd243f5f3fa10d62483928383e00105ae4b5748fb0ad03c739d1ad8d3e6","typeString":"literal_string \"Only the owner can update wearables\""},"value":"Only the owner can update wearables"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e3626cd243f5f3fa10d62483928383e00105ae4b5748fb0ad03c739d1ad8d3e6","typeString":"literal_string \"Only the owner can update wearables\""}],"id":7433,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2609:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2609:78:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7442,"nodeType":"ExpressionStatement","src":"2609:78:18"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":7446,"name":"base64Uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7419,"src":"2712:9:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":7445,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2706:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":7444,"name":"bytes","nodeType":"ElementaryTypeName","src":"2706:5:18","typeDescriptions":{}}},"id":7447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2706:16:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":7448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2723:6:18","memberName":"length","nodeType":"MemberAccess","src":"2706:23:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7449,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2732:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2706:27:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"426173653634205552492063616e6e6f7420626520656d707479","id":7451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2735:28:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_c519b308913a9a0e7e2ec9c5e42b999728ea2c183ab718a9c899ecfb2d7aae0f","typeString":"literal_string \"Base64 URI cannot be empty\""},"value":"Base64 URI cannot be empty"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c519b308913a9a0e7e2ec9c5e42b999728ea2c183ab718a9c899ecfb2d7aae0f","typeString":"literal_string \"Base64 URI cannot be empty\""}],"id":7443,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2698:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7452,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2698:66:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7453,"nodeType":"ExpressionStatement","src":"2698:66:18"},{"expression":{"arguments":[{"id":7457,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7417,"src":"2817:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7458,"name":"base64Uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7419,"src":"2826:9:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":7454,"name":"contractSkybudsMetadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7249,"src":"2777:23:18","typeDescriptions":{"typeIdentifier":"t_contract$_SkyBudsMetadata_$8014","typeString":"contract SkyBudsMetadata"}},"id":7456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2801:15:18","memberName":"updateBase64Uri","nodeType":"MemberAccess","referencedDeclaration":7986,"src":"2777:39:18","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,string memory) external"}},"id":7459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2777:59:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7460,"nodeType":"ExpressionStatement","src":"2777:59:18"}]},"functionSelector":"32d236a6","id":7462,"implemented":true,"kind":"function","modifiers":[{"arguments":[],"id":7422,"kind":"modifierInvocation","modifierName":{"id":7421,"name":"onlyOwner","nameLocations":["2500:9:18"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2500:9:18"},"nodeType":"ModifierInvocation","src":"2500:11:18"}],"name":"updateBase64Uri","nameLocation":"2435:15:18","nodeType":"FunctionDefinition","parameters":{"id":7420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7417,"mutability":"mutable","name":"tokenId","nameLocation":"2459:7:18","nodeType":"VariableDeclaration","scope":7462,"src":"2451:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7416,"name":"uint256","nodeType":"ElementaryTypeName","src":"2451:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7419,"mutability":"mutable","name":"base64Uri","nameLocation":"2482:9:18","nodeType":"VariableDeclaration","scope":7462,"src":"2468:23:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7418,"name":"string","nodeType":"ElementaryTypeName","src":"2468:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2450:42:18"},"returnParameters":{"id":7423,"nodeType":"ParameterList","parameters":[],"src":"2512:0:18"},"scope":7512,"src":"2426:418:18","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7510,"nodeType":"Block","src":"3072:383:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7479,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7464,"src":"3091:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7480,"name":"_nextTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7246,"src":"3102:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":7481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3115:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3102:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3091:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d657461646174612075706461746520666f72206e6f6e6578697374656e7420746f6b656e","id":7484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3118:39:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_84b2da29af5b4a1e03c0c94acd5f4509f40370d04bdb00b12f6be95e467e4879","typeString":"literal_string \"Metadata update for nonexistent token\""},"value":"Metadata update for nonexistent token"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_84b2da29af5b4a1e03c0c94acd5f4509f40370d04bdb00b12f6be95e467e4879","typeString":"literal_string \"Metadata update for nonexistent token\""}],"id":7478,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"3083:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3083:75:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7486,"nodeType":"ExpressionStatement","src":"3083:75:18"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7489,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7464,"src":"3185:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7488,"name":"ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":426,"src":"3177:7:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":7490,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3177:16:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":7491,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3197:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3201:6:18","memberName":"sender","nodeType":"MemberAccess","src":"3197:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3177:30:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c7920746865206f776e65722063616e20757064617465206d65746164617461","id":7494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3209:36:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_a8bcaa1d15f041cbda427bb155602e1b55ed9bb019373b17494fae206112b7af","typeString":"literal_string \"Only the owner can update metadata\""},"value":"Only the owner can update metadata"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a8bcaa1d15f041cbda427bb155602e1b55ed9bb019373b17494fae206112b7af","typeString":"literal_string \"Only the owner can update metadata\""}],"id":7487,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"3169:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3169:77:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7496,"nodeType":"ExpressionStatement","src":"3169:77:18"},{"expression":{"arguments":[{"id":7500,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7464,"src":"3309:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7501,"name":"wearables","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7467,"src":"3331:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7502,"name":"isTalkative","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7473,"src":"3355:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":7503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3368:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3355:14:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":7505,"name":"speed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7471,"src":"3384:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7506,"name":"laziness","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7469,"src":"3404:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7507,"name":"base64uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7475,"src":"3427:9:18","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}],"expression":{"id":7497,"name":"contractSkybudsMetadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7249,"src":"3259:23:18","typeDescriptions":{"typeIdentifier":"t_contract$_SkyBudsMetadata_$8014","typeString":"contract SkyBudsMetadata"}},"id":7499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3283:11:18","memberName":"setMetadata","nodeType":"MemberAccess","referencedDeclaration":7607,"src":"3259:35:18","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bool_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,uint256[] memory,bool,uint256,uint256,string memory) external"}},"id":7508,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3259:188:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7509,"nodeType":"ExpressionStatement","src":"3259:188:18"}]},"functionSelector":"46119f8e","id":7511,"implemented":true,"kind":"function","modifiers":[],"name":"updateMetadata","nameLocation":"2861:14:18","nodeType":"FunctionDefinition","parameters":{"id":7476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7464,"mutability":"mutable","name":"tokenId","nameLocation":"2894:7:18","nodeType":"VariableDeclaration","scope":7511,"src":"2886:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7463,"name":"uint256","nodeType":"ElementaryTypeName","src":"2886:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7467,"mutability":"mutable","name":"wearables","nameLocation":"2931:9:18","nodeType":"VariableDeclaration","scope":7511,"src":"2912:28:18","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":7465,"name":"uint256","nodeType":"ElementaryTypeName","src":"2912:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7466,"nodeType":"ArrayTypeName","src":"2912:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":7469,"mutability":"mutable","name":"laziness","nameLocation":"2959:8:18","nodeType":"VariableDeclaration","scope":7511,"src":"2951:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7468,"name":"uint256","nodeType":"ElementaryTypeName","src":"2951:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7471,"mutability":"mutable","name":"speed","nameLocation":"2986:5:18","nodeType":"VariableDeclaration","scope":7511,"src":"2978:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7470,"name":"uint256","nodeType":"ElementaryTypeName","src":"2978:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7473,"mutability":"mutable","name":"isTalkative","nameLocation":"3010:11:18","nodeType":"VariableDeclaration","scope":7511,"src":"3002:19:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7472,"name":"uint256","nodeType":"ElementaryTypeName","src":"3002:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7475,"mutability":"mutable","name":"base64uri","nameLocation":"3048:9:18","nodeType":"VariableDeclaration","scope":7511,"src":"3032:25:18","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":7474,"name":"string","nodeType":"ElementaryTypeName","src":"3032:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2875:189:18"},"returnParameters":{"id":7477,"nodeType":"ParameterList","parameters":[],"src":"3072:0:18"},"scope":7512,"src":"2852:603:18","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":7513,"src":"457:3004:18","usedErrors":[13,18,195,200,209,214,219,226,231,236,1672],"usedEvents":[24,1257,1266,1275]}],"src":"59:3402:18"},"id":18},"contracts/SkybudsMetadata.sol":{"ast":{"absolutePath":"contracts/SkybudsMetadata.sol","exportedSymbols":{"Context":[1606],"MetadataEncoding":[7225],"Ownable":[147],"SkyBudsMetadata":[8014]},"id":8015,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7514,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:19"},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":7515,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8015,"sourceUnit":148,"src":"58:52:19","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/MetadataEncoding.sol","file":"./MetadataEncoding.sol","id":7516,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8015,"sourceUnit":7226,"src":"112:32:19","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":7517,"name":"MetadataEncoding","nameLocations":["209:16:19"],"nodeType":"IdentifierPath","referencedDeclaration":7225,"src":"209:16:19"},"id":7518,"nodeType":"InheritanceSpecifier","src":"209:16:19"},{"baseName":{"id":7519,"name":"Ownable","nameLocations":["226:7:19"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"226:7:19"},"id":7520,"nodeType":"InheritanceSpecifier","src":"226:7:19"}],"canonicalName":"SkyBudsMetadata","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":8014,"linearizedBaseContracts":[8014,147,1606,7225],"name":"SkyBudsMetadata","nameLocation":"190:15:19","nodeType":"ContractDefinition","nodes":[{"canonicalName":"SkyBudsMetadata.SkyBudData","id":7527,"members":[{"constant":false,"id":7522,"mutability":"mutable","name":"encodedMetadata","nameLocation":"331:15:19","nodeType":"VariableDeclaration","scope":7527,"src":"323:23:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7521,"name":"uint256","nodeType":"ElementaryTypeName","src":"323:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7524,"mutability":"mutable","name":"base64Uri","nameLocation":"364:9:19","nodeType":"VariableDeclaration","scope":7527,"src":"357:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":7523,"name":"string","nodeType":"ElementaryTypeName","src":"357:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7526,"mutability":"mutable","name":"exists","nameLocation":"389:6:19","nodeType":"VariableDeclaration","scope":7527,"src":"384:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7525,"name":"bool","nodeType":"ElementaryTypeName","src":"384:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"SkyBudData","nameLocation":"301:10:19","nodeType":"StructDefinition","scope":8014,"src":"294:109:19","visibility":"public"},{"constant":false,"id":7532,"mutability":"mutable","name":"_tokenMetadata","nameLocation":"497:14:19","nodeType":"VariableDeclaration","scope":8014,"src":"458:53:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_SkyBudData_$7527_storage_$","typeString":"mapping(uint256 => struct SkyBudsMetadata.SkyBudData)"},"typeName":{"id":7531,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":7528,"name":"uint256","nodeType":"ElementaryTypeName","src":"466:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"458:30:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_SkyBudData_$7527_storage_$","typeString":"mapping(uint256 => struct SkyBudsMetadata.SkyBudData)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":7530,"nodeType":"UserDefinedTypeName","pathNode":{"id":7529,"name":"SkyBudData","nameLocations":["477:10:19"],"nodeType":"IdentifierPath","referencedDeclaration":7527,"src":"477:10:19"},"referencedDeclaration":7527,"src":"477:10:19","typeDescriptions":{"typeIdentifier":"t_struct$_SkyBudData_$7527_storage_ptr","typeString":"struct SkyBudsMetadata.SkyBudData"}}},"visibility":"private"},{"anonymous":false,"eventSelector":"8a9307e5e4fabae00de1b406aebeef87de6d231e52fe8251c01ff274b8f79bbc","id":7540,"name":"MetadataUpdated","nameLocation":"577:15:19","nodeType":"EventDefinition","parameters":{"id":7539,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7534,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"609:7:19","nodeType":"VariableDeclaration","scope":7540,"src":"593:23:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7533,"name":"uint256","nodeType":"ElementaryTypeName","src":"593:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7536,"indexed":false,"mutability":"mutable","name":"encodedMetadata","nameLocation":"626:15:19","nodeType":"VariableDeclaration","scope":7540,"src":"618:23:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7535,"name":"uint256","nodeType":"ElementaryTypeName","src":"618:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7538,"indexed":false,"mutability":"mutable","name":"base64Uri","nameLocation":"650:9:19","nodeType":"VariableDeclaration","scope":7540,"src":"643:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7537,"name":"string","nodeType":"ElementaryTypeName","src":"643:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"592:68:19"},"src":"571:90:19"},{"body":{"id":7548,"nodeType":"Block","src":"729:10:19","statements":[]},"id":7549,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":7545,"name":"skyBudContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7542,"src":"713:14:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":7546,"kind":"baseConstructorSpecifier","modifierName":{"id":7544,"name":"Ownable","nameLocations":["705:7:19"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"705:7:19"},"nodeType":"ModifierInvocation","src":"705:23:19"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":7543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7542,"mutability":"mutable","name":"skyBudContract","nameLocation":"689:14:19","nodeType":"VariableDeclaration","scope":7549,"src":"681:22:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7541,"name":"address","nodeType":"ElementaryTypeName","src":"681:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"680:24:19"},"returnParameters":{"id":7547,"nodeType":"ParameterList","parameters":[],"src":"729:0:19"},"scope":8014,"src":"669:70:19","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7562,"nodeType":"Block","src":"817:110:19","statements":[{"expression":{"arguments":[{"expression":{"baseExpression":{"id":7554,"name":"_tokenMetadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7532,"src":"836:14:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_SkyBudData_$7527_storage_$","typeString":"mapping(uint256 => struct SkyBudsMetadata.SkyBudData storage ref)"}},"id":7556,"indexExpression":{"id":7555,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7551,"src":"851:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"836:23:19","typeDescriptions":{"typeIdentifier":"t_struct$_SkyBudData_$7527_storage","typeString":"struct SkyBudsMetadata.SkyBudData storage ref"}},"id":7557,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"860:6:19","memberName":"exists","nodeType":"MemberAccess","referencedDeclaration":7526,"src":"836:30:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"536b794275644d657461646174613a20546f6b656e20646f6573206e6f74206578697374","id":7558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"868:38:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_ad0023f80c2fa88a8e66b8ea33baef1091e4f4b2f43ecee1b4f83bfe1981e5bc","typeString":"literal_string \"SkyBudMetadata: Token does not exist\""},"value":"SkyBudMetadata: Token does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ad0023f80c2fa88a8e66b8ea33baef1091e4f4b2f43ecee1b4f83bfe1981e5bc","typeString":"literal_string \"SkyBudMetadata: Token does not exist\""}],"id":7553,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"828:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7559,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"828:79:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7560,"nodeType":"ExpressionStatement","src":"828:79:19"},{"id":7561,"nodeType":"PlaceholderStatement","src":"918:1:19"}]},"id":7563,"name":"tokenExists","nameLocation":"788:11:19","nodeType":"ModifierDefinition","parameters":{"id":7552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7551,"mutability":"mutable","name":"tokenId","nameLocation":"808:7:19","nodeType":"VariableDeclaration","scope":7563,"src":"800:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7550,"name":"uint256","nodeType":"ElementaryTypeName","src":"800:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"799:17:19"},"src":"779:148:19","virtual":false,"visibility":"internal"},{"body":{"id":7606,"nodeType":"Block","src":"1196:459:19","statements":[{"assignments":[7582],"declarations":[{"constant":false,"id":7582,"mutability":"mutable","name":"encodedMetadata","nameLocation":"1276:15:19","nodeType":"VariableDeclaration","scope":7606,"src":"1268:23:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7581,"name":"uint256","nodeType":"ElementaryTypeName","src":"1268:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7589,"initialValue":{"arguments":[{"id":7584,"name":"wearableIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7568,"src":"1309:11:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":7585,"name":"isTalkative","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7570,"src":"1322:11:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":7586,"name":"speed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7572,"src":"1335:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7587,"name":"laziness","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7574,"src":"1342:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7583,"name":"encodeMetadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6864,"src":"1294:14:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256[] memory,bool,uint256,uint256) pure returns (uint256)"}},"id":7588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1294:57:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1268:83:19"},{"expression":{"id":7598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7590,"name":"_tokenMetadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7532,"src":"1411:14:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_SkyBudData_$7527_storage_$","typeString":"mapping(uint256 => struct SkyBudsMetadata.SkyBudData storage ref)"}},"id":7592,"indexExpression":{"id":7591,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7565,"src":"1426:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1411:23:19","typeDescriptions":{"typeIdentifier":"t_struct$_SkyBudData_$7527_storage","typeString":"struct SkyBudsMetadata.SkyBudData storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7594,"name":"encodedMetadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7582,"src":"1480:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7595,"name":"base64Uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7576,"src":"1521:9:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"74727565","id":7596,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1553:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":7593,"name":"SkyBudData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7527,"src":"1437:10:19","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_SkyBudData_$7527_storage_ptr_$","typeString":"type(struct SkyBudsMetadata.SkyBudData storage pointer)"}},"id":7597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["1463:15:19","1510:9:19","1545:6:19"],"names":["encodedMetadata","base64Uri","exists"],"nodeType":"FunctionCall","src":"1437:132:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_SkyBudData_$7527_memory_ptr","typeString":"struct SkyBudsMetadata.SkyBudData memory"}},"src":"1411:158:19","typeDescriptions":{"typeIdentifier":"t_struct$_SkyBudData_$7527_storage","typeString":"struct SkyBudsMetadata.SkyBudData storage ref"}},"id":7599,"nodeType":"ExpressionStatement","src":"1411:158:19"},{"eventCall":{"arguments":[{"id":7601,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7565,"src":"1611:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7602,"name":"encodedMetadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7582,"src":"1620:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7603,"name":"base64Uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7576,"src":"1637:9:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":7600,"name":"MetadataUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7540,"src":"1595:15:19","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,uint256,string memory)"}},"id":7604,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1595:52:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7605,"nodeType":"EmitStatement","src":"1590:57:19"}]},"functionSelector":"77586126","id":7607,"implemented":true,"kind":"function","modifiers":[{"arguments":[],"id":7579,"kind":"modifierInvocation","modifierName":{"id":7578,"name":"onlyOwner","nameLocations":["1184:9:19"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"1184:9:19"},"nodeType":"ModifierInvocation","src":"1184:11:19"}],"name":"setMetadata","nameLocation":"981:11:19","nodeType":"FunctionDefinition","parameters":{"id":7577,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7565,"mutability":"mutable","name":"tokenId","nameLocation":"1011:7:19","nodeType":"VariableDeclaration","scope":7607,"src":"1003:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7564,"name":"uint256","nodeType":"ElementaryTypeName","src":"1003:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7568,"mutability":"mutable","name":"wearableIds","nameLocation":"1046:11:19","nodeType":"VariableDeclaration","scope":7607,"src":"1029:28:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":7566,"name":"uint256","nodeType":"ElementaryTypeName","src":"1029:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7567,"nodeType":"ArrayTypeName","src":"1029:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":7570,"mutability":"mutable","name":"isTalkative","nameLocation":"1073:11:19","nodeType":"VariableDeclaration","scope":7607,"src":"1068:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7569,"name":"bool","nodeType":"ElementaryTypeName","src":"1068:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":7572,"mutability":"mutable","name":"speed","nameLocation":"1103:5:19","nodeType":"VariableDeclaration","scope":7607,"src":"1095:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7571,"name":"uint256","nodeType":"ElementaryTypeName","src":"1095:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7574,"mutability":"mutable","name":"laziness","nameLocation":"1127:8:19","nodeType":"VariableDeclaration","scope":7607,"src":"1119:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7573,"name":"uint256","nodeType":"ElementaryTypeName","src":"1119:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7576,"mutability":"mutable","name":"base64Uri","nameLocation":"1160:9:19","nodeType":"VariableDeclaration","scope":7607,"src":"1146:23:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7575,"name":"string","nodeType":"ElementaryTypeName","src":"1146:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"992:184:19"},"returnParameters":{"id":7580,"nodeType":"ParameterList","parameters":[],"src":"1196:0:19"},"scope":8014,"src":"972:683:19","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7682,"nodeType":"Block","src":"1816:1181:19","statements":[{"assignments":[7619],"declarations":[{"constant":false,"id":7619,"mutability":"mutable","name":"data","nameLocation":"1846:4:19","nodeType":"VariableDeclaration","scope":7682,"src":"1827:23:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_SkyBudData_$7527_storage_ptr","typeString":"struct SkyBudsMetadata.SkyBudData"},"typeName":{"id":7618,"nodeType":"UserDefinedTypeName","pathNode":{"id":7617,"name":"SkyBudData","nameLocations":["1827:10:19"],"nodeType":"IdentifierPath","referencedDeclaration":7527,"src":"1827:10:19"},"referencedDeclaration":7527,"src":"1827:10:19","typeDescriptions":{"typeIdentifier":"t_struct$_SkyBudData_$7527_storage_ptr","typeString":"struct SkyBudsMetadata.SkyBudData"}},"visibility":"internal"}],"id":7623,"initialValue":{"baseExpression":{"id":7620,"name":"_tokenMetadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7532,"src":"1853:14:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_SkyBudData_$7527_storage_$","typeString":"mapping(uint256 => struct SkyBudsMetadata.SkyBudData storage ref)"}},"id":7622,"indexExpression":{"id":7621,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7609,"src":"1868:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1853:23:19","typeDescriptions":{"typeIdentifier":"t_struct$_SkyBudData_$7527_storage","typeString":"struct SkyBudsMetadata.SkyBudData storage ref"}},"nodeType":"VariableDeclarationStatement","src":"1827:49:19"},{"assignments":[7625],"declarations":[{"constant":false,"id":7625,"mutability":"mutable","name":"isTalkative_","nameLocation":"1930:12:19","nodeType":"VariableDeclaration","scope":7682,"src":"1925:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7624,"name":"bool","nodeType":"ElementaryTypeName","src":"1925:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":7630,"initialValue":{"arguments":[{"expression":{"id":7627,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7619,"src":"1957:4:19","typeDescriptions":{"typeIdentifier":"t_struct$_SkyBudData_$7527_storage_ptr","typeString":"struct SkyBudsMetadata.SkyBudData storage pointer"}},"id":7628,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1962:15:19","memberName":"encodedMetadata","nodeType":"MemberAccess","referencedDeclaration":7522,"src":"1957:20:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7626,"name":"isTalkative","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7831,"src":"1945:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":7629,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1945:33:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"1925:53:19"},{"assignments":[7632],"declarations":[{"constant":false,"id":7632,"mutability":"mutable","name":"speedValue","nameLocation":"1997:10:19","nodeType":"VariableDeclaration","scope":7682,"src":"1989:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7631,"name":"uint256","nodeType":"ElementaryTypeName","src":"1989:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7636,"initialValue":{"arguments":[{"id":7634,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7609,"src":"2019:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7633,"name":"getSpeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7849,"src":"2010:8:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":7635,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2010:17:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1989:38:19"},{"assignments":[7638],"declarations":[{"constant":false,"id":7638,"mutability":"mutable","name":"lazinessValue","nameLocation":"2046:13:19","nodeType":"VariableDeclaration","scope":7682,"src":"2038:21:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7637,"name":"uint256","nodeType":"ElementaryTypeName","src":"2038:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7642,"initialValue":{"arguments":[{"id":7640,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7609,"src":"2074:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7639,"name":"getLaziness","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7885,"src":"2062:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":7641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2062:20:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2038:44:19"},{"assignments":[7644],"declarations":[{"constant":false,"id":7644,"mutability":"mutable","name":"tokenIdString","nameLocation":"2155:13:19","nodeType":"VariableDeclaration","scope":7682,"src":"2141:27:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7643,"name":"string","nodeType":"ElementaryTypeName","src":"2141:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":7648,"initialValue":{"arguments":[{"id":7646,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7609,"src":"2180:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7645,"name":"uint2str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7095,"src":"2171:8:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":7647,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2171:17:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2141:47:19"},{"expression":{"arguments":[{"arguments":[{"hexValue":"646174613a6170706c69636174696f6e2f6a736f6e3b757466382c7b226e616d65223a22536b796275642023","id":7653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2329:46:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_191d913816b53101496d2cc8b3fe8393e3293e9b060e72d6ae6a85363b018e8d","typeString":"literal_string \"data:application/json;utf8,{\"name\":\"Skybud #\""},"value":"data:application/json;utf8,{\"name\":\"Skybud #"},{"id":7654,"name":"tokenIdString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7644,"src":"2377:13:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"222c","id":7655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2392:4:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_24823e6fed9f46f380d33960e511caeb002037c5a4e9735154809fa36b166ffb","typeString":"literal_string \"\",\""},"value":"\","},{"hexValue":"226465736372697074696f6e223a226d79206c6974746c652064756465222c","id":7656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2415:33:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_3f12c55cb36edfc4320f5b193bdf81c976efdba2d55d477221050c60b0033d42","typeString":"literal_string \"\"description\":\"my little dude\",\""},"value":"\"description\":\"my little dude\","},{"hexValue":"22746f6b656e4964223a22","id":7657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2467:13:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_61fe736c32b789431aea06b6d714ffbd66912216d12f35d904dcb0304c9685b5","typeString":"literal_string \"\"tokenId\":\"\""},"value":"\"tokenId\":\""},{"id":7658,"name":"tokenIdString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7644,"src":"2482:13:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"222c","id":7659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2497:4:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_24823e6fed9f46f380d33960e511caeb002037c5a4e9735154809fa36b166ffb","typeString":"literal_string \"\",\""},"value":"\","},{"hexValue":"22696d616765223a22646174613a696d6167652f7376672b786d6c3b6261736536342c","id":7660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2520:37:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_eac7448fa59c2192dd4eca63f24bc34984cfb1c2915de724178c4b4446c852ca","typeString":"literal_string \"\"image\":\"data:image/svg+xml;base64,\""},"value":"\"image\":\"data:image/svg+xml;base64,"},{"expression":{"id":7661,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7619,"src":"2559:4:19","typeDescriptions":{"typeIdentifier":"t_struct$_SkyBudData_$7527_storage_ptr","typeString":"struct SkyBudsMetadata.SkyBudData storage pointer"}},"id":7662,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2564:9:19","memberName":"base64Uri","nodeType":"MemberAccess","referencedDeclaration":7524,"src":"2559:14:19","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},{"hexValue":"222c","id":7663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2575:4:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_24823e6fed9f46f380d33960e511caeb002037c5a4e9735154809fa36b166ffb","typeString":"literal_string \"\",\""},"value":"\","},{"hexValue":"2265787465726e616c5f75726c223a2268747470733a2f2f736b79627564732e62656e6a796c6172636865722e636f6d2f222c","id":7664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2598:53:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_2c1888e8035424c30972c21f1f51d6a793c456f19e78e3eb33c873c4ea36f9a4","typeString":"literal_string \"\"external_url\":\"https://skybuds.benjylarcher.com/\",\""},"value":"\"external_url\":\"https://skybuds.benjylarcher.com/\","},{"hexValue":"2261747472696275746573223a5b","id":7665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2670:16:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_fae5f698d2c3462fc5dd818af0f930c00a691ac3968407e92c6f5d64f16b49da","typeString":"literal_string \"\"attributes\":[\""},"value":"\"attributes\":["},{"hexValue":"7b2274726169745f74797065223a2269735f74616c6b6174697665222c2276616c7565223a","id":7666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2709:39:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_209fe1b49e529d9c5482b4d33e1b7b4ffff4259999454841afb0cf6b211d0065","typeString":"literal_string \"{\"trait_type\":\"is_talkative\",\"value\":\""},"value":"{\"trait_type\":\"is_talkative\",\"value\":"},{"condition":{"id":7667,"name":"isTalkative_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7625,"src":"2750:12:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"66616c7365","id":7669,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2774:7:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_ba9154e0baa69c78e0ca563b867df81bae9d177c4ea1452c35c84386a70f0f7a","typeString":"literal_string \"false\""},"value":"false"},"id":7670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2750:31:19","trueExpression":{"hexValue":"74727565","id":7668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2765:6:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_6273151f959616268004b58dbb21e5c851b7b8d04498b4aabee12291d22fc034","typeString":"literal_string \"true\""},"value":"true"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"7d2c","id":7671,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2783:4:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_043d10307ea9a3ca4a22c8358058fff9992703975fa43277b13c1cc3acef8145","typeString":"literal_string \"},\""},"value":"},"},{"hexValue":"7b2274726169745f74797065223a227370656564222c2276616c7565223a","id":7672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2810:32:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_28cc562ffbd1b02ba02f36ecf45d23230a0f4fc4d74af69420bb3dea23685f48","typeString":"literal_string \"{\"trait_type\":\"speed\",\"value\":\""},"value":"{\"trait_type\":\"speed\",\"value\":"},{"id":7673,"name":"speedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7632,"src":"2844:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"7d2c","id":7674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2856:4:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_043d10307ea9a3ca4a22c8358058fff9992703975fa43277b13c1cc3acef8145","typeString":"literal_string \"},\""},"value":"},"},{"hexValue":"7b2274726169745f74797065223a226c617a696e657373222c2276616c7565223a","id":7675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2883:35:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_5a6adde0af06857b858718e4d88313fe573fb1552347692a62f651e0041093e8","typeString":"literal_string \"{\"trait_type\":\"laziness\",\"value\":\""},"value":"{\"trait_type\":\"laziness\",\"value\":"},{"id":7676,"name":"lazinessValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7638,"src":"2920:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"7d","id":7677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2935:3:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_8e2ffa389f3a6ded42d759b3377ac0d928e6a268d143bcc9517093d10c843bff","typeString":"literal_string \"}\""},"value":"}"},{"hexValue":"5d7d","id":7678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2957:4:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_ab149d31dbf8c3ed1cc7ba15c88205185e426c492b6b350058945b7266ec7e76","typeString":"literal_string \"]}\""},"value":"]}"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_191d913816b53101496d2cc8b3fe8393e3293e9b060e72d6ae6a85363b018e8d","typeString":"literal_string \"data:application/json;utf8,{\"name\":\"Skybud #\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_24823e6fed9f46f380d33960e511caeb002037c5a4e9735154809fa36b166ffb","typeString":"literal_string \"\",\""},{"typeIdentifier":"t_stringliteral_3f12c55cb36edfc4320f5b193bdf81c976efdba2d55d477221050c60b0033d42","typeString":"literal_string \"\"description\":\"my little dude\",\""},{"typeIdentifier":"t_stringliteral_61fe736c32b789431aea06b6d714ffbd66912216d12f35d904dcb0304c9685b5","typeString":"literal_string \"\"tokenId\":\"\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_24823e6fed9f46f380d33960e511caeb002037c5a4e9735154809fa36b166ffb","typeString":"literal_string \"\",\""},{"typeIdentifier":"t_stringliteral_eac7448fa59c2192dd4eca63f24bc34984cfb1c2915de724178c4b4446c852ca","typeString":"literal_string \"\"image\":\"data:image/svg+xml;base64,\""},{"typeIdentifier":"t_string_storage","typeString":"string storage ref"},{"typeIdentifier":"t_stringliteral_24823e6fed9f46f380d33960e511caeb002037c5a4e9735154809fa36b166ffb","typeString":"literal_string \"\",\""},{"typeIdentifier":"t_stringliteral_2c1888e8035424c30972c21f1f51d6a793c456f19e78e3eb33c873c4ea36f9a4","typeString":"literal_string \"\"external_url\":\"https://skybuds.benjylarcher.com/\",\""},{"typeIdentifier":"t_stringliteral_fae5f698d2c3462fc5dd818af0f930c00a691ac3968407e92c6f5d64f16b49da","typeString":"literal_string \"\"attributes\":[\""},{"typeIdentifier":"t_stringliteral_209fe1b49e529d9c5482b4d33e1b7b4ffff4259999454841afb0cf6b211d0065","typeString":"literal_string \"{\"trait_type\":\"is_talkative\",\"value\":\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_043d10307ea9a3ca4a22c8358058fff9992703975fa43277b13c1cc3acef8145","typeString":"literal_string \"},\""},{"typeIdentifier":"t_stringliteral_28cc562ffbd1b02ba02f36ecf45d23230a0f4fc4d74af69420bb3dea23685f48","typeString":"literal_string \"{\"trait_type\":\"speed\",\"value\":\""},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_043d10307ea9a3ca4a22c8358058fff9992703975fa43277b13c1cc3acef8145","typeString":"literal_string \"},\""},{"typeIdentifier":"t_stringliteral_5a6adde0af06857b858718e4d88313fe573fb1552347692a62f651e0041093e8","typeString":"literal_string \"{\"trait_type\":\"laziness\",\"value\":\""},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_8e2ffa389f3a6ded42d759b3377ac0d928e6a268d143bcc9517093d10c843bff","typeString":"literal_string \"}\""},{"typeIdentifier":"t_stringliteral_ab149d31dbf8c3ed1cc7ba15c88205185e426c492b6b350058945b7266ec7e76","typeString":"literal_string \"]}\""}],"expression":{"id":7651,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2294:3:19","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7652,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2298:12:19","memberName":"encodePacked","nodeType":"MemberAccess","src":"2294:16:19","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":7679,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2294:682:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7650,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2273:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":7649,"name":"string","nodeType":"ElementaryTypeName","src":"2273:6:19","typeDescriptions":{}}},"id":7680,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2273:714:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":7616,"id":7681,"nodeType":"Return","src":"2266:721:19"}]},"functionSelector":"210fa96b","id":7683,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":7612,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7609,"src":"1783:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7613,"kind":"modifierInvocation","modifierName":{"id":7611,"name":"tokenExists","nameLocations":["1771:11:19"],"nodeType":"IdentifierPath","referencedDeclaration":7563,"src":"1771:11:19"},"nodeType":"ModifierInvocation","src":"1771:20:19"}],"name":"generateTokenURI","nameLocation":"1725:16:19","nodeType":"FunctionDefinition","parameters":{"id":7610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7609,"mutability":"mutable","name":"tokenId","nameLocation":"1750:7:19","nodeType":"VariableDeclaration","scope":7683,"src":"1742:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7608,"name":"uint256","nodeType":"ElementaryTypeName","src":"1742:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1741:17:19"},"returnParameters":{"id":7616,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7615,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7683,"src":"1801:13:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7614,"name":"string","nodeType":"ElementaryTypeName","src":"1801:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1800:15:19"},"scope":8014,"src":"1716:1281:19","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":7710,"nodeType":"Block","src":"3202:294:19","statements":[{"expression":{"id":7702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7694,"name":"_tokenMetadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7532,"src":"3252:14:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_SkyBudData_$7527_storage_$","typeString":"mapping(uint256 => struct SkyBudsMetadata.SkyBudData storage ref)"}},"id":7696,"indexExpression":{"id":7695,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7685,"src":"3267:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3252:23:19","typeDescriptions":{"typeIdentifier":"t_struct$_SkyBudData_$7527_storage","typeString":"struct SkyBudsMetadata.SkyBudData storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7698,"name":"encodedMetadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7687,"src":"3321:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7699,"name":"base64Uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7689,"src":"3362:9:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"74727565","id":7700,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3394:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":7697,"name":"SkyBudData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7527,"src":"3278:10:19","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_SkyBudData_$7527_storage_ptr_$","typeString":"type(struct SkyBudsMetadata.SkyBudData storage pointer)"}},"id":7701,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["3304:15:19","3351:9:19","3386:6:19"],"names":["encodedMetadata","base64Uri","exists"],"nodeType":"FunctionCall","src":"3278:132:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_SkyBudData_$7527_memory_ptr","typeString":"struct SkyBudsMetadata.SkyBudData memory"}},"src":"3252:158:19","typeDescriptions":{"typeIdentifier":"t_struct$_SkyBudData_$7527_storage","typeString":"struct SkyBudsMetadata.SkyBudData storage ref"}},"id":7703,"nodeType":"ExpressionStatement","src":"3252:158:19"},{"eventCall":{"arguments":[{"id":7705,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7685,"src":"3452:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7706,"name":"encodedMetadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7687,"src":"3461:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7707,"name":"base64Uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7689,"src":"3478:9:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":7704,"name":"MetadataUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7540,"src":"3436:15:19","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,uint256,string memory)"}},"id":7708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3436:52:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7709,"nodeType":"EmitStatement","src":"3431:57:19"}]},"id":7711,"implemented":true,"kind":"function","modifiers":[{"arguments":[],"id":7692,"kind":"modifierInvocation","modifierName":{"id":7691,"name":"onlyOwner","nameLocations":["3190:9:19"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"3190:9:19"},"nodeType":"ModifierInvocation","src":"3190:11:19"}],"name":"setEncodedMetadata","nameLocation":"3062:18:19","nodeType":"FunctionDefinition","parameters":{"id":7690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7685,"mutability":"mutable","name":"tokenId","nameLocation":"3099:7:19","nodeType":"VariableDeclaration","scope":7711,"src":"3091:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7684,"name":"uint256","nodeType":"ElementaryTypeName","src":"3091:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7687,"mutability":"mutable","name":"encodedMetadata","nameLocation":"3125:15:19","nodeType":"VariableDeclaration","scope":7711,"src":"3117:23:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7686,"name":"uint256","nodeType":"ElementaryTypeName","src":"3117:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7689,"mutability":"mutable","name":"base64Uri","nameLocation":"3165:9:19","nodeType":"VariableDeclaration","scope":7711,"src":"3151:23:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7688,"name":"string","nodeType":"ElementaryTypeName","src":"3151:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3080:101:19"},"returnParameters":{"id":7693,"nodeType":"ParameterList","parameters":[],"src":"3202:0:19"},"scope":8014,"src":"3053:443:19","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":7759,"nodeType":"Block","src":"3822:313:19","statements":[{"assignments":[7734],"declarations":[{"constant":false,"id":7734,"mutability":"mutable","name":"data","nameLocation":"3852:4:19","nodeType":"VariableDeclaration","scope":7759,"src":"3833:23:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_SkyBudData_$7527_storage_ptr","typeString":"struct SkyBudsMetadata.SkyBudData"},"typeName":{"id":7733,"nodeType":"UserDefinedTypeName","pathNode":{"id":7732,"name":"SkyBudData","nameLocations":["3833:10:19"],"nodeType":"IdentifierPath","referencedDeclaration":7527,"src":"3833:10:19"},"referencedDeclaration":7527,"src":"3833:10:19","typeDescriptions":{"typeIdentifier":"t_struct$_SkyBudData_$7527_storage_ptr","typeString":"struct SkyBudsMetadata.SkyBudData"}},"visibility":"internal"}],"id":7738,"initialValue":{"baseExpression":{"id":7735,"name":"_tokenMetadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7532,"src":"3859:14:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_SkyBudData_$7527_storage_$","typeString":"mapping(uint256 => struct SkyBudsMetadata.SkyBudData storage ref)"}},"id":7737,"indexExpression":{"id":7736,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7713,"src":"3874:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3859:23:19","typeDescriptions":{"typeIdentifier":"t_struct$_SkyBudData_$7527_storage","typeString":"struct SkyBudsMetadata.SkyBudData storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3833:49:19"},{"expression":{"id":7742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7739,"name":"encodedMetadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7719,"src":"3893:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":7740,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7734,"src":"3911:4:19","typeDescriptions":{"typeIdentifier":"t_struct$_SkyBudData_$7527_storage_ptr","typeString":"struct SkyBudsMetadata.SkyBudData storage pointer"}},"id":7741,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3916:15:19","memberName":"encodedMetadata","nodeType":"MemberAccess","referencedDeclaration":7522,"src":"3911:20:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3893:38:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7743,"nodeType":"ExpressionStatement","src":"3893:38:19"},{"expression":{"id":7747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7744,"name":"base64Uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7721,"src":"3942:9:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":7745,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7734,"src":"3954:4:19","typeDescriptions":{"typeIdentifier":"t_struct$_SkyBudData_$7527_storage_ptr","typeString":"struct SkyBudsMetadata.SkyBudData storage pointer"}},"id":7746,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3959:9:19","memberName":"base64Uri","nodeType":"MemberAccess","referencedDeclaration":7524,"src":"3954:14:19","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"src":"3942:26:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":7748,"nodeType":"ExpressionStatement","src":"3942:26:19"},{"expression":{"id":7757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":7749,"name":"wearableIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7724,"src":"4051:11:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":7750,"name":"isTalkative","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7726,"src":"4064:11:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":7751,"name":"speed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7728,"src":"4077:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7752,"name":"laziness","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7730,"src":"4084:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7753,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"4050:43:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bool_$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256[] memory,bool,uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7755,"name":"encodedMetadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7719,"src":"4111:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7754,"name":"decodeMetadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6945,"src":"4096:14:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bool_$_t_uint256_$_t_uint256_$","typeString":"function (uint256) pure returns (uint256[] memory,bool,uint256,uint256)"}},"id":7756,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4096:31:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bool_$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256[] memory,bool,uint256,uint256)"}},"src":"4050:77:19","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7758,"nodeType":"ExpressionStatement","src":"4050:77:19"}]},"functionSelector":"a574cea4","id":7760,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":7716,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7713,"src":"3612:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7717,"kind":"modifierInvocation","modifierName":{"id":7715,"name":"tokenExists","nameLocations":["3600:11:19"],"nodeType":"IdentifierPath","referencedDeclaration":7563,"src":"3600:11:19"},"nodeType":"ModifierInvocation","src":"3600:20:19"}],"name":"getMetadata","nameLocation":"3559:11:19","nodeType":"FunctionDefinition","parameters":{"id":7714,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7713,"mutability":"mutable","name":"tokenId","nameLocation":"3579:7:19","nodeType":"VariableDeclaration","scope":7760,"src":"3571:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7712,"name":"uint256","nodeType":"ElementaryTypeName","src":"3571:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3570:17:19"},"returnParameters":{"id":7731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7719,"mutability":"mutable","name":"encodedMetadata","nameLocation":"3648:15:19","nodeType":"VariableDeclaration","scope":7760,"src":"3640:23:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7718,"name":"uint256","nodeType":"ElementaryTypeName","src":"3640:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7721,"mutability":"mutable","name":"base64Uri","nameLocation":"3688:9:19","nodeType":"VariableDeclaration","scope":7760,"src":"3674:23:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7720,"name":"string","nodeType":"ElementaryTypeName","src":"3674:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7724,"mutability":"mutable","name":"wearableIds","nameLocation":"3725:11:19","nodeType":"VariableDeclaration","scope":7760,"src":"3708:28:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":7722,"name":"uint256","nodeType":"ElementaryTypeName","src":"3708:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7723,"nodeType":"ArrayTypeName","src":"3708:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":7726,"mutability":"mutable","name":"isTalkative","nameLocation":"3752:11:19","nodeType":"VariableDeclaration","scope":7760,"src":"3747:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7725,"name":"bool","nodeType":"ElementaryTypeName","src":"3747:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":7728,"mutability":"mutable","name":"speed","nameLocation":"3782:5:19","nodeType":"VariableDeclaration","scope":7760,"src":"3774:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7727,"name":"uint256","nodeType":"ElementaryTypeName","src":"3774:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7730,"mutability":"mutable","name":"laziness","nameLocation":"3806:8:19","nodeType":"VariableDeclaration","scope":7760,"src":"3798:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7729,"name":"uint256","nodeType":"ElementaryTypeName","src":"3798:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3629:192:19"},"scope":8014,"src":"3550:585:19","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":7775,"nodeType":"Block","src":"4281:65:19","statements":[{"expression":{"expression":{"baseExpression":{"id":7770,"name":"_tokenMetadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7532,"src":"4299:14:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_SkyBudData_$7527_storage_$","typeString":"mapping(uint256 => struct SkyBudsMetadata.SkyBudData storage ref)"}},"id":7772,"indexExpression":{"id":7771,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7762,"src":"4314:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4299:23:19","typeDescriptions":{"typeIdentifier":"t_struct$_SkyBudData_$7527_storage","typeString":"struct SkyBudsMetadata.SkyBudData storage ref"}},"id":7773,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4323:15:19","memberName":"encodedMetadata","nodeType":"MemberAccess","referencedDeclaration":7522,"src":"4299:39:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7769,"id":7774,"nodeType":"Return","src":"4292:46:19"}]},"functionSelector":"ff410206","id":7776,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":7765,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7762,"src":"4254:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7766,"kind":"modifierInvocation","modifierName":{"id":7764,"name":"tokenExists","nameLocations":["4242:11:19"],"nodeType":"IdentifierPath","referencedDeclaration":7563,"src":"4242:11:19"},"nodeType":"ModifierInvocation","src":"4242:20:19"}],"name":"getEncodedMetadata","nameLocation":"4194:18:19","nodeType":"FunctionDefinition","parameters":{"id":7763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7762,"mutability":"mutable","name":"tokenId","nameLocation":"4221:7:19","nodeType":"VariableDeclaration","scope":7776,"src":"4213:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7761,"name":"uint256","nodeType":"ElementaryTypeName","src":"4213:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4212:17:19"},"returnParameters":{"id":7769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7768,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7776,"src":"4272:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7767,"name":"uint256","nodeType":"ElementaryTypeName","src":"4272:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4271:9:19"},"scope":8014,"src":"4185:161:19","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":7791,"nodeType":"Block","src":"4486:59:19","statements":[{"expression":{"expression":{"baseExpression":{"id":7786,"name":"_tokenMetadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7532,"src":"4504:14:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_SkyBudData_$7527_storage_$","typeString":"mapping(uint256 => struct SkyBudsMetadata.SkyBudData storage ref)"}},"id":7788,"indexExpression":{"id":7787,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7778,"src":"4519:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4504:23:19","typeDescriptions":{"typeIdentifier":"t_struct$_SkyBudData_$7527_storage","typeString":"struct SkyBudsMetadata.SkyBudData storage ref"}},"id":7789,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4528:9:19","memberName":"base64Uri","nodeType":"MemberAccess","referencedDeclaration":7524,"src":"4504:33:19","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":7785,"id":7790,"nodeType":"Return","src":"4497:40:19"}]},"functionSelector":"8b6f1ae6","id":7792,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":7781,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7778,"src":"4453:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7782,"kind":"modifierInvocation","modifierName":{"id":7780,"name":"tokenExists","nameLocations":["4441:11:19"],"nodeType":"IdentifierPath","referencedDeclaration":7563,"src":"4441:11:19"},"nodeType":"ModifierInvocation","src":"4441:20:19"}],"name":"getBase64Uri","nameLocation":"4399:12:19","nodeType":"FunctionDefinition","parameters":{"id":7779,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7778,"mutability":"mutable","name":"tokenId","nameLocation":"4420:7:19","nodeType":"VariableDeclaration","scope":7792,"src":"4412:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7777,"name":"uint256","nodeType":"ElementaryTypeName","src":"4412:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4411:17:19"},"returnParameters":{"id":7785,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7784,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7792,"src":"4471:13:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7783,"name":"string","nodeType":"ElementaryTypeName","src":"4471:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4470:15:19"},"scope":8014,"src":"4390:155:19","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":7812,"nodeType":"Block","src":"4712:90:19","statements":[{"expression":{"arguments":[{"expression":{"baseExpression":{"id":7805,"name":"_tokenMetadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7532,"src":"4742:14:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_SkyBudData_$7527_storage_$","typeString":"mapping(uint256 => struct SkyBudsMetadata.SkyBudData storage ref)"}},"id":7807,"indexExpression":{"id":7806,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7794,"src":"4757:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4742:23:19","typeDescriptions":{"typeIdentifier":"t_struct$_SkyBudData_$7527_storage","typeString":"struct SkyBudsMetadata.SkyBudData storage ref"}},"id":7808,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4766:15:19","memberName":"encodedMetadata","nodeType":"MemberAccess","referencedDeclaration":7522,"src":"4742:39:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7809,"name":"wearableId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7796,"src":"4783:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7804,"name":"hasWearable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7813,"src":"4730:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) view returns (bool)"}},"id":7810,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4730:64:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":7803,"id":7811,"nodeType":"Return","src":"4723:71:19"}]},"functionSelector":"1b21e52c","id":7813,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":7799,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7794,"src":"4688:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7800,"kind":"modifierInvocation","modifierName":{"id":7798,"name":"tokenExists","nameLocations":["4676:11:19"],"nodeType":"IdentifierPath","referencedDeclaration":7563,"src":"4676:11:19"},"nodeType":"ModifierInvocation","src":"4676:20:19"}],"name":"hasWearable","nameLocation":"4615:11:19","nodeType":"FunctionDefinition","parameters":{"id":7797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7794,"mutability":"mutable","name":"tokenId","nameLocation":"4635:7:19","nodeType":"VariableDeclaration","scope":7813,"src":"4627:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7793,"name":"uint256","nodeType":"ElementaryTypeName","src":"4627:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7796,"mutability":"mutable","name":"wearableId","nameLocation":"4652:10:19","nodeType":"VariableDeclaration","scope":7813,"src":"4644:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7795,"name":"uint256","nodeType":"ElementaryTypeName","src":"4644:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4626:37:19"},"returnParameters":{"id":7803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7802,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7813,"src":"4706:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7801,"name":"bool","nodeType":"ElementaryTypeName","src":"4706:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4705:6:19"},"scope":8014,"src":"4606:196:19","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":7830,"nodeType":"Block","src":"4949:82:19","statements":[{"expression":{"arguments":[{"expression":{"baseExpression":{"id":7824,"name":"_tokenMetadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7532,"src":"4983:14:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_SkyBudData_$7527_storage_$","typeString":"mapping(uint256 => struct SkyBudsMetadata.SkyBudData storage ref)"}},"id":7826,"indexExpression":{"id":7825,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7815,"src":"4998:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4983:23:19","typeDescriptions":{"typeIdentifier":"t_struct$_SkyBudData_$7527_storage","typeString":"struct SkyBudsMetadata.SkyBudData storage ref"}},"id":7827,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5007:15:19","memberName":"encodedMetadata","nodeType":"MemberAccess","referencedDeclaration":7522,"src":"4983:39:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7823,"name":"_getIsTalkative","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7194,"src":"4967:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) pure returns (bool)"}},"id":7828,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4967:56:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":7822,"id":7829,"nodeType":"Return","src":"4960:63:19"}]},"functionSelector":"54e35a42","id":7831,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":7818,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7815,"src":"4925:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7819,"kind":"modifierInvocation","modifierName":{"id":7817,"name":"tokenExists","nameLocations":["4913:11:19"],"nodeType":"IdentifierPath","referencedDeclaration":7563,"src":"4913:11:19"},"nodeType":"ModifierInvocation","src":"4913:20:19"}],"name":"isTalkative","nameLocation":"4872:11:19","nodeType":"FunctionDefinition","parameters":{"id":7816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7815,"mutability":"mutable","name":"tokenId","nameLocation":"4892:7:19","nodeType":"VariableDeclaration","scope":7831,"src":"4884:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7814,"name":"uint256","nodeType":"ElementaryTypeName","src":"4884:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4883:17:19"},"returnParameters":{"id":7822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7821,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7831,"src":"4943:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7820,"name":"bool","nodeType":"ElementaryTypeName","src":"4943:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4942:6:19"},"scope":8014,"src":"4863:168:19","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":7848,"nodeType":"Block","src":"5172:76:19","statements":[{"expression":{"arguments":[{"expression":{"baseExpression":{"id":7842,"name":"_tokenMetadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7532,"src":"5200:14:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_SkyBudData_$7527_storage_$","typeString":"mapping(uint256 => struct SkyBudsMetadata.SkyBudData storage ref)"}},"id":7844,"indexExpression":{"id":7843,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7833,"src":"5215:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5200:23:19","typeDescriptions":{"typeIdentifier":"t_struct$_SkyBudData_$7527_storage","typeString":"struct SkyBudsMetadata.SkyBudData storage ref"}},"id":7845,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5224:15:19","memberName":"encodedMetadata","nodeType":"MemberAccess","referencedDeclaration":7522,"src":"5200:39:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7841,"name":"_getSpeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7209,"src":"5190:9:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":7846,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5190:50:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7840,"id":7847,"nodeType":"Return","src":"5183:57:19"}]},"functionSelector":"4b93f753","id":7849,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":7836,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7833,"src":"5145:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7837,"kind":"modifierInvocation","modifierName":{"id":7835,"name":"tokenExists","nameLocations":["5133:11:19"],"nodeType":"IdentifierPath","referencedDeclaration":7563,"src":"5133:11:19"},"nodeType":"ModifierInvocation","src":"5133:20:19"}],"name":"getSpeed","nameLocation":"5095:8:19","nodeType":"FunctionDefinition","parameters":{"id":7834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7833,"mutability":"mutable","name":"tokenId","nameLocation":"5112:7:19","nodeType":"VariableDeclaration","scope":7849,"src":"5104:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7832,"name":"uint256","nodeType":"ElementaryTypeName","src":"5104:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5103:17:19"},"returnParameters":{"id":7840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7839,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7849,"src":"5163:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7838,"name":"uint256","nodeType":"ElementaryTypeName","src":"5163:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5162:9:19"},"scope":8014,"src":"5086:162:19","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":7866,"nodeType":"Block","src":"5429:84:19","statements":[{"expression":{"arguments":[{"expression":{"baseExpression":{"id":7860,"name":"_tokenMetadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7532,"src":"5465:14:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_SkyBudData_$7527_storage_$","typeString":"mapping(uint256 => struct SkyBudsMetadata.SkyBudData storage ref)"}},"id":7862,"indexExpression":{"id":7861,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7851,"src":"5480:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5465:23:19","typeDescriptions":{"typeIdentifier":"t_struct$_SkyBudData_$7527_storage","typeString":"struct SkyBudsMetadata.SkyBudData storage ref"}},"id":7863,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5489:15:19","memberName":"encodedMetadata","nodeType":"MemberAccess","referencedDeclaration":7522,"src":"5465:39:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7859,"name":"getSpeedFormatted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7867,"src":"5447:17:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) view returns (string memory)"}},"id":7864,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5447:58:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":7858,"id":7865,"nodeType":"Return","src":"5440:65:19"}]},"functionSelector":"ee0dbd66","id":7867,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":7854,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7851,"src":"5396:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7855,"kind":"modifierInvocation","modifierName":{"id":7853,"name":"tokenExists","nameLocations":["5384:11:19"],"nodeType":"IdentifierPath","referencedDeclaration":7563,"src":"5384:11:19"},"nodeType":"ModifierInvocation","src":"5384:20:19"}],"name":"getSpeedFormatted","nameLocation":"5337:17:19","nodeType":"FunctionDefinition","parameters":{"id":7852,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7851,"mutability":"mutable","name":"tokenId","nameLocation":"5363:7:19","nodeType":"VariableDeclaration","scope":7867,"src":"5355:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7850,"name":"uint256","nodeType":"ElementaryTypeName","src":"5355:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5354:17:19"},"returnParameters":{"id":7858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7857,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7867,"src":"5414:13:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7856,"name":"string","nodeType":"ElementaryTypeName","src":"5414:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5413:15:19"},"scope":8014,"src":"5328:185:19","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":7884,"nodeType":"Block","src":"5660:79:19","statements":[{"expression":{"arguments":[{"expression":{"baseExpression":{"id":7878,"name":"_tokenMetadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7532,"src":"5691:14:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_SkyBudData_$7527_storage_$","typeString":"mapping(uint256 => struct SkyBudsMetadata.SkyBudData storage ref)"}},"id":7880,"indexExpression":{"id":7879,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7869,"src":"5706:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5691:23:19","typeDescriptions":{"typeIdentifier":"t_struct$_SkyBudData_$7527_storage","typeString":"struct SkyBudsMetadata.SkyBudData storage ref"}},"id":7881,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5715:15:19","memberName":"encodedMetadata","nodeType":"MemberAccess","referencedDeclaration":7522,"src":"5691:39:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7877,"name":"_getLaziness","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7224,"src":"5678:12:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":7882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5678:53:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7876,"id":7883,"nodeType":"Return","src":"5671:60:19"}]},"functionSelector":"cf544bfc","id":7885,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":7872,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7869,"src":"5633:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7873,"kind":"modifierInvocation","modifierName":{"id":7871,"name":"tokenExists","nameLocations":["5621:11:19"],"nodeType":"IdentifierPath","referencedDeclaration":7563,"src":"5621:11:19"},"nodeType":"ModifierInvocation","src":"5621:20:19"}],"name":"getLaziness","nameLocation":"5580:11:19","nodeType":"FunctionDefinition","parameters":{"id":7870,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7869,"mutability":"mutable","name":"tokenId","nameLocation":"5600:7:19","nodeType":"VariableDeclaration","scope":7885,"src":"5592:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7868,"name":"uint256","nodeType":"ElementaryTypeName","src":"5592:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5591:17:19"},"returnParameters":{"id":7876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7875,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7885,"src":"5651:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7874,"name":"uint256","nodeType":"ElementaryTypeName","src":"5651:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5650:9:19"},"scope":8014,"src":"5571:168:19","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":7902,"nodeType":"Block","src":"5926:87:19","statements":[{"expression":{"arguments":[{"expression":{"baseExpression":{"id":7896,"name":"_tokenMetadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7532,"src":"5965:14:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_SkyBudData_$7527_storage_$","typeString":"mapping(uint256 => struct SkyBudsMetadata.SkyBudData storage ref)"}},"id":7898,"indexExpression":{"id":7897,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7887,"src":"5980:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5965:23:19","typeDescriptions":{"typeIdentifier":"t_struct$_SkyBudData_$7527_storage","typeString":"struct SkyBudsMetadata.SkyBudData storage ref"}},"id":7899,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5989:15:19","memberName":"encodedMetadata","nodeType":"MemberAccess","referencedDeclaration":7522,"src":"5965:39:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7895,"name":"getLazinessFormatted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7903,"src":"5944:20:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) view returns (string memory)"}},"id":7900,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5944:61:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":7894,"id":7901,"nodeType":"Return","src":"5937:68:19"}]},"functionSelector":"09c88b24","id":7903,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":7890,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7887,"src":"5893:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7891,"kind":"modifierInvocation","modifierName":{"id":7889,"name":"tokenExists","nameLocations":["5881:11:19"],"nodeType":"IdentifierPath","referencedDeclaration":7563,"src":"5881:11:19"},"nodeType":"ModifierInvocation","src":"5881:20:19"}],"name":"getLazinessFormatted","nameLocation":"5831:20:19","nodeType":"FunctionDefinition","parameters":{"id":7888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7887,"mutability":"mutable","name":"tokenId","nameLocation":"5860:7:19","nodeType":"VariableDeclaration","scope":7903,"src":"5852:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7886,"name":"uint256","nodeType":"ElementaryTypeName","src":"5852:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5851:17:19"},"returnParameters":{"id":7894,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7893,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7903,"src":"5911:13:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7892,"name":"string","nodeType":"ElementaryTypeName","src":"5911:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5910:15:19"},"scope":8014,"src":"5822:191:19","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":7954,"nodeType":"Block","src":"6166:542:19","statements":[{"assignments":[7916],"declarations":[{"constant":false,"id":7916,"mutability":"mutable","name":"data","nameLocation":"6196:4:19","nodeType":"VariableDeclaration","scope":7954,"src":"6177:23:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_SkyBudData_$7527_storage_ptr","typeString":"struct SkyBudsMetadata.SkyBudData"},"typeName":{"id":7915,"nodeType":"UserDefinedTypeName","pathNode":{"id":7914,"name":"SkyBudData","nameLocations":["6177:10:19"],"nodeType":"IdentifierPath","referencedDeclaration":7527,"src":"6177:10:19"},"referencedDeclaration":7527,"src":"6177:10:19","typeDescriptions":{"typeIdentifier":"t_struct$_SkyBudData_$7527_storage_ptr","typeString":"struct SkyBudsMetadata.SkyBudData"}},"visibility":"internal"}],"id":7920,"initialValue":{"baseExpression":{"id":7917,"name":"_tokenMetadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7532,"src":"6203:14:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_SkyBudData_$7527_storage_$","typeString":"mapping(uint256 => struct SkyBudsMetadata.SkyBudData storage ref)"}},"id":7919,"indexExpression":{"id":7918,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7905,"src":"6218:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6203:23:19","typeDescriptions":{"typeIdentifier":"t_struct$_SkyBudData_$7527_storage","typeString":"struct SkyBudsMetadata.SkyBudData storage ref"}},"nodeType":"VariableDeclarationStatement","src":"6177:49:19"},{"assignments":[null,7922,7924,7926],"declarations":[null,{"constant":false,"id":7922,"mutability":"mutable","name":"isTalkative_","nameLocation":"6291:12:19","nodeType":"VariableDeclaration","scope":7954,"src":"6286:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7921,"name":"bool","nodeType":"ElementaryTypeName","src":"6286:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":7924,"mutability":"mutable","name":"speed","nameLocation":"6313:5:19","nodeType":"VariableDeclaration","scope":7954,"src":"6305:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7923,"name":"uint256","nodeType":"ElementaryTypeName","src":"6305:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7926,"mutability":"mutable","name":"laziness","nameLocation":"6328:8:19","nodeType":"VariableDeclaration","scope":7954,"src":"6320:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7925,"name":"uint256","nodeType":"ElementaryTypeName","src":"6320:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7931,"initialValue":{"arguments":[{"expression":{"id":7928,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7916,"src":"6355:4:19","typeDescriptions":{"typeIdentifier":"t_struct$_SkyBudData_$7527_storage_ptr","typeString":"struct SkyBudsMetadata.SkyBudData storage pointer"}},"id":7929,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6360:15:19","memberName":"encodedMetadata","nodeType":"MemberAccess","referencedDeclaration":7522,"src":"6355:20:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7927,"name":"decodeMetadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6945,"src":"6340:14:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bool_$_t_uint256_$_t_uint256_$","typeString":"function (uint256) pure returns (uint256[] memory,bool,uint256,uint256)"}},"id":7930,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6340:36:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bool_$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256[] memory,bool,uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"6283:93:19"},{"assignments":[7933],"declarations":[{"constant":false,"id":7933,"mutability":"mutable","name":"newEncodedMetadata","nameLocation":"6446:18:19","nodeType":"VariableDeclaration","scope":7954,"src":"6438:26:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7932,"name":"uint256","nodeType":"ElementaryTypeName","src":"6438:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7940,"initialValue":{"arguments":[{"id":7935,"name":"wearableIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7908,"src":"6482:11:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":7936,"name":"isTalkative_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7922,"src":"6495:12:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":7937,"name":"speed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7924,"src":"6509:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7938,"name":"laziness","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7926,"src":"6516:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7934,"name":"encodeMetadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6864,"src":"6467:14:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256[] memory,bool,uint256,uint256) pure returns (uint256)"}},"id":7939,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6467:58:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6438:87:19"},{"expression":{"id":7945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7941,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7916,"src":"6573:4:19","typeDescriptions":{"typeIdentifier":"t_struct$_SkyBudData_$7527_storage_ptr","typeString":"struct SkyBudsMetadata.SkyBudData storage pointer"}},"id":7943,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6578:15:19","memberName":"encodedMetadata","nodeType":"MemberAccess","referencedDeclaration":7522,"src":"6573:20:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7944,"name":"newEncodedMetadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7933,"src":"6596:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6573:41:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7946,"nodeType":"ExpressionStatement","src":"6573:41:19"},{"eventCall":{"arguments":[{"id":7948,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7905,"src":"6656:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7949,"name":"newEncodedMetadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7933,"src":"6665:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":7950,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7916,"src":"6685:4:19","typeDescriptions":{"typeIdentifier":"t_struct$_SkyBudData_$7527_storage_ptr","typeString":"struct SkyBudsMetadata.SkyBudData storage pointer"}},"id":7951,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6690:9:19","memberName":"base64Uri","nodeType":"MemberAccess","referencedDeclaration":7524,"src":"6685:14:19","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":7947,"name":"MetadataUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7540,"src":"6640:15:19","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,uint256,string memory)"}},"id":7952,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6640:60:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7953,"nodeType":"EmitStatement","src":"6635:65:19"}]},"functionSelector":"6ae83f79","id":7955,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":7911,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7905,"src":"6157:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7912,"kind":"modifierInvocation","modifierName":{"id":7910,"name":"tokenExists","nameLocations":["6145:11:19"],"nodeType":"IdentifierPath","referencedDeclaration":7563,"src":"6145:11:19"},"nodeType":"ModifierInvocation","src":"6145:20:19"}],"name":"updateWearables","nameLocation":"6075:15:19","nodeType":"FunctionDefinition","parameters":{"id":7909,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7905,"mutability":"mutable","name":"tokenId","nameLocation":"6099:7:19","nodeType":"VariableDeclaration","scope":7955,"src":"6091:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7904,"name":"uint256","nodeType":"ElementaryTypeName","src":"6091:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7908,"mutability":"mutable","name":"wearableIds","nameLocation":"6125:11:19","nodeType":"VariableDeclaration","scope":7955,"src":"6108:28:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":7906,"name":"uint256","nodeType":"ElementaryTypeName","src":"6108:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7907,"nodeType":"ArrayTypeName","src":"6108:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6090:47:19"},"returnParameters":{"id":7913,"nodeType":"ParameterList","parameters":[],"src":"6166:0:19"},"scope":8014,"src":"6066:642:19","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7985,"nodeType":"Block","src":"6855:188:19","statements":[{"assignments":[7967],"declarations":[{"constant":false,"id":7967,"mutability":"mutable","name":"data","nameLocation":"6885:4:19","nodeType":"VariableDeclaration","scope":7985,"src":"6866:23:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_SkyBudData_$7527_storage_ptr","typeString":"struct SkyBudsMetadata.SkyBudData"},"typeName":{"id":7966,"nodeType":"UserDefinedTypeName","pathNode":{"id":7965,"name":"SkyBudData","nameLocations":["6866:10:19"],"nodeType":"IdentifierPath","referencedDeclaration":7527,"src":"6866:10:19"},"referencedDeclaration":7527,"src":"6866:10:19","typeDescriptions":{"typeIdentifier":"t_struct$_SkyBudData_$7527_storage_ptr","typeString":"struct SkyBudsMetadata.SkyBudData"}},"visibility":"internal"}],"id":7971,"initialValue":{"baseExpression":{"id":7968,"name":"_tokenMetadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7532,"src":"6892:14:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_SkyBudData_$7527_storage_$","typeString":"mapping(uint256 => struct SkyBudsMetadata.SkyBudData storage ref)"}},"id":7970,"indexExpression":{"id":7969,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7957,"src":"6907:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6892:23:19","typeDescriptions":{"typeIdentifier":"t_struct$_SkyBudData_$7527_storage","typeString":"struct SkyBudsMetadata.SkyBudData storage ref"}},"nodeType":"VariableDeclarationStatement","src":"6866:49:19"},{"expression":{"id":7976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7972,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7967,"src":"6926:4:19","typeDescriptions":{"typeIdentifier":"t_struct$_SkyBudData_$7527_storage_ptr","typeString":"struct SkyBudsMetadata.SkyBudData storage pointer"}},"id":7974,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6931:9:19","memberName":"base64Uri","nodeType":"MemberAccess","referencedDeclaration":7524,"src":"6926:14:19","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7975,"name":"base64Uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7959,"src":"6943:9:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"6926:26:19","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":7977,"nodeType":"ExpressionStatement","src":"6926:26:19"},{"eventCall":{"arguments":[{"id":7979,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7957,"src":"6994:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":7980,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7967,"src":"7003:4:19","typeDescriptions":{"typeIdentifier":"t_struct$_SkyBudData_$7527_storage_ptr","typeString":"struct SkyBudsMetadata.SkyBudData storage pointer"}},"id":7981,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7008:15:19","memberName":"encodedMetadata","nodeType":"MemberAccess","referencedDeclaration":7522,"src":"7003:20:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7982,"name":"base64Uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7959,"src":"7025:9:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":7978,"name":"MetadataUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7540,"src":"6978:15:19","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,uint256,string memory)"}},"id":7983,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6978:57:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7984,"nodeType":"EmitStatement","src":"6973:62:19"}]},"functionSelector":"32d236a6","id":7986,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":7962,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7957,"src":"6846:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7963,"kind":"modifierInvocation","modifierName":{"id":7961,"name":"tokenExists","nameLocations":["6834:11:19"],"nodeType":"IdentifierPath","referencedDeclaration":7563,"src":"6834:11:19"},"nodeType":"ModifierInvocation","src":"6834:20:19"}],"name":"updateBase64Uri","nameLocation":"6769:15:19","nodeType":"FunctionDefinition","parameters":{"id":7960,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7957,"mutability":"mutable","name":"tokenId","nameLocation":"6793:7:19","nodeType":"VariableDeclaration","scope":7986,"src":"6785:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7956,"name":"uint256","nodeType":"ElementaryTypeName","src":"6785:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7959,"mutability":"mutable","name":"base64Uri","nameLocation":"6816:9:19","nodeType":"VariableDeclaration","scope":7986,"src":"6802:23:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7958,"name":"string","nodeType":"ElementaryTypeName","src":"6802:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6784:42:19"},"returnParameters":{"id":7964,"nodeType":"ParameterList","parameters":[],"src":"6855:0:19"},"scope":8014,"src":"6760:283:19","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7998,"nodeType":"Block","src":"7156:56:19","statements":[{"expression":{"expression":{"baseExpression":{"id":7993,"name":"_tokenMetadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7532,"src":"7174:14:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_SkyBudData_$7527_storage_$","typeString":"mapping(uint256 => struct SkyBudsMetadata.SkyBudData storage ref)"}},"id":7995,"indexExpression":{"id":7994,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7988,"src":"7189:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7174:23:19","typeDescriptions":{"typeIdentifier":"t_struct$_SkyBudData_$7527_storage","typeString":"struct SkyBudsMetadata.SkyBudData storage ref"}},"id":7996,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7198:6:19","memberName":"exists","nodeType":"MemberAccess","referencedDeclaration":7526,"src":"7174:30:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":7992,"id":7997,"nodeType":"Return","src":"7167:37:19"}]},"functionSelector":"d938eb23","id":7999,"implemented":true,"kind":"function","modifiers":[],"name":"tokenDataExists","nameLocation":"7096:15:19","nodeType":"FunctionDefinition","parameters":{"id":7989,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7988,"mutability":"mutable","name":"tokenId","nameLocation":"7120:7:19","nodeType":"VariableDeclaration","scope":7999,"src":"7112:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7987,"name":"uint256","nodeType":"ElementaryTypeName","src":"7112:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7111:17:19"},"returnParameters":{"id":7992,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7991,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7999,"src":"7150:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7990,"name":"bool","nodeType":"ElementaryTypeName","src":"7150:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7149:6:19"},"scope":8014,"src":"7087:125:19","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":8012,"nodeType":"Block","src":"7332:49:19","statements":[{"expression":{"id":8010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"7343:30:19","subExpression":{"baseExpression":{"id":8007,"name":"_tokenMetadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7532,"src":"7350:14:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_SkyBudData_$7527_storage_$","typeString":"mapping(uint256 => struct SkyBudsMetadata.SkyBudData storage ref)"}},"id":8009,"indexExpression":{"id":8008,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8001,"src":"7365:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7350:23:19","typeDescriptions":{"typeIdentifier":"t_struct$_SkyBudData_$7527_storage","typeString":"struct SkyBudsMetadata.SkyBudData storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8011,"nodeType":"ExpressionStatement","src":"7343:30:19"}]},"functionSelector":"db5c339b","id":8013,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":8004,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8001,"src":"7323:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8005,"kind":"modifierInvocation","modifierName":{"id":8003,"name":"tokenExists","nameLocations":["7311:11:19"],"nodeType":"IdentifierPath","referencedDeclaration":7563,"src":"7311:11:19"},"nodeType":"ModifierInvocation","src":"7311:20:19"}],"name":"deleteTokenMetadata","nameLocation":"7267:19:19","nodeType":"FunctionDefinition","parameters":{"id":8002,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8001,"mutability":"mutable","name":"tokenId","nameLocation":"7295:7:19","nodeType":"VariableDeclaration","scope":8013,"src":"7287:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8000,"name":"uint256","nodeType":"ElementaryTypeName","src":"7287:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7286:17:19"},"returnParameters":{"id":8006,"nodeType":"ParameterList","parameters":[],"src":"7332:0:19"},"scope":8014,"src":"7258:123:19","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":8015,"src":"181:7203:19","usedErrors":[13,18],"usedEvents":[24,7540]}],"src":"33:7351:19"},"id":19}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ERC721":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x39ed367e54765186281efcfe83e47cf0ad62cc879f10e191360712507125f29a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c5ae6d85bd48cca8d6d2fcec8c63efd86f56f8a5832577a47e403ce0e65cb09\",\"dweb:/ipfs/QmUtcS8AbRSWhuc61puYet58os8FvSqm329ChoW8wwZXZk\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34\",\"dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0xddab643169f47a2c5291afafcbfdca045d9e6835553307d090bc048b6dabd0ac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d0ffbacfee42977167b3c75bd4787f8b72a7ab1176abd544f3dff662c6528e24\",\"dweb:/ipfs/QmUprM1cWCyaQ3LDjHA2DhwiPs3wekQ6MWXHFZdMMxpcyX\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x81c274a60a7ae232ae3dc9ff3a4011b4849a853c13b0832cd3351bb1bb2f0dae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9da0c20dc74358a2a76330818f3bac9d1e2ce3371aec847b9cbf5d147fbae4f6\",\"dweb:/ipfs/QmeczhmnFv1hbXKGLwbYXY6Rrytc9a5A2YaRi5QMMgjPnb\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"IERC721":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC-721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"IERC721Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"onERC721Received(address,address,uint256,bytes)":"150b7a02"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC-721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC-721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34\",\"dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"IERC721Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol":{"ERC721Utils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220fa01afb338f6f4cd9a50668a0a7f2e8597c40582d0364b439b9f60802e6108ce64736f6c634300081c0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STATICCALL ADD 0xAF 0xB3 CODESIZE 0xF6 DELEGATECALL 0xCD SWAP11 POP PUSH7 0x8A0A7F2E8597C4 SDIV DUP3 0xD0 CALLDATASIZE 0x4B NUMBER SWAP12 SWAP16 PUSH1 0x80 0x2E PUSH2 0x8CE PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"431:1488:6:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220fa01afb338f6f4cd9a50668a0a7f2e8597c40582d0364b439b9f60802e6108ce64736f6c634300081c0033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STATICCALL ADD 0xAF 0xB3 CODESIZE 0xF6 DELEGATECALL 0xCD SWAP11 POP PUSH7 0x8A0A7F2E8597C4 SDIV DUP3 0xD0 CALLDATASIZE 0x4B NUMBER SWAP12 SWAP16 PUSH1 0x80 0x2E PUSH2 0x8CE PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"431:1488:6:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library that provide common ERC-721 utility functions. See https://eips.ethereum.org/EIPS/eip-721[ERC-721]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":\"ERC721Utils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34\",\"dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0xddab643169f47a2c5291afafcbfdca045d9e6835553307d090bc048b6dabd0ac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d0ffbacfee42977167b3c75bd4787f8b72a7ab1176abd544f3dff662c6528e24\",\"dweb:/ipfs/QmUprM1cWCyaQ3LDjHA2DhwiPs3wekQ6MWXHFZdMMxpcyX\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Base64.sol":{"Base64":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220270c94e14b80badeffaf06f470e0a86adb691683ef9523debd65e5bc15111e5664736f6c634300081c0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x27 0xC SWAP5 0xE1 0x4B DUP1 0xBA 0xDE SELFDESTRUCT 0xAF MOD DELEGATECALL PUSH17 0xE0A86ADB691683EF9523DEBD65E5BC1511 0x1E JUMP PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"202:5008:7:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220270c94e14b80badeffaf06f470e0a86adb691683ef9523debd65e5bc15111e5664736f6c634300081c0033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x27 0xC SWAP5 0xE1 0x4B DUP1 0xBA 0xDE SELFDESTRUCT 0xAF MOD DELEGATECALL PUSH17 0xE0A86ADB691683EF9523DEBD65E5BC1511 0x1E JUMP PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"202:5008:7:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides a set of functions to operate with Base64 strings.\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_TABLE\":{\"details\":\"Base64 Encoding/Decoding Table See sections 4 and 5 of https://datatracker.ietf.org/doc/html/rfc4648\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Base64.sol\":\"Base64\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Base64.sol\":{\"keccak256\":\"0xbee2b819e1b4bf569ffc1b1b9d560b4abd6a589575f3093edaab9244de18a0c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e478c0e9bbf3eb8cd3b7784f9b397603e34747f9ffd16571ed1d89ce102de389\",\"dweb:/ipfs/QmZ6zXpwy5xRxx9RkodJmDZSUTeEqPQUanAC5TUoYqW2VR\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Panic.sol":{"Panic":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220e0ac5d37b98a8724c82c3009b75f64bce9a768f6ce26681c206d9e8df1c9800064736f6c634300081c0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE0 0xAC TSTORE CALLDATACOPY 0xB9 DUP11 DUP8 0x24 0xC8 0x2C ADDRESS MULMOD 0xB7 PUSH0 PUSH5 0xBCE9A768F6 0xCE 0x26 PUSH9 0x1C206D9E8DF1C98000 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"657:1315:9:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220e0ac5d37b98a8724c82c3009b75f64bce9a768f6ce26681c206d9e8df1c9800064736f6c634300081c0033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE0 0xAC TSTORE CALLDATACOPY 0xB9 DUP11 DUP8 0x24 0xC8 0x2C ADDRESS MULMOD 0xB7 PUSH0 PUSH5 0xBCE9A768F6 0xCE 0x26 PUSH9 0x1C206D9E8DF1C98000 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"657:1315:9:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ReentrancyGuard":{"abi":[{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"},{"inputs":[],"name":"StringsInvalidAddressFormat","type":"error"},{"inputs":[],"name":"StringsInvalidChar","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea264697066735822122091befcb5e7b87bdb38213dd6243fa00fcbceb5aca657bb023db46b069af1527a64736f6c634300081c0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP2 0xBE 0xFC 0xB5 0xE7 0xB8 PUSH28 0xDB38213DD6243FA00FCBCEB5ACA657BB023DB46B069AF1527A64736F PUSH13 0x634300081C0033000000000000 ","sourceMap":"297:18980:11:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea264697066735822122091befcb5e7b87bdb38213dd6243fa00fcbceb5aca657bb023db46b069af1527a64736f6c634300081c0033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP2 0xBE 0xFC 0xB5 0xE7 0xB8 PUSH28 0xDB38213DD6243FA00FCBCEB5ACA657BB023DB46B069AF1527A64736F PUSH13 0x634300081C0033000000000000 ","sourceMap":"297:18980:11:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidAddressFormat\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidChar\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}],\"StringsInvalidAddressFormat()\":[{\"details\":\"The string being parsed is not a properly formatted address.\"}],\"StringsInvalidChar()\":[{\"details\":\"The string being parsed contains characters that are not in scope of the given base.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x81c274a60a7ae232ae3dc9ff3a4011b4849a853c13b0832cd3351bb1bb2f0dae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9da0c20dc74358a2a76330818f3bac9d1e2ce3371aec847b9cbf5d147fbae4f6\",\"dweb:/ipfs/QmeczhmnFv1hbXKGLwbYXY6Rrytc9a5A2YaRi5QMMgjPnb\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220a00f0df397b231b751978631d6c758f6acae675d63be695ca035e17a2220f1fa64736f6c634300081c0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG0 0xF 0xD RETURN SWAP8 0xB2 BALANCE 0xB7 MLOAD SWAP8 DUP7 BALANCE 0xD6 0xC7 PC 0xF6 0xAC 0xAE PUSH8 0x5D63BE695CA035E1 PUSH27 0x2220F1FA64736F6C634300081C0033000000000000000000000000 ","sourceMap":"281:31863:14:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220a00f0df397b231b751978631d6c758f6acae675d63be695ca035e17a2220f1fa64736f6c634300081c0033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG0 0xF 0xD RETURN SWAP8 0xB2 BALANCE 0xB7 MLOAD SWAP8 DUP7 BALANCE 0xD6 0xC7 PC 0xF6 0xAC 0xAE PUSH8 0x5D63BE695CA035E1 PUSH27 0x2220F1FA64736F6C634300081C0033000000000000000000000000 ","sourceMap":"281:31863:14:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntDowncast","type":"error"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntToUint","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintToInt","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212202cc3c96ece9cd0ec088b5d768a091c5c406bb30e1749bfc2415c6f40c7ccaa8b64736f6c634300081c0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C 0xC3 0xC9 PUSH15 0xCE9CD0EC088B5D768A091C5C406BB3 0xE OR BLOBHASH 0xBF 0xC2 COINBASE TLOAD PUSH16 0x40C7CCAA8B64736F6C634300081C0033 ","sourceMap":"769:34173:15:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea26469706673582212202cc3c96ece9cd0ec088b5d768a091c5c406bb30e1749bfc2415c6f40c7ccaa8b64736f6c634300081c0033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C 0xC3 0xC9 PUSH15 0xCE9CD0EC088B5D768A091C5C406BB3 0xE OR BLOBHASH 0xBF 0xC2 COINBASE TLOAD PUSH16 0x40C7CCAA8B64736F6C634300081C0033 ","sourceMap":"769:34173:15:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220de7eb4debff89ce0783673738e7e2dacf3a1c6f0bc5c29737eda38b586843cb064736f6c634300081c0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDE PUSH31 0xB4DEBFF89CE0783673738E7E2DACF3A1C6F0BC5C29737EDA38B586843CB064 PUSH20 0x6F6C634300081C00330000000000000000000000 ","sourceMap":"258:2354:16:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220de7eb4debff89ce0783673738e7e2dacf3a1c6f0bc5c29737eda38b586843cb064736f6c634300081c0033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDE PUSH31 0xB4DEBFF89CE0783673738E7E2DACF3A1C6F0BC5C29737EDA38B586843CB064 PUSH20 0x6F6C634300081C00330000000000000000000000 ","sourceMap":"258:2354:16:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"contracts/MetadataEncoding.sol":{"MetadataEncoding":{"abi":[{"inputs":[{"internalType":"uint256","name":"metadata","type":"uint256"}],"name":"_getLaziness","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint256","name":"metadata","type":"uint256"}],"name":"_getSpeed","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint256","name":"metadata","type":"uint256"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getWearableAt","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"pure","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601557610155908161001b8239f35b600080fdfe608080604052600436101561001357600080fd5b600090813560e01c9081630a02c9ac1461008e57508063722f74121461006957639f7c43cd1461004257600080fd5b3461006657602036600319011261006657506020604051607f60043560651c168152f35b80fd5b503461006657602036600319011261006657506020604051607f600435606c1c168152f35b82346100665760403660031901126100665760243591600a8310156100e85750600a820291808304600a14901517156100d457604051600435831c6103ff168152602090f35b634e487b7160e01b81526011600452602490fd5b62461bcd60e51b8152602060048201526012602482015271496e646578206f7574206f662072616e676560701b6044820152606490fdfea264697066735822122015b2ccb2a471d815bec534e023af0a670761e31d83104921ff3e78375ef6ff9664736f6c634300081c0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x15 JUMPI PUSH2 0x155 SWAP1 DUP2 PUSH2 0x1B DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 DUP2 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0xA02C9AC EQ PUSH2 0x8E JUMPI POP DUP1 PUSH4 0x722F7412 EQ PUSH2 0x69 JUMPI PUSH4 0x9F7C43CD EQ PUSH2 0x42 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x66 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x66 JUMPI POP PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x7F PUSH1 0x4 CALLDATALOAD PUSH1 0x65 SHR AND DUP2 MSTORE RETURN JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x66 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x66 JUMPI POP PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x7F PUSH1 0x4 CALLDATALOAD PUSH1 0x6C SHR AND DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x66 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x66 JUMPI PUSH1 0x24 CALLDATALOAD SWAP2 PUSH1 0xA DUP4 LT ISZERO PUSH2 0xE8 JUMPI POP PUSH1 0xA DUP3 MUL SWAP2 DUP1 DUP4 DIV PUSH1 0xA EQ SWAP1 ISZERO OR ISZERO PUSH2 0xD4 JUMPI PUSH1 0x40 MLOAD PUSH1 0x4 CALLDATALOAD DUP4 SHR PUSH2 0x3FF AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x496E646578206F7574206F662072616E6765 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ISZERO 0xB2 0xCC 0xB2 LOG4 PUSH18 0xD815BEC534E023AF0A670761E31D83104921 SELFDESTRUCT RETURNDATACOPY PUSH25 0x375EF6FF9664736F6C634300081C0033000000000000000000 ","sourceMap":"60:5996:17:-:0;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"608080604052600436101561001357600080fd5b600090813560e01c9081630a02c9ac1461008e57508063722f74121461006957639f7c43cd1461004257600080fd5b3461006657602036600319011261006657506020604051607f60043560651c168152f35b80fd5b503461006657602036600319011261006657506020604051607f600435606c1c168152f35b82346100665760403660031901126100665760243591600a8310156100e85750600a820291808304600a14901517156100d457604051600435831c6103ff168152602090f35b634e487b7160e01b81526011600452602490fd5b62461bcd60e51b8152602060048201526012602482015271496e646578206f7574206f662072616e676560701b6044820152606490fdfea264697066735822122015b2ccb2a471d815bec534e023af0a670761e31d83104921ff3e78375ef6ff9664736f6c634300081c0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 DUP2 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0xA02C9AC EQ PUSH2 0x8E JUMPI POP DUP1 PUSH4 0x722F7412 EQ PUSH2 0x69 JUMPI PUSH4 0x9F7C43CD EQ PUSH2 0x42 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x66 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x66 JUMPI POP PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x7F PUSH1 0x4 CALLDATALOAD PUSH1 0x65 SHR AND DUP2 MSTORE RETURN JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x66 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x66 JUMPI POP PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x7F PUSH1 0x4 CALLDATALOAD PUSH1 0x6C SHR AND DUP2 MSTORE RETURN JUMPDEST DUP3 CALLVALUE PUSH2 0x66 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x66 JUMPI PUSH1 0x24 CALLDATALOAD SWAP2 PUSH1 0xA DUP4 LT ISZERO PUSH2 0xE8 JUMPI POP PUSH1 0xA DUP3 MUL SWAP2 DUP1 DUP4 DIV PUSH1 0xA EQ SWAP1 ISZERO OR ISZERO PUSH2 0xD4 JUMPI PUSH1 0x40 MLOAD PUSH1 0x4 CALLDATALOAD DUP4 SHR PUSH2 0x3FF AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x496E646578206F7574206F662072616E6765 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ISZERO 0xB2 0xCC 0xB2 LOG4 PUSH18 0xD815BEC534E023AF0A670761E31D83104921 SELFDESTRUCT RETURNDATACOPY PUSH25 0x375EF6FF9664736F6C634300081C0033000000000000000000 ","sourceMap":"60:5996:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;60:5996:17;;;;1038:27;60:5996;;;242:2;60:5996;;242:2;;5838:43;60:5996;;;;;;;;;;;;;-1:-1:-1;;60:5996:17;;;;6025:12;60:5996;;;242:2;60:5996;;242:2;;5991:46;60:5996;;;;;;;;;;-1:-1:-1;;60:5996:17;;;;;;5417:21;188:2;5417:21;;188:2;;;242;188;242;;;;;;188;242;;;;;;;60:5996;;;;242:2;;;5489:78;60:5996;;;;;242:2;-1:-1:-1;;;242:2:17;;;60:5996;242:2;60:5996;;242:2;188;-1:-1:-1;;;188:2:17;;60:5996;;188:2;;;;60:5996;188:2;;;-1:-1:-1;;;188:2:17;;;;;;"},"methodIdentifiers":{"_getLaziness(uint256)":"722f7412","_getSpeed(uint256)":"9f7c43cd","getWearableAt(uint256,uint256)":"0a02c9ac"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"metadata\",\"type\":\"uint256\"}],\"name\":\"_getLaziness\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"metadata\",\"type\":\"uint256\"}],\"name\":\"_getSpeed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"metadata\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getWearableAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MetadataEncoding.sol\":\"MetadataEncoding\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/MetadataEncoding.sol\":{\"keccak256\":\"0xa6baf29250bb24de07fe0f5572e5645846250387991ac328772b51d868782221\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0558dfb3dcf8177ffcbb3678ce5309fd0720329ef3c45fa06f598d9ca70fdac2\",\"dweb:/ipfs/QmbixhhuBx34UWVTvkCDADxJhQfhBx99mrNzXv65h573pm\"]}},\"version\":1}"}},"contracts/SkyBuds.sol":{"SkyBuds":{"abi":[{"inputs":[{"internalType":"address","name":"_addressContractMetadata","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"MAX_TOKENS","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"contractSkybudsMetadata","outputs":[{"internalType":"contract SkyBudsMetadata","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256[]","name":"wearables","type":"uint256[]"},{"internalType":"uint256","name":"laziness","type":"uint256"},{"internalType":"uint256","name":"speed","type":"uint256"},{"internalType":"uint256","name":"isTalkative","type":"uint256"},{"internalType":"string","name":"base64uri","type":"string"}],"name":"mint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_addressContractMetadata","type":"address"}],"name":"setMetadataContractAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"string","name":"base64Uri","type":"string"}],"name":"updateBase64Uri","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256[]","name":"wearables","type":"uint256[]"},{"internalType":"uint256","name":"laziness","type":"uint256"},{"internalType":"uint256","name":"speed","type":"uint256"},{"internalType":"uint256","name":"isTalkative","type":"uint256"},{"internalType":"string","name":"base64uri","type":"string"}],"name":"updateMetadata","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256[]","name":"wearableIds","type":"uint256[]"}],"name":"updateWearables","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"allocate_memory":{"entryPoint":949,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x3B0 JUMPI PUSH1 0x0 PUSH2 0x1B31 PUSH1 0x20 DUP2 CODESIZE SUB SWAP2 DUP3 PUSH2 0x1E DUP2 PUSH2 0x3B5 JUMP JUMPDEST SWAP4 DUP5 SWAP3 DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0x3AC JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x3AC JUMPI PUSH2 0x48 PUSH1 0x40 PUSH2 0x3B5 JUMP JUMPDEST SWAP2 PUSH1 0x7 DUP4 MSTORE PUSH7 0x536B7942756473 PUSH1 0xC8 SHL PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x67 PUSH1 0x40 PUSH2 0x3B5 JUMP JUMPDEST PUSH1 0x3 DUP2 MSTORE PUSH3 0x29A5A1 PUSH1 0xE9 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 DUP3 SSTORE DUP4 MLOAD SWAP1 SWAP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2BC JUMPI PUSH1 0x1 SLOAD PUSH1 0x1 DUP2 DUP2 SHR SWAP2 AND DUP1 ISZERO PUSH2 0x3A2 JUMPI JUMPDEST PUSH1 0x20 DUP3 LT EQ PUSH2 0x29E JUMPI PUSH1 0x1F DUP2 GT PUSH2 0x33F JUMPI JUMPDEST POP PUSH1 0x20 SWAP5 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x2DB JUMPI SWAP5 DUP4 SWAP5 SWAP6 DUP3 SWAP4 SWAP5 SWAP3 PUSH2 0x2D0 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x1 SSTORE JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2BC JUMPI PUSH1 0x2 SLOAD PUSH1 0x1 DUP2 DUP2 SHR SWAP2 AND DUP1 ISZERO PUSH2 0x2B2 JUMPI JUMPDEST PUSH1 0x20 DUP3 LT EQ PUSH2 0x29E JUMPI PUSH1 0x1F DUP2 GT PUSH2 0x23B JUMPI JUMPDEST POP PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x1D8 JUMPI DUP4 SWAP5 DUP3 SWAP4 SWAP5 SWAP3 PUSH2 0x1CD JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x2 SSTORE JUMPDEST CALLER ISZERO PUSH2 0x1B9 JUMPI PUSH1 0x7 DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE PUSH1 0x40 MLOAD SWAP4 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 POP PUSH1 0x1 PUSH1 0x8 SSTORE PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x1740 SWAP1 DUP2 PUSH2 0x3F1 DUP3 CODECOPY RETURN JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 SWAP1 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x12F JUMP JUMPDEST PUSH1 0x2 DUP5 MSTORE DUP1 DUP5 KECCAK256 SWAP1 PUSH1 0x1F NOT DUP4 AND DUP6 JUMPDEST DUP2 DUP2 LT PUSH2 0x223 JUMPI POP SWAP6 DUP4 PUSH1 0x1 SWAP6 SWAP7 SWAP8 LT PUSH2 0x20A JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x2 SSTORE PUSH2 0x145 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x1FC JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP12 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x1E7 JUMP JUMPDEST PUSH1 0x2 DUP5 MSTORE PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP5 LT PUSH2 0x294 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x289 JUMPI POP PUSH2 0x116 JUMP JUMPDEST DUP5 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x27C JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x273 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH2 0x104 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0xCD JUMP JUMPDEST PUSH1 0x1F NOT DUP3 AND SWAP6 PUSH1 0x1 DUP6 MSTORE DUP1 DUP6 KECCAK256 SWAP2 DUP6 JUMPDEST DUP9 DUP2 LT PUSH2 0x327 JUMPI POP DUP4 PUSH1 0x1 SWAP6 SWAP7 SWAP8 SWAP9 LT PUSH2 0x30E JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x1 SSTORE PUSH2 0xE3 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x300 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x2EB JUMP JUMPDEST PUSH1 0x1 DUP5 MSTORE PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP5 LT PUSH2 0x398 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x38D JUMPI POP PUSH2 0xB1 JUMP JUMPDEST DUP5 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x380 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x377 JUMP JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH2 0x9F JUMP JUMPDEST POP DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP2 SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH2 0x3DA JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 DUP2 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1FFC9A7 EQ PUSH2 0x1048 JUMPI POP DUP1 PUSH4 0x3753CF6 EQ PUSH2 0x101F JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xF62 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0xF25 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xE3D JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xDFD JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xDE5 JUMPI DUP1 PUSH4 0x32D236A6 EQ PUSH2 0xCF2 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0xCC2 JUMPI DUP1 PUSH4 0x46119F8E EQ PUSH2 0xB35 JUMPI DUP1 PUSH4 0x4D74D3B4 EQ PUSH2 0xAF0 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0xABF JUMPI DUP1 PUSH4 0x64FD8894 EQ PUSH2 0x77A JUMPI DUP1 PUSH4 0x6AE83F79 EQ PUSH2 0x68C JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x639 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x5DC JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x5B3 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x4A6 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x406 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x393 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x1D1 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x148 JUMPI PUSH4 0xF47C84C5 EQ PUSH2 0x129 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x145 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x145 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH2 0x7D0 DUP2 MSTORE RETURN JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x145 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x145 JUMPI PUSH2 0x162 PUSH2 0x10FD JUMP JUMPDEST PUSH2 0x16A PUSH2 0x15A4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x1BD JUMPI PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 SWAP1 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST POP CALLVALUE PUSH2 0x145 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x145 JUMPI PUSH1 0x40 PUSH2 0x1ED PUSH2 0x10FD JUMP JUMPDEST SWAP2 PUSH2 0x1F6 PUSH2 0x1118 JUMP JUMPDEST SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x145 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x145 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x8 SLOAD PUSH1 0x0 NOT DUP2 ADD SWAP1 DUP2 GT PUSH2 0x37F JUMPI DUP2 GT PUSH2 0x33A JUMPI PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD PUSH4 0x210FA96B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP3 SWAP1 DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x32F JUMPI DUP3 SWAP2 PUSH2 0x2A9 JUMPI JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 SWAP1 PUSH2 0x2A5 SWAP1 DUP3 ADD DUP6 PUSH2 0x10D8 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST SWAP1 POP RETURNDATASIZE DUP1 DUP4 DUP4 RETURNDATACOPY PUSH2 0x2BA DUP2 DUP4 PUSH2 0x1168 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0x327 JUMPI DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x32B JUMPI ADD DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x327 JUMPI DUP1 MLOAD SWAP3 PUSH2 0x2F0 DUP5 PUSH2 0x119F JUMP JUMPDEST SWAP3 PUSH2 0x2FE PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x1168 JUMP JUMPDEST DUP5 DUP5 MSTORE PUSH1 0x20 DUP6 DUP5 ADD ADD GT PUSH2 0x145 JUMPI POP PUSH2 0x2A5 SWAP3 PUSH2 0x321 SWAP2 PUSH1 0x20 DUP1 DUP6 ADD SWAP2 ADD PUSH2 0x10B5 JUMP JUMPDEST CODESIZE PUSH2 0x28F JUMP JUMPDEST DUP3 DUP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x55524920717565727920666F72206E6F6E6578697374656E7420746F6B656E00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST POP CALLVALUE PUSH2 0x145 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x145 JUMPI PUSH2 0x3AD PUSH2 0x10FD JUMP JUMPDEST PUSH2 0x3B5 PUSH2 0x1118 JUMP JUMPDEST SWAP1 PUSH1 0x44 CALLDATALOAD PUSH1 0x64 CALLDATALOAD SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP5 GT PUSH2 0x402 JUMPI CALLDATASIZE PUSH1 0x23 DUP6 ADD SLT ISZERO PUSH2 0x402 JUMPI PUSH2 0x3ED PUSH2 0x3FF SWAP5 CALLDATASIZE SWAP1 PUSH1 0x24 DUP2 PUSH1 0x4 ADD CALLDATALOAD SWAP2 ADD PUSH2 0x11BA JUMP JUMPDEST SWAP3 PUSH2 0x3F9 DUP4 DUP4 DUP4 PUSH2 0x124E JUMP JUMPDEST CALLER PUSH2 0x15CD JUMP JUMPDEST DUP1 RETURN JUMPDEST DUP5 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x145 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x145 JUMPI PUSH2 0x420 PUSH2 0x10FD JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO DUP1 SWAP3 SUB PUSH2 0x327 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x492 JUMPI CALLER DUP4 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND PUSH1 0xFF DUP4 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 PUSH1 0x20 CALLER SWAP3 LOG3 DUP1 RETURN JUMPDEST PUSH4 0xB611743 PUSH1 0xE3 SHL DUP4 MSTORE PUSH1 0x4 DUP3 SWAP1 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST POP CALLVALUE PUSH2 0x145 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x145 JUMPI PUSH1 0x40 MLOAD SWAP1 DUP1 PUSH1 0x2 SLOAD SWAP1 DUP2 PUSH1 0x1 SHR SWAP2 PUSH1 0x1 DUP2 AND DUP1 ISZERO PUSH2 0x5A9 JUMPI JUMPDEST PUSH1 0x20 DUP5 LT DUP2 EQ PUSH2 0x595 JUMPI DUP4 DUP7 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x56E JUMPI POP PUSH1 0x1 EQ PUSH2 0x511 JUMPI JUMPDEST PUSH2 0x2A5 DUP5 PUSH2 0x4FD DUP2 DUP7 SUB DUP3 PUSH2 0x1168 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x10D8 JUMP JUMPDEST PUSH1 0x2 DUP2 MSTORE PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE SWAP4 SWAP3 POP SWAP1 JUMPDEST DUP1 DUP3 LT PUSH2 0x554 JUMPI POP SWAP1 SWAP2 POP DUP2 ADD PUSH1 0x20 ADD PUSH2 0x4FD DUP3 PUSH2 0x4ED JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP9 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP3 SWAP2 PUSH2 0x53B JUMP JUMPDEST PUSH1 0xFF NOT AND PUSH1 0x20 DUP1 DUP8 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 ISZERO ISZERO PUSH1 0x5 SHL DUP6 ADD SWAP1 SWAP3 ADD SWAP3 POP PUSH2 0x4FD SWAP2 POP DUP4 SWAP1 POP PUSH2 0x4ED JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST SWAP3 PUSH1 0x7F AND SWAP3 PUSH2 0x4D0 JUMP JUMPDEST POP CALLVALUE PUSH2 0x145 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x145 JUMPI PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x145 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x145 JUMPI PUSH2 0x5F5 PUSH2 0x15A4 JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x145 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x145 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x65B PUSH2 0x10FD JUMP JUMPDEST AND DUP1 ISZERO PUSH2 0x678 JUMPI DUP2 PUSH1 0x40 SWAP2 PUSH1 0x20 SWAP4 MSTORE PUSH1 0x4 DUP4 MSTORE KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH4 0x22718AD9 PUSH1 0xE2 SHL DUP3 MSTORE PUSH1 0x4 DUP3 SWAP1 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST POP CALLVALUE PUSH2 0x145 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x145 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x776 JUMPI PUSH2 0x6C1 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x11F1 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x0 NOT DUP2 ADD SWAP5 SWAP2 SWAP3 SWAP1 DUP6 GT PUSH2 0x762 JUMPI PUSH2 0x6E0 DUP5 SWAP6 DUP4 GT ISZERO PUSH2 0x13F4 JUMP JUMPDEST PUSH2 0x6FC PUSH2 0x6EC DUP4 PUSH2 0x156D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x144E JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 EXTCODESIZE ISZERO PUSH2 0x402 JUMPI PUSH2 0x740 SWAP4 DUP6 DUP1 SWAP5 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH4 0x6AE83F79 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x4 DUP6 ADD MSTORE PUSH1 0x40 PUSH1 0x24 DUP6 ADD MSTORE PUSH1 0x44 DUP5 ADD SWAP2 PUSH2 0x14F2 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x32F JUMPI PUSH2 0x751 JUMPI POP RETURN JUMPDEST DUP2 PUSH2 0x75B SWAP2 PUSH2 0x1168 JUMP JUMPDEST PUSH2 0x145 JUMPI DUP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x145 JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x145 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x776 JUMPI PUSH2 0x7AB SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x11F1 JUMP JUMPDEST PUSH1 0x84 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x32B JUMPI PUSH2 0x7CA SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1221 JUMP JUMPDEST PUSH1 0x8 SLOAD SWAP4 SWAP1 SWAP2 PUSH1 0x0 NOT DUP6 EQ PUSH2 0xAAB JUMPI PUSH1 0x1 DUP6 ADD PUSH1 0x8 SSTORE PUSH2 0x7D0 DUP6 GT PUSH2 0xA72 JUMPI DUP6 SWAP4 PUSH2 0x7F6 DUP5 ISZERO ISZERO PUSH2 0x14A6 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 EXTCODESIZE ISZERO PUSH2 0xA6E JUMPI DUP6 DUP1 SWAP5 PUSH2 0x83D PUSH1 0x40 MLOAD SWAP8 DUP9 SWAP7 DUP8 SWAP6 DUP7 SWAP5 PUSH4 0x3BAC3093 PUSH1 0xE1 SHL DUP7 MSTORE DUP14 PUSH1 0x24 CALLDATALOAD SWAP3 PUSH1 0x44 CALLDATALOAD SWAP3 PUSH1 0x1 PUSH1 0x64 CALLDATALOAD EQ SWAP3 PUSH1 0x4 DUP11 ADD PUSH2 0x1516 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x32F JUMPI PUSH2 0xA59 JUMPI JUMPDEST POP POP PUSH1 0x20 SWAP2 PUSH1 0x40 MLOAD PUSH2 0x85E DUP5 DUP3 PUSH2 0x1168 JUMP JUMPDEST DUP2 DUP2 MSTORE CALLER ISZERO PUSH2 0xA45 JUMPI DUP3 DUP3 MSTORE PUSH1 0x3 DUP5 MSTORE PUSH1 0x40 DUP3 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO ISZERO SWAP1 DUP2 PUSH2 0xA11 JUMPI JUMPDEST CALLER DUP1 DUP6 MSTORE PUSH1 0x4 DUP8 MSTORE PUSH1 0x40 DUP1 DUP7 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE DUP7 DUP7 MSTORE PUSH1 0x3 DUP9 MSTORE DUP6 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP3 OR SWAP1 SSTORE DUP6 SWAP1 DUP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP8 DUP1 LOG4 POP PUSH2 0x9FD JUMPI DUP4 CALLER EXTCODESIZE PUSH2 0x8EF JUMPI JUMPDEST PUSH1 0x40 MLOAD DUP5 DUP2 MSTORE RETURN JUMPDEST PUSH2 0x927 SWAP2 PUSH1 0x40 MLOAD DUP1 SWAP4 DUP2 SWAP3 PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP4 MSTORE CALLER PUSH1 0x4 DUP5 ADD MSTORE DUP7 PUSH1 0x24 DUP5 ADD MSTORE DUP8 PUSH1 0x44 DUP5 ADD MSTORE PUSH1 0x80 PUSH1 0x64 DUP5 ADD MSTORE PUSH1 0x84 DUP4 ADD SWAP1 PUSH2 0x10D8 JUMP JUMPDEST SUB DUP2 DUP6 CALLER GAS CALL DUP3 SWAP2 DUP2 PUSH2 0x9BD JUMPI JUMPDEST POP PUSH2 0x98A JUMPI DUP4 DUP3 RETURNDATASIZE ISZERO PUSH2 0x983 JUMPI RETURNDATASIZE PUSH2 0x94C DUP2 PUSH2 0x119F JUMP JUMPDEST SWAP1 PUSH2 0x95A PUSH1 0x40 MLOAD SWAP3 DUP4 PUSH2 0x1168 JUMP JUMPDEST DUP2 MSTORE RETURNDATASIZE DUP3 DUP5 DUP4 ADD RETURNDATACOPY JUMPDEST DUP1 MLOAD SWAP3 DUP4 PUSH2 0x97E JUMPI PUSH4 0x32505749 PUSH1 0xE1 SHL DUP4 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST ADD SWAP1 POP REVERT JUMPDEST PUSH1 0x60 PUSH2 0x963 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0x757A42FF PUSH1 0xE1 SHL ADD PUSH2 0x9AA JUMPI POP CODESIZE DUP1 DUP4 PUSH2 0x8E7 JUMP JUMPDEST PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST SWAP1 SWAP2 POP DUP5 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x9F6 JUMPI JUMPDEST PUSH2 0x9D5 DUP2 DUP4 PUSH2 0x1168 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x327 JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 SUB PUSH2 0x327 JUMPI SWAP1 CODESIZE PUSH2 0x935 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x9CB JUMP JUMPDEST PUSH4 0x39E35637 PUSH1 0xE1 SHL DUP3 MSTORE PUSH1 0x4 DUP3 SWAP1 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE DUP1 DUP5 MSTORE PUSH1 0x4 DUP7 MSTORE PUSH1 0x40 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE PUSH2 0x886 JUMP JUMPDEST PUSH4 0x32505749 PUSH1 0xE1 SHL DUP3 MSTORE PUSH1 0x4 DUP3 SWAP1 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST DUP2 PUSH2 0xA63 SWAP2 PUSH2 0x1168 JUMP JUMPDEST PUSH2 0x776 JUMPI DUP2 CODESIZE PUSH2 0x84C JUMP JUMPDEST DUP6 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x13585E081D1BDAD95B9CC81B5A5B9D1959 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST POP CALLVALUE PUSH2 0x145 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x145 JUMPI PUSH1 0x20 PUSH2 0xADE PUSH1 0x4 CALLDATALOAD PUSH2 0x156D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x145 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x145 JUMPI PUSH2 0xB0A PUSH2 0x10FD JUMP JUMPDEST PUSH2 0xB12 PUSH2 0x15A4 JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x145 JUMPI PUSH1 0xC0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x145 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x327 JUMPI PUSH2 0xB69 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x11F1 JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0xA4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x402 JUMPI PUSH2 0xB8A SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1221 JUMP JUMPDEST PUSH1 0x8 SLOAD SWAP2 SWAP4 SWAP2 PUSH1 0x0 NOT DUP2 ADD SWAP1 DUP2 GT PUSH2 0xCAE JUMPI DUP4 GT PUSH2 0xC5B JUMPI PUSH2 0xBAB DUP4 PUSH2 0x156D JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SUB PUSH2 0xC0B JUMPI PUSH1 0x9 SLOAD DUP7 SWAP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 DUP3 EXTCODESIZE ISZERO PUSH2 0xC07 JUMPI DUP7 SWAP5 PUSH2 0x740 DUP7 SWAP3 PUSH1 0x40 MLOAD SWAP9 DUP10 SWAP8 DUP9 SWAP7 DUP8 SWAP6 PUSH4 0x3BAC3093 PUSH1 0xE1 SHL DUP8 MSTORE PUSH1 0x44 CALLDATALOAD SWAP3 PUSH1 0x64 CALLDATALOAD SWAP3 PUSH1 0x1 PUSH1 0x84 CALLDATALOAD EQ SWAP3 PUSH1 0x4 DUP11 ADD PUSH2 0x1516 JUMP JUMPDEST DUP7 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920746865206F776E65722063616E20757064617465206D6574616461 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7461 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D657461646174612075706461746520666F72206E6F6E6578697374656E7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x3A37B5B2B7 PUSH1 0xD9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP8 REVERT JUMPDEST POP CALLVALUE PUSH2 0x145 JUMPI PUSH2 0x3FF PUSH2 0xCD4 CALLDATASIZE PUSH2 0x112E JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP3 PUSH2 0xCE4 PUSH1 0x20 DUP6 PUSH2 0x1168 JUMP JUMPDEST DUP6 DUP5 MSTORE PUSH2 0x3F9 DUP4 DUP4 DUP4 PUSH2 0x124E JUMP JUMPDEST POP CALLVALUE PUSH2 0x145 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x145 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x327 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x327 JUMPI PUSH2 0xD37 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x24 DUP2 PUSH1 0x4 ADD CALLDATALOAD SWAP2 ADD PUSH2 0x11BA JUMP JUMPDEST SWAP1 PUSH2 0xD40 PUSH2 0x15A4 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x0 NOT DUP2 ADD SWAP1 DUP2 GT PUSH2 0x762 JUMPI SWAP1 PUSH2 0xD5D DUP5 SWAP3 DUP3 GT ISZERO PUSH2 0x13F4 JUMP JUMPDEST PUSH2 0xD69 PUSH2 0x6EC DUP3 PUSH2 0x156D JUMP JUMPDEST PUSH2 0xD75 DUP4 MLOAD ISZERO ISZERO PUSH2 0x14A6 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 DUP4 EXTCODESIZE ISZERO PUSH2 0x327 JUMPI PUSH2 0xDB9 SWAP4 DUP4 SWAP3 DUP4 PUSH1 0x40 MLOAD DUP1 SWAP8 DUP2 SWAP6 DUP3 SWAP5 PUSH4 0x19691B53 PUSH1 0xE1 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x40 PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x44 DUP4 ADD SWAP1 PUSH2 0x10D8 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0xDD8 JUMPI PUSH2 0xDCA JUMPI DUP1 RETURN JUMPDEST PUSH2 0xDD3 SWAP2 PUSH2 0x1168 JUMP JUMPDEST CODESIZE DUP2 DUP1 RETURN JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x145 JUMPI PUSH2 0x3FF PUSH2 0xDF7 CALLDATASIZE PUSH2 0x112E JUMP JUMPDEST SWAP2 PUSH2 0x124E JUMP JUMPDEST POP CALLVALUE PUSH2 0x145 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x145 JUMPI PUSH1 0x8 SLOAD PUSH1 0x0 NOT DUP2 ADD SWAP2 SWAP1 DUP3 GT PUSH2 0xE29 JUMPI PUSH1 0x20 DUP3 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x145 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x145 JUMPI PUSH2 0xE57 PUSH2 0x10FD JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH2 0xE63 DUP2 PUSH2 0x156D JUMP JUMPDEST CALLER ISZERO ISZERO DUP1 PUSH2 0xF12 JUMPI JUMPDEST DUP1 PUSH2 0xEE7 JUMPI JUMPDEST PUSH2 0xED4 JUMPI DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP7 DUP1 LOG4 DUP3 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP1 RETURN JUMPDEST PUSH4 0xA9FBF51F PUSH1 0xE0 SHL DUP5 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP5 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP7 KECCAK256 CALLER DUP8 MSTORE SWAP1 SWAP2 MSTORE DUP5 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xE72 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ ISZERO PUSH2 0xE6C JUMP JUMPDEST POP CALLVALUE PUSH2 0x145 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x145 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x4 CALLDATALOAD PUSH2 0xF46 DUP2 PUSH2 0x156D JUMP JUMPDEST POP DUP2 MSTORE PUSH1 0x5 DUP3 MSTORE PUSH1 0x40 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x145 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x145 JUMPI PUSH1 0x40 MLOAD SWAP1 DUP1 PUSH1 0x1 SLOAD SWAP1 DUP2 PUSH1 0x1 SHR SWAP2 PUSH1 0x1 DUP2 AND DUP1 ISZERO PUSH2 0x1015 JUMPI JUMPDEST PUSH1 0x20 DUP5 LT DUP2 EQ PUSH2 0x595 JUMPI DUP4 DUP7 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x56E JUMPI POP PUSH1 0x1 EQ PUSH2 0xFB8 JUMPI PUSH2 0x2A5 DUP5 PUSH2 0x4FD DUP2 DUP7 SUB DUP3 PUSH2 0x1168 JUMP JUMPDEST PUSH1 0x1 DUP2 MSTORE PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 SWAP4 SWAP3 POP SWAP1 JUMPDEST DUP1 DUP3 LT PUSH2 0xFFB JUMPI POP SWAP1 SWAP2 POP DUP2 ADD PUSH1 0x20 ADD PUSH2 0x4FD DUP3 PUSH2 0x4ED JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP9 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP3 SWAP2 PUSH2 0xFE2 JUMP JUMPDEST SWAP3 PUSH1 0x7F AND SWAP3 PUSH2 0xF8C JUMP JUMPDEST POP CALLVALUE PUSH2 0x145 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x145 JUMPI PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x776 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x776 JUMPI PUSH1 0x4 CALLDATALOAD PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP2 AND DUP1 SWAP2 SUB PUSH2 0x327 JUMPI PUSH1 0x20 SWAP3 POP PUSH4 0x80AC58CD PUSH1 0xE0 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x10A4 JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x1093 JUMPI JUMPDEST POP ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 POP CODESIZE PUSH2 0x108C JUMP JUMPDEST PUSH4 0x5B5E139F PUSH1 0xE0 SHL DUP2 EQ SWAP2 POP PUSH2 0x1085 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x10C8 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x10B8 JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x10F1 DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x10B5 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x1113 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x1113 JUMPI JUMP JUMPDEST PUSH1 0x60 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x1113 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x1113 JUMPI SWAP1 PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x1113 JUMPI SWAP1 PUSH1 0x44 CALLDATALOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x1189 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1189 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH2 0x11C6 DUP3 PUSH2 0x119F JUMP JUMPDEST SWAP2 PUSH2 0x11D4 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x1168 JUMP JUMPDEST DUP3 SWAP5 DUP2 DUP5 MSTORE DUP2 DUP4 ADD GT PUSH2 0x1113 JUMPI DUP3 DUP2 PUSH1 0x20 SWAP4 DUP5 PUSH1 0x0 SWAP7 ADD CALLDATACOPY ADD ADD MSTORE JUMP JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x1113 JUMPI DUP3 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x1113 JUMPI PUSH1 0x20 DUP1 DUP6 ADD SWAP5 DUP5 PUSH1 0x5 SHL ADD ADD GT PUSH2 0x1113 JUMPI JUMP JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x1113 JUMPI DUP3 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x1113 JUMPI PUSH1 0x20 DUP4 DUP2 DUP7 ADD SWAP6 ADD ADD GT PUSH2 0x1113 JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 SWAP1 DUP3 ISZERO PUSH2 0x13DE JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP4 DUP4 SWAP2 DUP6 SWAP1 CALLER ISZERO ISZERO DUP1 PUSH2 0x1346 JUMPI JUMPDEST POP PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP3 PUSH2 0x1311 JUMPI JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE DUP7 DUP4 MSTORE PUSH1 0x3 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP6 OR SWAP1 SSTORE DUP1 LOG4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 DUP4 SUB PUSH2 0x12F7 JUMPI POP POP POP JUMP JUMPDEST PUSH4 0x64283D7B PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE PUSH1 0x64 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE PUSH2 0x12B0 JUMP JUMPDEST SWAP2 POP SWAP2 SWAP3 POP DUP1 PUSH2 0x138F JUMPI JUMPDEST ISZERO PUSH2 0x1360 JUMPI SWAP1 DUP5 DUP5 SWAP3 CODESIZE PUSH2 0x1287 JUMP JUMPDEST DUP4 SWAP1 DUP6 PUSH2 0x1379 JUMPI PUSH1 0x24 SWAP2 PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x44 SWAP2 PUSH4 0x177E802F PUSH1 0xE0 SHL DUP3 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE REVERT JUMPDEST POP CALLER DUP6 EQ DUP1 ISZERO PUSH2 0x13BD JUMPI JUMPDEST DUP1 PUSH2 0x1351 JUMPI POP DUP4 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1351 JUMP JUMPDEST POP DUP5 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x139A JUMP JUMPDEST PUSH4 0x32505749 PUSH1 0xE1 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ISZERO PUSH2 0x13FB JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5765617261626C652075706461746520666F72206E6F6E6578697374656E7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x3A37B5B2B7 PUSH1 0xD9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1455 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920746865206F776E65722063616E2075706461746520776561726162 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x6C6573 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x14AD JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x426173653634205552492063616E6E6F7420626520656D707479000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP2 DUP4 MSTORE SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xFB SHL SUB DUP4 GT PUSH2 0x1113 JUMPI PUSH1 0x20 SWAP3 PUSH1 0x5 SHL DUP1 SWAP3 DUP5 DUP4 ADD CALLDATACOPY ADD ADD SWAP1 JUMP JUMPDEST SWAP3 DUP9 SWAP7 SWAP3 PUSH2 0x1538 SWAP2 PUSH1 0x20 SWAP11 SWAP8 SWAP4 SWAP10 SWAP7 SWAP10 DUP7 MSTORE PUSH1 0xC0 DUP12 DUP8 ADD MSTORE PUSH1 0xC0 DUP7 ADD SWAP2 PUSH2 0x14F2 JUMP JUMPDEST SWAP7 ISZERO ISZERO PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 DUP2 DUP7 SUB SWAP2 ADD MSTORE DUP2 DUP5 MSTORE DUP5 DUP5 ADD CALLDATACOPY PUSH1 0x0 DUP3 DUP3 ADD DUP5 ADD MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x1590 JUMPI POP SWAP1 JUMP JUMPDEST PUSH4 0x7E273289 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x15B8 JUMPI JUMP JUMPDEST PUSH4 0x118CDAA7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP3 EXTCODESIZE PUSH2 0x15DB JUMPI JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP2 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x80 PUSH1 0x64 DUP3 ADD MSTORE SWAP2 AND SWAP2 PUSH1 0x20 SWAP1 DUP3 SWAP1 DUP2 SWAP1 PUSH2 0x1627 SWAP1 PUSH1 0x84 DUP4 ADD SWAP1 PUSH2 0x10D8 JUMP JUMPDEST SUB DUP2 PUSH1 0x0 DUP7 GAS CALL DUP1 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x16C7 JUMPI JUMPDEST POP SWAP1 PUSH2 0x1691 JUMPI POP RETURNDATASIZE ISZERO PUSH2 0x168A JUMPI RETURNDATASIZE PUSH2 0x164F DUP2 PUSH2 0x119F JUMP JUMPDEST SWAP1 PUSH2 0x165D PUSH1 0x40 MLOAD SWAP3 DUP4 PUSH2 0x1168 JUMP JUMPDEST DUP2 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP4 ADD RETURNDATACOPY JUMPDEST DUP1 MLOAD SWAP1 DUP2 PUSH2 0x1685 JUMPI DUP3 PUSH4 0x32505749 PUSH1 0xE1 SHL PUSH1 0x0 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x60 PUSH2 0x1668 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0x757A42FF PUSH1 0xE1 SHL ADD PUSH2 0x16B3 JUMPI POP CODESIZE DUP1 DUP1 DUP1 DUP1 PUSH2 0x15D4 JUMP JUMPDEST PUSH4 0x32505749 PUSH1 0xE1 SHL PUSH1 0x0 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1702 JUMPI JUMPDEST DUP2 PUSH2 0x16E0 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1168 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x776 JUMPI MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND DUP3 SUB PUSH2 0x145 JUMPI POP CODESIZE PUSH2 0x1638 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x16D3 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG4 MSIZE 0x25 PUSH31 0x63C3A3AA67F7FBF1E44883DB420635869F0857A0A2111F3B7DA4C6464736F PUSH13 0x634300081C0033000000000000 ","sourceMap":"457:3004:18:-:0;;;;;;-1:-1:-1;457:3004:18;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;457:3004:18;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;457:3004:18;;;;;;;:::i;:::-;;;;-1:-1:-1;;;457:3004:18;;;;1857:1:10;457:3004:18;;;;;;;-1:-1:-1;;;;;457:3004:18;;;;1857:1:10;457:3004:18;1857:1:10;457:3004:18;;;;;;;;;-1:-1:-1;457:3004:18;;;;;;;;;;;-1:-1:-1;457:3004:18;;;;;;;;;;;;;;;;;;;;;;;;1857:1:10;457:3004:18;;;;;;;;;;;1857:1:10;457:3004:18;;;;-1:-1:-1;;;;;457:3004:18;;;;1469:17:2;457:3004:18;1857:1:10;457:3004:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1857:1:10;457:3004:18;;;;;;;;;;;1469:17:2;457:3004:18;;718:10;1273:26:0;1269:95;;457:3004:18;;;718:10;-1:-1:-1;;;;;;457:3004:18;;;;;;;;;;;718:10;-1:-1:-1;;;;;457:3004:18;3052:40:0;457:3004:18;;3052:40:0;-1:-1:-1;1857:1:10;547::18;457:3004;946:67;457:3004;;-1:-1:-1;;;;;;457:3004:18;;;;;;;;;;;;;;1269:95:0;-1:-1:-1;;;1322:31:0;;;457:3004:18;;;;1322:31:0;;457:3004:18;;;;-1:-1:-1;457:3004:18;;;;;1469:17:2;457:3004:18;;;;;;-1:-1:-1;;457:3004:18;;;;;;;;;;;;1857:1:10;457:3004:18;;;;;;;;;;;;;1469:17:2;457:3004:18;;;;;;;;;;;;;;;;;;;;;;;;;;;1857:1:10;457:3004:18;;;;;;;;;;;;;;;;1469:17:2;457:3004:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1857:1:10;457:3004:18;;;;;;-1:-1:-1;457:3004:18;;;;;-1:-1:-1;;;457:3004:18;;;;;;;;;;;;;;;;-1:-1:-1;;;457:3004:18;;;;;;;;;;;;-1:-1:-1;457:3004:18;;;;;;;;;;1857:1:10;457:3004:18;;;;;;;;;;;;;;;1857:1:10;457:3004:18;;;;;;;;;;;;;;1857:1:10;457:3004:18;;;;;;;;;;;;;;;;;;;;;;;;;;;1857:1:10;457:3004:18;;;;;;;;;;;;;;;;1857:1:10;457:3004:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1857:1:10;457:3004:18;;;;;;-1:-1:-1;457:3004:18;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;457:3004:18;;;-1:-1:-1;;;;;457:3004:18;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;457:3004:18;;;;;-1:-1:-1;457:3004:18"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":4349,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_address_11147":{"entryPoint":4376,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_addresst_addresst_uint256":{"entryPoint":4398,"id":null,"parameterSlots":1,"returnSlots":3},"abi_decode_array_uint256_dyn_calldata":{"entryPoint":4593,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_available_length_string":{"entryPoint":4538,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_string_calldata":{"entryPoint":4641,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_array_uint256_dyn_calldata":{"entryPoint":5362,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_string":{"entryPoint":4312,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_uint256_array_uint256_dyn_calldata_bool_uint256_uint256_string_calldata":{"entryPoint":5398,"id":null,"parameterSlots":9,"returnSlots":1},"array_allocation_size_string":{"entryPoint":4511,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":4277,"id":null,"parameterSlots":3,"returnSlots":0},"finalize_allocation":{"entryPoint":4456,"id":null,"parameterSlots":2,"returnSlots":0},"fun_approve":{"entryPoint":null,"id":1174,"parameterSlots":1,"returnSlots":0},"fun_checkOnERC721Received":{"entryPoint":5581,"id":1480,"parameterSlots":5,"returnSlots":0},"fun_checkOwner":{"entryPoint":5540,"id":84,"parameterSlots":0,"returnSlots":0},"fun_requireOwned":{"entryPoint":5485,"id":1240,"parameterSlots":1,"returnSlots":1},"fun_transferFrom":{"entryPoint":4686,"id":601,"parameterSlots":3,"returnSlots":0},"require_helper_stringliteral_370a":{"entryPoint":5108,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_c519":{"entryPoint":5286,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_e362":{"entryPoint":5198,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 DUP2 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1FFC9A7 EQ PUSH2 0x1048 JUMPI POP DUP1 PUSH4 0x3753CF6 EQ PUSH2 0x101F JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xF62 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0xF25 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xE3D JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xDFD JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xDE5 JUMPI DUP1 PUSH4 0x32D236A6 EQ PUSH2 0xCF2 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0xCC2 JUMPI DUP1 PUSH4 0x46119F8E EQ PUSH2 0xB35 JUMPI DUP1 PUSH4 0x4D74D3B4 EQ PUSH2 0xAF0 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0xABF JUMPI DUP1 PUSH4 0x64FD8894 EQ PUSH2 0x77A JUMPI DUP1 PUSH4 0x6AE83F79 EQ PUSH2 0x68C JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x639 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x5DC JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x5B3 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x4A6 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x406 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x393 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x1D1 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x148 JUMPI PUSH4 0xF47C84C5 EQ PUSH2 0x129 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x145 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x145 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH2 0x7D0 DUP2 MSTORE RETURN JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x145 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x145 JUMPI PUSH2 0x162 PUSH2 0x10FD JUMP JUMPDEST PUSH2 0x16A PUSH2 0x15A4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x1BD JUMPI PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 SWAP1 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST POP CALLVALUE PUSH2 0x145 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x145 JUMPI PUSH1 0x40 PUSH2 0x1ED PUSH2 0x10FD JUMP JUMPDEST SWAP2 PUSH2 0x1F6 PUSH2 0x1118 JUMP JUMPDEST SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x145 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x145 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x8 SLOAD PUSH1 0x0 NOT DUP2 ADD SWAP1 DUP2 GT PUSH2 0x37F JUMPI DUP2 GT PUSH2 0x33A JUMPI PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD PUSH4 0x210FA96B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP3 SWAP1 DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x32F JUMPI DUP3 SWAP2 PUSH2 0x2A9 JUMPI JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 SWAP1 PUSH2 0x2A5 SWAP1 DUP3 ADD DUP6 PUSH2 0x10D8 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST SWAP1 POP RETURNDATASIZE DUP1 DUP4 DUP4 RETURNDATACOPY PUSH2 0x2BA DUP2 DUP4 PUSH2 0x1168 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0x327 JUMPI DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x32B JUMPI ADD DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x327 JUMPI DUP1 MLOAD SWAP3 PUSH2 0x2F0 DUP5 PUSH2 0x119F JUMP JUMPDEST SWAP3 PUSH2 0x2FE PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x1168 JUMP JUMPDEST DUP5 DUP5 MSTORE PUSH1 0x20 DUP6 DUP5 ADD ADD GT PUSH2 0x145 JUMPI POP PUSH2 0x2A5 SWAP3 PUSH2 0x321 SWAP2 PUSH1 0x20 DUP1 DUP6 ADD SWAP2 ADD PUSH2 0x10B5 JUMP JUMPDEST CODESIZE PUSH2 0x28F JUMP JUMPDEST DUP3 DUP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x55524920717565727920666F72206E6F6E6578697374656E7420746F6B656E00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST POP CALLVALUE PUSH2 0x145 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x145 JUMPI PUSH2 0x3AD PUSH2 0x10FD JUMP JUMPDEST PUSH2 0x3B5 PUSH2 0x1118 JUMP JUMPDEST SWAP1 PUSH1 0x44 CALLDATALOAD PUSH1 0x64 CALLDATALOAD SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP5 GT PUSH2 0x402 JUMPI CALLDATASIZE PUSH1 0x23 DUP6 ADD SLT ISZERO PUSH2 0x402 JUMPI PUSH2 0x3ED PUSH2 0x3FF SWAP5 CALLDATASIZE SWAP1 PUSH1 0x24 DUP2 PUSH1 0x4 ADD CALLDATALOAD SWAP2 ADD PUSH2 0x11BA JUMP JUMPDEST SWAP3 PUSH2 0x3F9 DUP4 DUP4 DUP4 PUSH2 0x124E JUMP JUMPDEST CALLER PUSH2 0x15CD JUMP JUMPDEST DUP1 RETURN JUMPDEST DUP5 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x145 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x145 JUMPI PUSH2 0x420 PUSH2 0x10FD JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO DUP1 SWAP3 SUB PUSH2 0x327 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x492 JUMPI CALLER DUP4 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND PUSH1 0xFF DUP4 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 PUSH1 0x20 CALLER SWAP3 LOG3 DUP1 RETURN JUMPDEST PUSH4 0xB611743 PUSH1 0xE3 SHL DUP4 MSTORE PUSH1 0x4 DUP3 SWAP1 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST POP CALLVALUE PUSH2 0x145 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x145 JUMPI PUSH1 0x40 MLOAD SWAP1 DUP1 PUSH1 0x2 SLOAD SWAP1 DUP2 PUSH1 0x1 SHR SWAP2 PUSH1 0x1 DUP2 AND DUP1 ISZERO PUSH2 0x5A9 JUMPI JUMPDEST PUSH1 0x20 DUP5 LT DUP2 EQ PUSH2 0x595 JUMPI DUP4 DUP7 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x56E JUMPI POP PUSH1 0x1 EQ PUSH2 0x511 JUMPI JUMPDEST PUSH2 0x2A5 DUP5 PUSH2 0x4FD DUP2 DUP7 SUB DUP3 PUSH2 0x1168 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x10D8 JUMP JUMPDEST PUSH1 0x2 DUP2 MSTORE PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE SWAP4 SWAP3 POP SWAP1 JUMPDEST DUP1 DUP3 LT PUSH2 0x554 JUMPI POP SWAP1 SWAP2 POP DUP2 ADD PUSH1 0x20 ADD PUSH2 0x4FD DUP3 PUSH2 0x4ED JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP9 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP3 SWAP2 PUSH2 0x53B JUMP JUMPDEST PUSH1 0xFF NOT AND PUSH1 0x20 DUP1 DUP8 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 ISZERO ISZERO PUSH1 0x5 SHL DUP6 ADD SWAP1 SWAP3 ADD SWAP3 POP PUSH2 0x4FD SWAP2 POP DUP4 SWAP1 POP PUSH2 0x4ED JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST SWAP3 PUSH1 0x7F AND SWAP3 PUSH2 0x4D0 JUMP JUMPDEST POP CALLVALUE PUSH2 0x145 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x145 JUMPI PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x145 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x145 JUMPI PUSH2 0x5F5 PUSH2 0x15A4 JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x145 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x145 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x65B PUSH2 0x10FD JUMP JUMPDEST AND DUP1 ISZERO PUSH2 0x678 JUMPI DUP2 PUSH1 0x40 SWAP2 PUSH1 0x20 SWAP4 MSTORE PUSH1 0x4 DUP4 MSTORE KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH4 0x22718AD9 PUSH1 0xE2 SHL DUP3 MSTORE PUSH1 0x4 DUP3 SWAP1 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST POP CALLVALUE PUSH2 0x145 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x145 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x776 JUMPI PUSH2 0x6C1 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x11F1 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x0 NOT DUP2 ADD SWAP5 SWAP2 SWAP3 SWAP1 DUP6 GT PUSH2 0x762 JUMPI PUSH2 0x6E0 DUP5 SWAP6 DUP4 GT ISZERO PUSH2 0x13F4 JUMP JUMPDEST PUSH2 0x6FC PUSH2 0x6EC DUP4 PUSH2 0x156D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x144E JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 EXTCODESIZE ISZERO PUSH2 0x402 JUMPI PUSH2 0x740 SWAP4 DUP6 DUP1 SWAP5 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH4 0x6AE83F79 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x4 DUP6 ADD MSTORE PUSH1 0x40 PUSH1 0x24 DUP6 ADD MSTORE PUSH1 0x44 DUP5 ADD SWAP2 PUSH2 0x14F2 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x32F JUMPI PUSH2 0x751 JUMPI POP RETURN JUMPDEST DUP2 PUSH2 0x75B SWAP2 PUSH2 0x1168 JUMP JUMPDEST PUSH2 0x145 JUMPI DUP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x145 JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x145 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x776 JUMPI PUSH2 0x7AB SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x11F1 JUMP JUMPDEST PUSH1 0x84 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x32B JUMPI PUSH2 0x7CA SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1221 JUMP JUMPDEST PUSH1 0x8 SLOAD SWAP4 SWAP1 SWAP2 PUSH1 0x0 NOT DUP6 EQ PUSH2 0xAAB JUMPI PUSH1 0x1 DUP6 ADD PUSH1 0x8 SSTORE PUSH2 0x7D0 DUP6 GT PUSH2 0xA72 JUMPI DUP6 SWAP4 PUSH2 0x7F6 DUP5 ISZERO ISZERO PUSH2 0x14A6 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 EXTCODESIZE ISZERO PUSH2 0xA6E JUMPI DUP6 DUP1 SWAP5 PUSH2 0x83D PUSH1 0x40 MLOAD SWAP8 DUP9 SWAP7 DUP8 SWAP6 DUP7 SWAP5 PUSH4 0x3BAC3093 PUSH1 0xE1 SHL DUP7 MSTORE DUP14 PUSH1 0x24 CALLDATALOAD SWAP3 PUSH1 0x44 CALLDATALOAD SWAP3 PUSH1 0x1 PUSH1 0x64 CALLDATALOAD EQ SWAP3 PUSH1 0x4 DUP11 ADD PUSH2 0x1516 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x32F JUMPI PUSH2 0xA59 JUMPI JUMPDEST POP POP PUSH1 0x20 SWAP2 PUSH1 0x40 MLOAD PUSH2 0x85E DUP5 DUP3 PUSH2 0x1168 JUMP JUMPDEST DUP2 DUP2 MSTORE CALLER ISZERO PUSH2 0xA45 JUMPI DUP3 DUP3 MSTORE PUSH1 0x3 DUP5 MSTORE PUSH1 0x40 DUP3 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO ISZERO SWAP1 DUP2 PUSH2 0xA11 JUMPI JUMPDEST CALLER DUP1 DUP6 MSTORE PUSH1 0x4 DUP8 MSTORE PUSH1 0x40 DUP1 DUP7 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE DUP7 DUP7 MSTORE PUSH1 0x3 DUP9 MSTORE DUP6 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP3 OR SWAP1 SSTORE DUP6 SWAP1 DUP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP8 DUP1 LOG4 POP PUSH2 0x9FD JUMPI DUP4 CALLER EXTCODESIZE PUSH2 0x8EF JUMPI JUMPDEST PUSH1 0x40 MLOAD DUP5 DUP2 MSTORE RETURN JUMPDEST PUSH2 0x927 SWAP2 PUSH1 0x40 MLOAD DUP1 SWAP4 DUP2 SWAP3 PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP4 MSTORE CALLER PUSH1 0x4 DUP5 ADD MSTORE DUP7 PUSH1 0x24 DUP5 ADD MSTORE DUP8 PUSH1 0x44 DUP5 ADD MSTORE PUSH1 0x80 PUSH1 0x64 DUP5 ADD MSTORE PUSH1 0x84 DUP4 ADD SWAP1 PUSH2 0x10D8 JUMP JUMPDEST SUB DUP2 DUP6 CALLER GAS CALL DUP3 SWAP2 DUP2 PUSH2 0x9BD JUMPI JUMPDEST POP PUSH2 0x98A JUMPI DUP4 DUP3 RETURNDATASIZE ISZERO PUSH2 0x983 JUMPI RETURNDATASIZE PUSH2 0x94C DUP2 PUSH2 0x119F JUMP JUMPDEST SWAP1 PUSH2 0x95A PUSH1 0x40 MLOAD SWAP3 DUP4 PUSH2 0x1168 JUMP JUMPDEST DUP2 MSTORE RETURNDATASIZE DUP3 DUP5 DUP4 ADD RETURNDATACOPY JUMPDEST DUP1 MLOAD SWAP3 DUP4 PUSH2 0x97E JUMPI PUSH4 0x32505749 PUSH1 0xE1 SHL DUP4 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST ADD SWAP1 POP REVERT JUMPDEST PUSH1 0x60 PUSH2 0x963 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0x757A42FF PUSH1 0xE1 SHL ADD PUSH2 0x9AA JUMPI POP CODESIZE DUP1 DUP4 PUSH2 0x8E7 JUMP JUMPDEST PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST SWAP1 SWAP2 POP DUP5 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x9F6 JUMPI JUMPDEST PUSH2 0x9D5 DUP2 DUP4 PUSH2 0x1168 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x327 JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 SUB PUSH2 0x327 JUMPI SWAP1 CODESIZE PUSH2 0x935 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x9CB JUMP JUMPDEST PUSH4 0x39E35637 PUSH1 0xE1 SHL DUP3 MSTORE PUSH1 0x4 DUP3 SWAP1 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE DUP1 DUP5 MSTORE PUSH1 0x4 DUP7 MSTORE PUSH1 0x40 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE PUSH2 0x886 JUMP JUMPDEST PUSH4 0x32505749 PUSH1 0xE1 SHL DUP3 MSTORE PUSH1 0x4 DUP3 SWAP1 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST DUP2 PUSH2 0xA63 SWAP2 PUSH2 0x1168 JUMP JUMPDEST PUSH2 0x776 JUMPI DUP2 CODESIZE PUSH2 0x84C JUMP JUMPDEST DUP6 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x13585E081D1BDAD95B9CC81B5A5B9D1959 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST POP CALLVALUE PUSH2 0x145 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x145 JUMPI PUSH1 0x20 PUSH2 0xADE PUSH1 0x4 CALLDATALOAD PUSH2 0x156D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x145 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x145 JUMPI PUSH2 0xB0A PUSH2 0x10FD JUMP JUMPDEST PUSH2 0xB12 PUSH2 0x15A4 JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x145 JUMPI PUSH1 0xC0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x145 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x327 JUMPI PUSH2 0xB69 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x11F1 JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0xA4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x402 JUMPI PUSH2 0xB8A SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1221 JUMP JUMPDEST PUSH1 0x8 SLOAD SWAP2 SWAP4 SWAP2 PUSH1 0x0 NOT DUP2 ADD SWAP1 DUP2 GT PUSH2 0xCAE JUMPI DUP4 GT PUSH2 0xC5B JUMPI PUSH2 0xBAB DUP4 PUSH2 0x156D JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SUB PUSH2 0xC0B JUMPI PUSH1 0x9 SLOAD DUP7 SWAP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 DUP3 EXTCODESIZE ISZERO PUSH2 0xC07 JUMPI DUP7 SWAP5 PUSH2 0x740 DUP7 SWAP3 PUSH1 0x40 MLOAD SWAP9 DUP10 SWAP8 DUP9 SWAP7 DUP8 SWAP6 PUSH4 0x3BAC3093 PUSH1 0xE1 SHL DUP8 MSTORE PUSH1 0x44 CALLDATALOAD SWAP3 PUSH1 0x64 CALLDATALOAD SWAP3 PUSH1 0x1 PUSH1 0x84 CALLDATALOAD EQ SWAP3 PUSH1 0x4 DUP11 ADD PUSH2 0x1516 JUMP JUMPDEST DUP7 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920746865206F776E65722063616E20757064617465206D6574616461 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7461 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D657461646174612075706461746520666F72206E6F6E6578697374656E7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x3A37B5B2B7 PUSH1 0xD9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP8 REVERT JUMPDEST POP CALLVALUE PUSH2 0x145 JUMPI PUSH2 0x3FF PUSH2 0xCD4 CALLDATASIZE PUSH2 0x112E JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP3 PUSH2 0xCE4 PUSH1 0x20 DUP6 PUSH2 0x1168 JUMP JUMPDEST DUP6 DUP5 MSTORE PUSH2 0x3F9 DUP4 DUP4 DUP4 PUSH2 0x124E JUMP JUMPDEST POP CALLVALUE PUSH2 0x145 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x145 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x327 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x327 JUMPI PUSH2 0xD37 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x24 DUP2 PUSH1 0x4 ADD CALLDATALOAD SWAP2 ADD PUSH2 0x11BA JUMP JUMPDEST SWAP1 PUSH2 0xD40 PUSH2 0x15A4 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x0 NOT DUP2 ADD SWAP1 DUP2 GT PUSH2 0x762 JUMPI SWAP1 PUSH2 0xD5D DUP5 SWAP3 DUP3 GT ISZERO PUSH2 0x13F4 JUMP JUMPDEST PUSH2 0xD69 PUSH2 0x6EC DUP3 PUSH2 0x156D JUMP JUMPDEST PUSH2 0xD75 DUP4 MLOAD ISZERO ISZERO PUSH2 0x14A6 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 DUP4 EXTCODESIZE ISZERO PUSH2 0x327 JUMPI PUSH2 0xDB9 SWAP4 DUP4 SWAP3 DUP4 PUSH1 0x40 MLOAD DUP1 SWAP8 DUP2 SWAP6 DUP3 SWAP5 PUSH4 0x19691B53 PUSH1 0xE1 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x40 PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x44 DUP4 ADD SWAP1 PUSH2 0x10D8 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0xDD8 JUMPI PUSH2 0xDCA JUMPI DUP1 RETURN JUMPDEST PUSH2 0xDD3 SWAP2 PUSH2 0x1168 JUMP JUMPDEST CODESIZE DUP2 DUP1 RETURN JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x145 JUMPI PUSH2 0x3FF PUSH2 0xDF7 CALLDATASIZE PUSH2 0x112E JUMP JUMPDEST SWAP2 PUSH2 0x124E JUMP JUMPDEST POP CALLVALUE PUSH2 0x145 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x145 JUMPI PUSH1 0x8 SLOAD PUSH1 0x0 NOT DUP2 ADD SWAP2 SWAP1 DUP3 GT PUSH2 0xE29 JUMPI PUSH1 0x20 DUP3 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x145 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x145 JUMPI PUSH2 0xE57 PUSH2 0x10FD JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH2 0xE63 DUP2 PUSH2 0x156D JUMP JUMPDEST CALLER ISZERO ISZERO DUP1 PUSH2 0xF12 JUMPI JUMPDEST DUP1 PUSH2 0xEE7 JUMPI JUMPDEST PUSH2 0xED4 JUMPI DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP7 DUP1 LOG4 DUP3 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP1 RETURN JUMPDEST PUSH4 0xA9FBF51F PUSH1 0xE0 SHL DUP5 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP5 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP7 KECCAK256 CALLER DUP8 MSTORE SWAP1 SWAP2 MSTORE DUP5 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xE72 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ ISZERO PUSH2 0xE6C JUMP JUMPDEST POP CALLVALUE PUSH2 0x145 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x145 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x4 CALLDATALOAD PUSH2 0xF46 DUP2 PUSH2 0x156D JUMP JUMPDEST POP DUP2 MSTORE PUSH1 0x5 DUP3 MSTORE PUSH1 0x40 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x145 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x145 JUMPI PUSH1 0x40 MLOAD SWAP1 DUP1 PUSH1 0x1 SLOAD SWAP1 DUP2 PUSH1 0x1 SHR SWAP2 PUSH1 0x1 DUP2 AND DUP1 ISZERO PUSH2 0x1015 JUMPI JUMPDEST PUSH1 0x20 DUP5 LT DUP2 EQ PUSH2 0x595 JUMPI DUP4 DUP7 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x56E JUMPI POP PUSH1 0x1 EQ PUSH2 0xFB8 JUMPI PUSH2 0x2A5 DUP5 PUSH2 0x4FD DUP2 DUP7 SUB DUP3 PUSH2 0x1168 JUMP JUMPDEST PUSH1 0x1 DUP2 MSTORE PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 SWAP4 SWAP3 POP SWAP1 JUMPDEST DUP1 DUP3 LT PUSH2 0xFFB JUMPI POP SWAP1 SWAP2 POP DUP2 ADD PUSH1 0x20 ADD PUSH2 0x4FD DUP3 PUSH2 0x4ED JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP9 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP3 SWAP2 PUSH2 0xFE2 JUMP JUMPDEST SWAP3 PUSH1 0x7F AND SWAP3 PUSH2 0xF8C JUMP JUMPDEST POP CALLVALUE PUSH2 0x145 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x145 JUMPI PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x776 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x776 JUMPI PUSH1 0x4 CALLDATALOAD PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP2 AND DUP1 SWAP2 SUB PUSH2 0x327 JUMPI PUSH1 0x20 SWAP3 POP PUSH4 0x80AC58CD PUSH1 0xE0 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x10A4 JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x1093 JUMPI JUMPDEST POP ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 POP CODESIZE PUSH2 0x108C JUMP JUMPDEST PUSH4 0x5B5E139F PUSH1 0xE0 SHL DUP2 EQ SWAP2 POP PUSH2 0x1085 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x10C8 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x10B8 JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x10F1 DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x10B5 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x1113 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x1113 JUMPI JUMP JUMPDEST PUSH1 0x60 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x1113 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x1113 JUMPI SWAP1 PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x1113 JUMPI SWAP1 PUSH1 0x44 CALLDATALOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x1189 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1189 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH2 0x11C6 DUP3 PUSH2 0x119F JUMP JUMPDEST SWAP2 PUSH2 0x11D4 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x1168 JUMP JUMPDEST DUP3 SWAP5 DUP2 DUP5 MSTORE DUP2 DUP4 ADD GT PUSH2 0x1113 JUMPI DUP3 DUP2 PUSH1 0x20 SWAP4 DUP5 PUSH1 0x0 SWAP7 ADD CALLDATACOPY ADD ADD MSTORE JUMP JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x1113 JUMPI DUP3 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x1113 JUMPI PUSH1 0x20 DUP1 DUP6 ADD SWAP5 DUP5 PUSH1 0x5 SHL ADD ADD GT PUSH2 0x1113 JUMPI JUMP JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x1113 JUMPI DUP3 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x1113 JUMPI PUSH1 0x20 DUP4 DUP2 DUP7 ADD SWAP6 ADD ADD GT PUSH2 0x1113 JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 SWAP1 DUP3 ISZERO PUSH2 0x13DE JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP4 DUP4 SWAP2 DUP6 SWAP1 CALLER ISZERO ISZERO DUP1 PUSH2 0x1346 JUMPI JUMPDEST POP PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP3 PUSH2 0x1311 JUMPI JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE DUP7 DUP4 MSTORE PUSH1 0x3 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP6 OR SWAP1 SSTORE DUP1 LOG4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 DUP4 SUB PUSH2 0x12F7 JUMPI POP POP POP JUMP JUMPDEST PUSH4 0x64283D7B PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE PUSH1 0x64 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE PUSH2 0x12B0 JUMP JUMPDEST SWAP2 POP SWAP2 SWAP3 POP DUP1 PUSH2 0x138F JUMPI JUMPDEST ISZERO PUSH2 0x1360 JUMPI SWAP1 DUP5 DUP5 SWAP3 CODESIZE PUSH2 0x1287 JUMP JUMPDEST DUP4 SWAP1 DUP6 PUSH2 0x1379 JUMPI PUSH1 0x24 SWAP2 PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x44 SWAP2 PUSH4 0x177E802F PUSH1 0xE0 SHL DUP3 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE REVERT JUMPDEST POP CALLER DUP6 EQ DUP1 ISZERO PUSH2 0x13BD JUMPI JUMPDEST DUP1 PUSH2 0x1351 JUMPI POP DUP4 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1351 JUMP JUMPDEST POP DUP5 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x139A JUMP JUMPDEST PUSH4 0x32505749 PUSH1 0xE1 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ISZERO PUSH2 0x13FB JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5765617261626C652075706461746520666F72206E6F6E6578697374656E7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x3A37B5B2B7 PUSH1 0xD9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1455 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920746865206F776E65722063616E2075706461746520776561726162 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x6C6573 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x14AD JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x426173653634205552492063616E6E6F7420626520656D707479000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP2 DUP4 MSTORE SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xFB SHL SUB DUP4 GT PUSH2 0x1113 JUMPI PUSH1 0x20 SWAP3 PUSH1 0x5 SHL DUP1 SWAP3 DUP5 DUP4 ADD CALLDATACOPY ADD ADD SWAP1 JUMP JUMPDEST SWAP3 DUP9 SWAP7 SWAP3 PUSH2 0x1538 SWAP2 PUSH1 0x20 SWAP11 SWAP8 SWAP4 SWAP10 SWAP7 SWAP10 DUP7 MSTORE PUSH1 0xC0 DUP12 DUP8 ADD MSTORE PUSH1 0xC0 DUP7 ADD SWAP2 PUSH2 0x14F2 JUMP JUMPDEST SWAP7 ISZERO ISZERO PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 DUP2 DUP7 SUB SWAP2 ADD MSTORE DUP2 DUP5 MSTORE DUP5 DUP5 ADD CALLDATACOPY PUSH1 0x0 DUP3 DUP3 ADD DUP5 ADD MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x1590 JUMPI POP SWAP1 JUMP JUMPDEST PUSH4 0x7E273289 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x15B8 JUMPI JUMP JUMPDEST PUSH4 0x118CDAA7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP3 EXTCODESIZE PUSH2 0x15DB JUMPI JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP2 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x80 PUSH1 0x64 DUP3 ADD MSTORE SWAP2 AND SWAP2 PUSH1 0x20 SWAP1 DUP3 SWAP1 DUP2 SWAP1 PUSH2 0x1627 SWAP1 PUSH1 0x84 DUP4 ADD SWAP1 PUSH2 0x10D8 JUMP JUMPDEST SUB DUP2 PUSH1 0x0 DUP7 GAS CALL DUP1 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x16C7 JUMPI JUMPDEST POP SWAP1 PUSH2 0x1691 JUMPI POP RETURNDATASIZE ISZERO PUSH2 0x168A JUMPI RETURNDATASIZE PUSH2 0x164F DUP2 PUSH2 0x119F JUMP JUMPDEST SWAP1 PUSH2 0x165D PUSH1 0x40 MLOAD SWAP3 DUP4 PUSH2 0x1168 JUMP JUMPDEST DUP2 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP4 ADD RETURNDATACOPY JUMPDEST DUP1 MLOAD SWAP1 DUP2 PUSH2 0x1685 JUMPI DUP3 PUSH4 0x32505749 PUSH1 0xE1 SHL PUSH1 0x0 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x60 PUSH2 0x1668 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0x757A42FF PUSH1 0xE1 SHL ADD PUSH2 0x16B3 JUMPI POP CODESIZE DUP1 DUP1 DUP1 DUP1 PUSH2 0x15D4 JUMP JUMPDEST PUSH4 0x32505749 PUSH1 0xE1 SHL PUSH1 0x0 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1702 JUMPI JUMPDEST DUP2 PUSH2 0x16E0 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1168 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x776 JUMPI MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND DUP3 SUB PUSH2 0x145 JUMPI POP CODESIZE PUSH2 0x1638 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x16D3 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG4 MSIZE 0x25 PUSH31 0x63C3A3AA67F7FBF1E44883DB420635869F0857A0A2111F3B7DA4C6464736F PUSH13 0x634300081C0033000000000000 ","sourceMap":"457:3004:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;649:4;457:3004;;;;;;;;;;;;;-1:-1:-1;;457:3004:18;;;;;;:::i;:::-;1500:62:0;;:::i;:::-;-1:-1:-1;;;;;457:3004:18;2627:22:0;;2623:91;;3004:6;457:3004:18;;-1:-1:-1;;;;;;457:3004:18;;;;;;;-1:-1:-1;;;;;457:3004:18;3052:40:0;;;;457:3004:18;;2623:91:0;-1:-1:-1;;;2672:31:0;;457:3004:18;;;;;2672:31:0;;457:3004:18;;;;;;;-1:-1:-1;;457:3004:18;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;4038:18:2;457:3004:18;;;4038:35:2;457:3004:18;;;;;;-1:-1:-1;457:3004:18;;;;;;-1:-1:-1;457:3004:18;;;;;;;;;;;;;;;;;;-1:-1:-1;;457:3004:18;;;;;;1153:12;457:3004;;;;;;;;;;1143:24;;457:3004;;1223:23;457:3004;;;-1:-1:-1;;;1223:49:18;;457:3004;1223:49;;457:3004;;;;;;;;1223:49;;457:3004;;-1:-1:-1;;;;;457:3004:18;1223:49;;;;;;;;;;;457:3004;;;;;;;;;;;;;;;:::i;:::-;;;;1223:49;;;;;;;;;;;;:::i;:::-;;;457:3004;;;;;;;;;;;-1:-1:-1;;;;;457:3004:18;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1223:49;;;457:3004;;;;;;;;1223:49;457:3004;;;;;;;;;;;;-1:-1:-1;;;457:3004:18;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;457:3004:18;;;;;;;;;;;;;;;-1:-1:-1;;457:3004:18;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;457:3004:18;;;;;;;;;;;;;5205:4:2;457:3004:18;;;;;;;;;;;:::i;:::-;5120:7:2;;;;;;:::i;:::-;735:10:8;5205:4:2;:::i;:::-;457:3004:18;;;;;;;;;;;;;-1:-1:-1;;457:3004:18;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;457:3004:18;;15772:22:2;;15768:91;;735:10:8;457:3004:18;;15868:18:2;457:3004:18;;;;;;-1:-1:-1;457:3004:18;;;;-1:-1:-1;457:3004:18;;;;;;;;;;;;;;;;;15929:41:2;457:3004:18;735:10:8;15929:41:2;;457:3004:18;;15768:91:2;-1:-1:-1;;;15817:31:2;;457:3004:18;;;;;15817:31:2;;457:3004:18;;;;;;;;;;;;;;;;;2596:7:2;457:3004:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;2596:7:2;457:3004:18;;;;;-1:-1:-1;457:3004:18;;;;;;;-1:-1:-1;457:3004:18;;-1:-1:-1;457:3004:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;457:3004:18;;;;;;;;;;;;;;;;;;;;-1:-1:-1;457:3004:18;;-1:-1:-1;457:3004:18;;-1:-1:-1;457:3004:18;;;-1:-1:-1;;;457:3004:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;1710:6:0;457:3004:18;;;-1:-1:-1;;;;;457:3004:18;;;;;;;;;;;;;;;;;;;;;1500:62:0;;:::i;:::-;3004:6;457:3004:18;;-1:-1:-1;;;;;;457:3004:18;;;;;;;-1:-1:-1;;;;;457:3004:18;3052:40:0;457:3004:18;;3052:40:0;457:3004:18;;;;;;;;;-1:-1:-1;;457:3004:18;;;;-1:-1:-1;;;;;457:3004:18;;:::i;:::-;;2005:19:2;;2001:87;;457:3004:18;;;;;;;;;;;;;;;;;2001:87:2;-1:-1:-1;;;2047:30:2;;457:3004:18;;;;;2047:30:2;;457:3004:18;;;;;;;-1:-1:-1;;457:3004:18;;;;;;;;;-1:-1:-1;;;;;457:3004:18;;;;;;;;;;;:::i;:::-;2191:12;457:3004;-1:-1:-1;;457:3004:18;;;;;;;;;;2172:75;2180:25;;;;;2172:75;:::i;:::-;2258:78;2273:22:2;;;:::i;:::-;-1:-1:-1;;;;;457:3004:18;2286:10;2266:30;2258:78;:::i;:::-;2349:23;457:3004;-1:-1:-1;;;;;457:3004:18;2349:61;;;;;457:3004;;;;;;;;;;;;;;;;;2349:61;;457:3004;2349:61;;457:3004;;;;;;;;;;;:::i;:::-;2349:61;;;;;;;;;;457:3004;;2349:61;;;;;:::i;:::-;457:3004;;2349:61;457:3004;;-1:-1:-1;;;457:3004:18;;;;;;;;;;;;;;;;;;;-1:-1:-1;;457:3004:18;;;;;;-1:-1:-1;;;;;457:3004:18;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;457:3004:18;;;;;;;;;;;:::i;:::-;1618:14;457:3004;;;;-1:-1:-1;;457:3004:18;;;;;;;1618:14;457:3004;649:4;1651:21;;457:3004;;1723:27;;1715:66;1723:27;;;1715:66;:::i;:::-;1804:23;457:3004;-1:-1:-1;;;;;457:3004:18;;1804:188;;;;;457:3004;;;1804:188;457:3004;;;;;;;;;;;;1804:188;;457:3004;;;;;;;;;;1900:14;1804:188;457:3004;1804:188;;;:::i;:::-;;;;;;;;;;;457:3004;;;;;;;;;;;:::i;:::-;;;;2015:10;10045:16:2;10041:87;;457:3004:18;;;5824:7:2;457:3004:18;;;;;;-1:-1:-1;;;;;457:3004:18;9184:18:2;;;;;9180:256;;457:3004:18;2015:10;457:3004;;;;;;;;;;;;;;;;;;;5824:7:2;457:3004:18;;;;;;-1:-1:-1;;;;;;457:3004:18;;;;;;;9600:27:2;;457:3004:18;;9600:27:2;10203:96;;;2015:10:18;;1173:14:6;1169:742;;457:3004:18;;;;;;;1169:742:6;457:3004:18;;;;;;;;;;;1211:67:6;;2015:10:18;457:3004;1211:67:6;;457:3004:18;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1211:67:6;2015:10:18;;;1211:67:6;;;;;;;1169:742;-1:-1:-1;1207:694:6;;1518:383;;457:3004:18;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;1568:18:6;;;-1:-1:-1;;;1672:39:6;;2015:10:18;457:3004;;;10084:33:2;1672:39:6;1564:323;1758:111;;-1:-1:-1;1758:111:6;457:3004:18;;;;1207:694:6;-1:-1:-1;;;;;;457:3004:18;-1:-1:-1;;;1325:51:6;1321:182;;1207:694;1169:742;;;;;1321:182;-1:-1:-1;;;1445:39:6;;2015:10:18;457:3004;;;;1445:39:6;1211:67;;;;;;;;;;;;;;;;;:::i;:::-;;;457:3004:18;;;;;-1:-1:-1;;;;;;457:3004:18;;;;;;1211:67:6;;;;;;;;;10203:96:2;-1:-1:-1;;;10257:31:2;;457:3004:18;;;;;10257:31:2;;9180:256;457:3004:18;;;;15420:15:2;457:3004:18;;;;;;;-1:-1:-1;;;;;;457:3004:18;;;;;;;;;;;;;;-1:-1:-1;;457:3004:18;;;9180:256:2;;10041:87;-1:-1:-1;;;10084:33:2;;457:3004:18;;;;;10084:33:2;;1804:188:18;;;;;:::i;:::-;457:3004;;1804:188;;;;;457:3004;;;;;;-1:-1:-1;;;457:3004:18;;;;;;;;;;;;-1:-1:-1;;;457:3004:18;;;;;;;;-1:-1:-1;;;457:3004:18;;;;;;;;;;;;;;;-1:-1:-1;;457:3004:18;;;;;2273:22:2;457:3004:18;;2273:22:2;:::i;:::-;457:3004:18;;-1:-1:-1;;;;;457:3004:18;;;;;;;;;;;;;-1:-1:-1;;457:3004:18;;;;;;:::i;:::-;1500:62:0;;:::i;:::-;946:67:18;457:3004;;-1:-1:-1;;;;;;457:3004:18;-1:-1:-1;;;;;457:3004:18;;;;;;;;;;;;;;;;;;;-1:-1:-1;;457:3004:18;;;;;;;;-1:-1:-1;;;;;457:3004:18;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;457:3004:18;;;;;;;;;;;:::i;:::-;3102:12;457:3004;;;;-1:-1:-1;;457:3004:18;;;;;;;3091:25;;457:3004;;2273:22:2;;;:::i;:::-;3197:10:18;-1:-1:-1;;;;;457:3004:18;;;3177:30;457:3004;;3259:23;457:3004;;;-1:-1:-1;;;;;457:3004:18;;;;3259:188;;;;;457:3004;;3259:188;457:3004;;;;;;;;;;;;;;3259:188;;457:3004;;;;;;;;;3355:14;3259:188;457:3004;3259:188;;;:::i;:::-;457:3004;;;;;;-1:-1:-1;;;457:3004:18;;;;;;;;;;;;;;;;;-1:-1:-1;;;457:3004:18;;;;;;;;;;-1:-1:-1;;;457:3004:18;;;;;;;;;;;;;;;;;-1:-1:-1;;;457:3004:18;;;;;;;;-1:-1:-1;;;457:3004:18;;;;;;;;;;;;;5205:4:2;457:3004:18;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;5120:7:2;;;;;:::i;457:3004:18:-;;;;;;;-1:-1:-1;;457:3004:18;;;;;;;;-1:-1:-1;;;;;457:3004:18;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1500:62:0;;;:::i;:::-;2542:12:18;457:3004;-1:-1:-1;;457:3004:18;;;;;;;2531:25;2523:75;2531:25;;;;;2523:75;:::i;:::-;2609:78;2273:22:2;;;:::i;2609:78:18:-;2698:66;457:3004;;2706:27;;2698:66;:::i;:::-;2777:23;457:3004;-1:-1:-1;;;;;457:3004:18;;2777:59;;;;;457:3004;;;;;;;;;;;;;;;;2777:59;;457:3004;2777:59;;457:3004;;;;;;;;;;;:::i;:::-;2777:59;;;;;;;;;;457:3004;;2777:59;;;;:::i;:::-;;;457:3004;;2777:59;457:3004;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;1361:12;457:3004;-1:-1:-1;;457:3004:18;;;;;;;;;;;;;;;;;-1:-1:-1;;;457:3004:18;;;;;;;;;;;;;;;-1:-1:-1;;457:3004:18;;;;;;:::i;:::-;;;15017:22:2;;;:::i;:::-;735:10:8;15167:18:2;;:35;;;457:3004:18;15167:69:2;;;457:3004:18;15163:142:2;;457:3004:18;;-1:-1:-1;;;;;457:3004:18;;;;;15357:28:2;;;;457:3004:18;;15420:15:2;457:3004:18;;;;;;;-1:-1:-1;;;;;;457:3004:18;-1:-1:-1;;;;;457:3004:18;;;;;;;;;;;15163:142:2;-1:-1:-1;;;15263:27:2;;735:10:8;457:3004:18;;;15263:27:2;;15167:69;-1:-1:-1;;;;;;457:3004:18;;;;4038:18:2;457:3004:18;;;;;;;;735:10:8;457:3004:18;;;;;;;;;;15206:30:2;15167:69;;:35;-1:-1:-1;;;;;;457:3004:18;;735:10:8;15189:13:2;;15167:35;;457:3004:18;;;;;;;-1:-1:-1;;457:3004:18;;;;;;;;3582:22:2;;;:::i;:::-;;457:3004:18;;6059:15:2;457:3004:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2441:5:2;457:3004:18;;;2441:5:2;457:3004:18;;2441:5:2;457:3004:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2441:5:2;457:3004:18;;;;;-1:-1:-1;457:3004:18;;;;;;;-1:-1:-1;457:3004:18;;-1:-1:-1;457:3004:18;;;;;;;;;;;2441:5:2;457:3004:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;557:46;457:3004;;;-1:-1:-1;;;;;457:3004:18;;;;;;;;;;;;;;;;-1:-1:-1;;457:3004:18;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;1697:40:2;;;:104;;;;457:3004:18;1697:156:2;;;;457:3004:18;;;;;;;1697:156:2;-1:-1:-1;;;862:40:12;;-1:-1:-1;1697:156:2;;;:104;-1:-1:-1;;;1753:48:2;;;-1:-1:-1;1697:104:2;;457:3004:18;;;;;;;;-1:-1:-1;;457:3004:18;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;457:3004:18;;;;:::o;:::-;;;;-1:-1:-1;;;;;457:3004:18;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;;;;457:3004:18;;;;;;:::o;:::-;;;;;;;;;;;-1:-1:-1;;;;;457:3004:18;;;;;;;;;-1:-1:-1;;;;;457:3004:18;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;457:3004:18;;;;;;;:::o;:::-;;;;-1:-1:-1;457:3004:18;;;;;-1:-1:-1;457:3004:18;;-1:-1:-1;;;;;457:3004:18;;;;;;-1:-1:-1;;457:3004:18;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;457:3004:18;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;457:3004:18;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;457:3004:18;;;;;;;;;;;;;;;:::o;4142:578:2:-;-1:-1:-1;;;;;457:3004:18;;;;4142:578:2;4236:16;;4232:87;;4250:1;457:3004:18;;;5824:7:2;457:3004:18;;;;;;-1:-1:-1;;;;;457:3004:18;;4561:34:2;;457:3004:18;;735:10:8;9058:18:2;;;9054:86;;4142:578;9184:18;9600:27;9184:18;;9180:256;;4142:578;457:3004:18;;;9510:9:2;457:3004:18;;;;;;;;;;9450:16:2;457:3004:18;;;;;;5824:7:2;457:3004:18;;;;;;;-1:-1:-1;;;;;;457:3004:18;;;;;;9600:27:2;-1:-1:-1;;;;;457:3004:18;4609:21:2;;;4605:109;;4142:578;;;:::o;4605:109::-;4653:50;;;4250:1;4653:50;9510:9;457:3004:18;;;;;;4250:1:2;4653:50;9180:256;457:3004:18;;;;15420:15:2;457:3004:18;;;;;;;-1:-1:-1;;;;;;457:3004:18;;;;;;9391:9:2;457:3004:18;;;;;;;-1:-1:-1;;457:3004:18;;;9180:256:2;;9054:86;6539:127;;;;;;;;9054:86;7216:39;7212:255;;9054:86;;;;;;;7212:255;7275:19;;;457:3004:18;;;7321:31:2;;;;;;;457:3004:18;7321:31:2;7271:186;457:3004:18;7398:44:2;;;;;;735:10:8;7398:44:2;457:3004:18;;;7398:44:2;6539:127;735:10:8;;6577:16:2;;:52;;;;6539:127;6577:88;6539:127;6577:88;-1:-1:-1;457:3004:18;;;6059:15:2;457:3004:18;;;;;;-1:-1:-1;;;;;457:3004:18;735:10:8;6633:32:2;6539:127;;6577:52;-1:-1:-1;457:3004:18;;;4038:18:2;457:3004:18;;;;;;;;735:10:8;457:3004:18;;;;;;;;;;6577:52:2;;4232:87;10084:33;;;4250:1;4275:33;4250:1;4275:33;457:3004:18;;4250:1:2;4275:33;457:3004:18;;;;:::o;:::-;;;-1:-1:-1;;;457:3004:18;;;;;;;;;;;;;;;;;-1:-1:-1;;;457:3004:18;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;457:3004:18;;;;;;;;;;;;;;;;;-1:-1:-1;;;457:3004:18;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;457:3004:18;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;457:3004:18;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;457:3004:18;;;;:::o;16212:241:2:-;-1:-1:-1;457:3004:18;;;5824:7:2;457:3004:18;;;;;;-1:-1:-1;;;;;457:3004:18;;16341:19:2;;16337:88;;16434:12;16212:241;:::o;16337:88::-;7321:31;;;-1:-1:-1;16383:31:2;;457:3004:18;;-1:-1:-1;16383:31:2;1796:162:0;1710:6;457:3004:18;-1:-1:-1;;;;;457:3004:18;735:10:8;1855:23:0;1851:101;;1796:162::o;1851:101::-;1901:40;;;-1:-1:-1;1901:40:0;735:10:8;1901:40:0;457:3004:18;;-1:-1:-1;1901:40:0;993:924:6;1173:14;;1169:742;;993:924;;;;;;:::o;1169:742::-;457:3004:18;;-1:-1:-1;;;1211:67:6;;-1:-1:-1;;;;;457:3004:18;;;1211:67:6;;;457:3004:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1211:67:6;;1190:1;1211:67;;;;;1190:1;1211:67;;;1169:742;-1:-1:-1;1207:694:6;;;-1:-1:-1;457:3004:18;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;1190:1:6;457:3004:18;;;;;;;;1568:18:6;;;10084:33:2;;;;1190:1:6;1672:39;1211:67;457:3004:18;;1190:1:6;1672:39;1564:323;457:3004:18;1758:111:6;;457:3004:18;;;;1207:694:6;-1:-1:-1;;;;;;457:3004:18;-1:-1:-1;;;1325:51:6;1321:182;;1207:694;1169:742;;;;;;;1321:182;10084:33:2;;;1190:1:6;1445:39;1211:67;457:3004:18;;1190:1:6;1445:39;1211:67;457:3004:18;1211:67:6;;457:3004:18;1211:67:6;;;;;;457:3004:18;1211:67:6;;;:::i;:::-;;;457:3004:18;;;;;;-1:-1:-1;;;;;;457:3004:18;;;;;;1211:67:6;;;;;;;-1:-1:-1;1211:67:6;"},"methodIdentifiers":{"MAX_TOKENS()":"f47c84c5","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","contractSkybudsMetadata()":"03753cf6","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","mint(uint256[],uint256,uint256,uint256,string)":"64fd8894","name()":"06fdde03","owner()":"8da5cb5b","ownerOf(uint256)":"6352211e","renounceOwnership()":"715018a6","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","setMetadataContractAddress(address)":"4d74d3b4","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","totalSupply()":"18160ddd","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b","updateBase64Uri(uint256,string)":"32d236a6","updateMetadata(uint256,uint256[],uint256,uint256,uint256,string)":"46119f8e","updateWearables(uint256,uint256[])":"6ae83f79"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addressContractMetadata\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MAX_TOKENS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractSkybudsMetadata\",\"outputs\":[{\"internalType\":\"contract SkyBudsMetadata\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"wearables\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"laziness\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"speed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"isTalkative\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"base64uri\",\"type\":\"string\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addressContractMetadata\",\"type\":\"address\"}],\"name\":\"setMetadataContractAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"base64Uri\",\"type\":\"string\"}],\"name\":\"updateBase64Uri\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"wearables\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"laziness\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"speed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"isTalkative\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"base64uri\",\"type\":\"string\"}],\"name\":\"updateMetadata\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"wearableIds\",\"type\":\"uint256[]\"}],\"name\":\"updateWearables\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SkyBuds.sol\":\"SkyBuds\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x39ed367e54765186281efcfe83e47cf0ad62cc879f10e191360712507125f29a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c5ae6d85bd48cca8d6d2fcec8c63efd86f56f8a5832577a47e403ce0e65cb09\",\"dweb:/ipfs/QmUtcS8AbRSWhuc61puYet58os8FvSqm329ChoW8wwZXZk\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34\",\"dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0xddab643169f47a2c5291afafcbfdca045d9e6835553307d090bc048b6dabd0ac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d0ffbacfee42977167b3c75bd4787f8b72a7ab1176abd544f3dff662c6528e24\",\"dweb:/ipfs/QmUprM1cWCyaQ3LDjHA2DhwiPs3wekQ6MWXHFZdMMxpcyX\"]},\"@openzeppelin/contracts/utils/Base64.sol\":{\"keccak256\":\"0xbee2b819e1b4bf569ffc1b1b9d560b4abd6a589575f3093edaab9244de18a0c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e478c0e9bbf3eb8cd3b7784f9b397603e34747f9ffd16571ed1d89ce102de389\",\"dweb:/ipfs/QmZ6zXpwy5xRxx9RkodJmDZSUTeEqPQUanAC5TUoYqW2VR\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x81c274a60a7ae232ae3dc9ff3a4011b4849a853c13b0832cd3351bb1bb2f0dae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9da0c20dc74358a2a76330818f3bac9d1e2ce3371aec847b9cbf5d147fbae4f6\",\"dweb:/ipfs/QmeczhmnFv1hbXKGLwbYXY6Rrytc9a5A2YaRi5QMMgjPnb\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/MetadataEncoding.sol\":{\"keccak256\":\"0xa6baf29250bb24de07fe0f5572e5645846250387991ac328772b51d868782221\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0558dfb3dcf8177ffcbb3678ce5309fd0720329ef3c45fa06f598d9ca70fdac2\",\"dweb:/ipfs/QmbixhhuBx34UWVTvkCDADxJhQfhBx99mrNzXv65h573pm\"]},\"contracts/SkyBuds.sol\":{\"keccak256\":\"0xf6dc5ddc8e8da3e5784a1ba8b22cd676303ff082835bd38605559b15c70d439a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1487a1a7a0d9f5c23ecce60d0c69faef1b750c81b864b9f6ea2502a7df52aa58\",\"dweb:/ipfs/QmZ6cd849N5gM8nmegrMoKHR9qkFfQixBSds22CoLBvWGC\"]},\"contracts/SkybudsMetadata.sol\":{\"keccak256\":\"0xc94c478d1df5a7d3e7ea393dbb7b7e4e6679fe1da2868a91e21eb6055389743a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7e66cfe304de57498fe05d2e7673ea527aff2a3f38d59d4944f4f1a098c81ab\",\"dweb:/ipfs/QmVCuPBxUwUvNLYxnKb2dwgCNfxi3WgPSUGsFGskYKU5nV\"]}},\"version\":1}"}},"contracts/SkybudsMetadata.sol":{"SkyBudsMetadata":{"abi":[{"inputs":[{"internalType":"address","name":"skyBudContract","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"encodedMetadata","type":"uint256"},{"indexed":false,"internalType":"string","name":"base64Uri","type":"string"}],"name":"MetadataUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[{"internalType":"uint256","name":"metadata","type":"uint256"}],"name":"_getLaziness","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint256","name":"metadata","type":"uint256"}],"name":"_getSpeed","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"deleteTokenMetadata","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"generateTokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getBase64Uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getEncodedMetadata","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getLaziness","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getLazinessFormatted","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getMetadata","outputs":[{"internalType":"uint256","name":"encodedMetadata","type":"uint256"},{"internalType":"string","name":"base64Uri","type":"string"},{"internalType":"uint256[]","name":"wearableIds","type":"uint256[]"},{"internalType":"bool","name":"isTalkative","type":"bool"},{"internalType":"uint256","name":"speed","type":"uint256"},{"internalType":"uint256","name":"laziness","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getSpeed","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getSpeedFormatted","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"metadata","type":"uint256"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getWearableAt","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"wearableId","type":"uint256"}],"name":"hasWearable","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"isTalkative","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256[]","name":"wearableIds","type":"uint256[]"},{"internalType":"bool","name":"isTalkative","type":"bool"},{"internalType":"uint256","name":"speed","type":"uint256"},{"internalType":"uint256","name":"laziness","type":"uint256"},{"internalType":"string","name":"base64Uri","type":"string"}],"name":"setMetadata","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenDataExists","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"string","name":"base64Uri","type":"string"}],"name":"updateBase64Uri","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256[]","name":"wearableIds","type":"uint256[]"}],"name":"updateWearables","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60803460bc57601f61162838819003918201601f19168301916001600160401b0383118484101760c15780849260209460405283398101031260bc57516001600160a01b0381169081900360bc57801560a657600080546001600160a01b031981168317825560405192916001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a361155090816100d88239f35b631e4fbdf760e01b600052600060045260246000fd5b600080fd5b634e487b7160e01b600052604160045260246000fdfe6080604052600436101561001257600080fd5b60003560e01c806309c88b2414610e2b5780630a02c9ac14610da05780631b21e52c14610d8a578063210fa96b146109d757806332d236a61461084a5780634b93f7531461082c57806354e35a42146107db5780636ae83f7914610735578063715018a6146106dc578063722f7412146106b8578063775861261461048b5780638b6f1ae6146104165780638da5cb5b146103ed5780639f7c43cd146103ca578063a574cea4146102f3578063cf544bfc146102cd578063d938eb2314610299578063db5c339b146101f7578063ee0dbd66146101de578063f2fde38b146101515763ff4102061461010357600080fd5b3461014c57602036600319011261014c5760043580600052600160205261013460ff60026040600020015416610f8d565b60005260016020526020604060002054604051908152f35b600080fd5b3461014c57602036600319011261014c576004356001600160a01b0381169081900361014c5761017f6114d1565b80156101c857600080546001600160a01b03198116831782556001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a3005b631e4fbdf760e01b600052600060045260246000fd5b3461014c57602036600319011261014c576004356111a2565b3461014c57602036600319011261014c5760043580600052600160205261022860ff60026040600020015416610f8d565b60005260016020526000600260408220828155600181016102498154611046565b9081610256575b50500155005b81601f86931160011461026d5750555b8380610250565b8183526020832061028991601f0160051c810190600101611080565b8082528160208120915555610266565b3461014c57602036600319011261014c576004356000526001602052602060ff600260406000200154166040519015158152f35b3461014c57602036600319011261014c5760206102eb600435611168565b604051908152f35b3461014c57602036600319011261014c5760043580600052600160205261032460ff60026040600020015416610f8d565b60005260016020526001604060002061035081549161034960405180958193016110e5565b0383610ea2565b61037861035c826112c2565b929390919560405195865260c0602087015260c0860190610e67565b9484860360408601526020808551978881520194016000965b8088106103b257505084955015156060850152608084015260a08301520390f35b90946020806001928851815201960197019690610391565b3461014c57602036600319011261014c576020604051607f60043560651c168152f35b3461014c57600036600319011261014c576000546040516001600160a01b039091168152602090f35b3461014c57602036600319011261014c5760043580600052600160205261044760ff60026040600020015416610f8d565b600052600160205261048761046c6104736001604060002001604051928380926110e5565b0382610ea2565b604051918291602083526020830190610e67565b0390f35b3461014c5760c036600319011261014c576004356024356001600160401b03811161014c576104be903690600401610f25565b90604435801515810361014c5760a435906001600160401b03821161014c576104ee610504923690600401610ede565b936104f76114d1565b6084359160643591611339565b9160405192606084018481106001600160401b038211176106a25760405280845260208401938285526040810190600182528460005260016020526040600020905181556001810195519586516001600160401b0381116106a2576105698254611046565b601f8111610665575b506020601f82116001146105eb578160029493926105b8926000805160206114fb8339815191529a9b6000926105e0575b50508160011b916000199060031b1c19161790565b90555b019051151560ff801983541691161790556105db60405192839283611097565b0390a2005b015190508b806105a3565b601f1982169883600052816000209960005b81811061064d575099600192849260029796956000805160206114fb8339815191529c9d10610634575b505050811b0190556105bb565b015160001960f88460031b161c191690558a8080610627565b838301518c556001909b019a602093840193016105fd565b61069290836000526020600020601f840160051c81019160208510610698575b601f0160051c0190611080565b88610572565b9091508190610685565b634e487b7160e01b600052604160045260246000fd5b3461014c57602036600319011261014c576020600435606c1c607f60405191168152f35b3461014c57600036600319011261014c576106f56114d1565b600080546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b3461014c57604036600319011261014c576004356024356001600160401b03811161014c576107776000805160206114fb833981519152913690600401610f25565b82600052600160205261079460ff60026040600020015416610f8d565b8260005260016020526107b96040600020916107b083546112c2565b93909250611339565b8082556105db60405192839283526040602084015260016040840191016110e5565b3461014c57602036600319011261014c5760043580600052600160205261080c60ff60026040600020015416610f8d565b600052600160205260206040600020546001806040519260641c16148152f35b3461014c57602036600319011261014c5760206102eb6004356110b1565b3461014c57604036600319011261014c576004356024356001600160401b03811161014c5761087d903690600401610ede565b9080600052600160205261089b60ff60026040600020015416610f8d565b80600052600160205260406000209160018301928151936001600160401b0385116106a2576108ca8154611046565b601f81116109a5575b506020601f861160011461093157856000805160206114fb833981519152959661091392600091610926575b508160011b916000199060031b1c19161790565b90555b546105db60405192839283611097565b9050850151886108ff565b601f1986169082600052806000209160005b81811061098d57509187916000805160206114fb833981519152979860019410610974575b5050811b019055610916565b86015160001960f88460031b161c191690558780610968565b9192602060018192868a015181550194019201610943565b6109d190826000526020600020601f880160051c8101916020891061069857601f0160051c0190611080565b856108d3565b3461014c57602036600319011261014c57600435806000526001602052610a0860ff60026040600020015416610f8d565b80600052600160205260406000208054806000526001602052610a3560ff60026040600020015416610f8d565b600052600160205260406000205491610a4d816110b1565b906001610a62610a5c83611168565b926111c9565b93019360018060009260641c1614600014610d645750604051610a86604082610ea2565b60048152637472756560e01b60208201525b604c604051947f646174613a6170706c69636174696f6e2f6a736f6e3b757466382c7b226e616d60208701526b65223a22536b79627564202360a01b6040870152805190610b456020820192610af181868b0186610e44565b88019161088b60f21b858401527f226465736372697074696f6e223a226d79206c6974746c652064756465222c00604e8401526a113a37b5b2b724b2111d1160a91b606d8401525180936078840190610e44565b010161088b60f21b602c8201527f22696d616765223a22646174613a696d6167652f7376672b786d6c3b62617365602e820152620d8d0b60ea1b604e820152600095805490610b9382611046565b9160018116908115610d3c5750600114610cfc575b506104878661047360866068838a8a8a8f61088b60f21b81527f2265787465726e616c5f75726c223a2268747470733a2f2f736b79627564732e60028201527218995b9a9e5b185c98da195c8b98dbdb4bc88b606a1b60228201526d2261747472696275746573223a5b60901b60358201527f7b2274726169745f74797065223a2269735f74616c6b6174697665222c227661604382015264363ab2911d60d91b6063820152610c618251809360208985019101610e44565b0191611f4b60f21b858401527f7b2274726169745f74797065223a227370656564222c2276616c7565223a0000606a8401526088830152611f4b60f21b60a88301527f7b2274726169745f74797065223a226c617a696e657373222c2276616c75652260aa830152601d60f91b60ca83015260cb820152607d60f81b60eb820152615d7d60f01b60ec82015203016066810184520182610ea2565b9091965060005260206000206000905b828210610d255750509094016051019383836086610ba8565b805482890160510152602090910190600101610d0c565b60ff191660518086019190915283151590930290930190910196508591508490506086610ba8565b50604051610d73604082610ea2565b600581526466616c736560d81b6020820152610a98565b3461014c57610d9836610e8c565b90600061101c565b3461014c57610dae36610e8c565b600a811015610df157600a810290808204600a1490151715610ddb576020916103ff90604051921c168152f35b634e487b7160e01b600052601160045260246000fd5b60405162461bcd60e51b8152602060048201526012602482015271496e646578206f7574206f662072616e676560701b6044820152606490fd5b3461014c57602036600319011261014c57600435610fe5565b60005b838110610e575750506000910152565b8181015183820152602001610e47565b90602091610e8081518092818552858086019101610e44565b601f01601f1916010190565b604090600319011261014c576004359060243590565b90601f801991011681019081106001600160401b038211176106a257604052565b6001600160401b0381116106a257601f01601f191660200190565b81601f8201121561014c57803590610ef582610ec3565b92610f036040519485610ea2565b8284526020838301011161014c57816000926020809301838601378301015290565b9080601f8301121561014c578135916001600160401b0383116106a2578260051b906020820193610f596040519586610ea2565b845260208085019282010192831161014c57602001905b828210610f7d5750505090565b8135815260209182019101610f70565b15610f9457565b60405162461bcd60e51b8152602060048201526024808201527f536b794275644d657461646174613a20546f6b656e20646f6573206e6f7420656044820152631e1a5cdd60e21b6064820152608490fd5b6110169080600052600160205261100660ff60026040600020015416610f8d565b6000526001602052604060002090565b54610fe5565b5061103e9080600052600160205261100660ff60026040600020015416610f8d565b54600061101c565b90600182811c92168015611076575b602083101461106057565b634e487b7160e01b600052602260045260246000fd5b91607f1691611055565b81811061108b575050565b60008155600101611080565b6040906110ae939281528160208201520190610e67565b90565b8060005260016020526110ce60ff60026040600020015416610f8d565b6000526001602052607f60406000205460651c1690565b600092918154916110f583611046565b808352926001811690811561114b575060011461111157505050565b60009081526020812093945091925b838310611131575060209250010190565b600181602092949394548385870101520191019190611120565b915050602093945060ff929192191683830152151560051b010190565b80600052600160205261118560ff60026040600020015416610f8d565b6000526001602052607f60406000205461119d606c90565b1c1690565b6111c39080600052600160205261100660ff60026040600020015416610f8d565b546111a2565b801561128e57600081805b61127657506111e281610ec3565b906111f06040519283610ea2565b808252601f196111ff82610ec3565b013660208401375b8092801561126f576000198201918211610ddb57819360ff600a8306166030019260ff8411610ddb578451111561125957600a9260f81b6001600160f81b03191660001a908401601f01530491611207565b634e487b7160e01b600052603260045260246000fd5b5050905090565b906000198114610ddb576001600a91019104806111d4565b5060405161129d604082610ea2565b60018152600360fc1b602082015290565b80518210156112595760209160051b010190565b60405191906101606112d48185610ea2565b600a8452601f19013660208501378260005b600a811061130b5750506001808260641c161491607f808360651c169261119d606c90565b600a810290808204600a1481151715610ddb57600191846103ff911c1661133282856112ae565b52016112e6565b929193600a8451116114975760005b84518110156113ac576103e861135e82876112ae565b511161136c57600101611348565b60405162461bcd60e51b81526020600482015260186024820152775765617261626c65204944206f7574206f662072616e676560401b6044820152606490fd5b50909291936064811161145d576064851161142057600094855b84518710156113fb576113d987866112ae565b5190600a880291888304600a1489151715610ddb576001921b179601956113c6565b935091945092611412575b606c1b9160651b171790565b600160641b90911790611406565b60405162461bcd60e51b81526020600482015260156024820152744c617a696e657373206f7574206f662072616e676560581b6044820152606490fd5b60405162461bcd60e51b81526020600482015260126024820152715370656564206f7574206f662072616e676560701b6044820152606490fd5b60405162461bcd60e51b8152602060048201526012602482015271546f6f206d616e79207765617261626c657360701b6044820152606490fd5b6000546001600160a01b031633036114e557565b63118cdaa760e01b6000523360045260246000fdfe8a9307e5e4fabae00de1b406aebeef87de6d231e52fe8251c01ff274b8f79bbca2646970667358221220a402a8c0272694051aa4542c3a140d945f18aeaf80e9886906dd883fbe6a781164736f6c634300081c0033","opcodes":"PUSH1 0x80 CALLVALUE PUSH1 0xBC JUMPI PUSH1 0x1F PUSH2 0x1628 CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH1 0xC1 JUMPI DUP1 DUP5 SWAP3 PUSH1 0x20 SWAP5 PUSH1 0x40 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH1 0xBC JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH1 0xBC JUMPI DUP1 ISZERO PUSH1 0xA6 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP1 LOG3 PUSH2 0x1550 SWAP1 DUP2 PUSH2 0xD8 DUP3 CODECOPY RETURN JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9C88B24 EQ PUSH2 0xE2B JUMPI DUP1 PUSH4 0xA02C9AC EQ PUSH2 0xDA0 JUMPI DUP1 PUSH4 0x1B21E52C EQ PUSH2 0xD8A JUMPI DUP1 PUSH4 0x210FA96B EQ PUSH2 0x9D7 JUMPI DUP1 PUSH4 0x32D236A6 EQ PUSH2 0x84A JUMPI DUP1 PUSH4 0x4B93F753 EQ PUSH2 0x82C JUMPI DUP1 PUSH4 0x54E35A42 EQ PUSH2 0x7DB JUMPI DUP1 PUSH4 0x6AE83F79 EQ PUSH2 0x735 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x6DC JUMPI DUP1 PUSH4 0x722F7412 EQ PUSH2 0x6B8 JUMPI DUP1 PUSH4 0x77586126 EQ PUSH2 0x48B JUMPI DUP1 PUSH4 0x8B6F1AE6 EQ PUSH2 0x416 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3ED JUMPI DUP1 PUSH4 0x9F7C43CD EQ PUSH2 0x3CA JUMPI DUP1 PUSH4 0xA574CEA4 EQ PUSH2 0x2F3 JUMPI DUP1 PUSH4 0xCF544BFC EQ PUSH2 0x2CD JUMPI DUP1 PUSH4 0xD938EB23 EQ PUSH2 0x299 JUMPI DUP1 PUSH4 0xDB5C339B EQ PUSH2 0x1F7 JUMPI DUP1 PUSH4 0xEE0DBD66 EQ PUSH2 0x1DE JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x151 JUMPI PUSH4 0xFF410206 EQ PUSH2 0x103 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x14C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x14C JUMPI PUSH1 0x4 CALLDATALOAD DUP1 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH2 0x134 PUSH1 0xFF PUSH1 0x2 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND PUSH2 0xF8D JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x14C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x14C JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x14C JUMPI PUSH2 0x17F PUSH2 0x14D1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1C8 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR DUP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP1 LOG3 STOP JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x14C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x14C JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x11A2 JUMP JUMPDEST CALLVALUE PUSH2 0x14C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x14C JUMPI PUSH1 0x4 CALLDATALOAD DUP1 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH2 0x228 PUSH1 0xFF PUSH1 0x2 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND PUSH2 0xF8D JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 PUSH1 0x2 PUSH1 0x40 DUP3 KECCAK256 DUP3 DUP2 SSTORE PUSH1 0x1 DUP2 ADD PUSH2 0x249 DUP2 SLOAD PUSH2 0x1046 JUMP JUMPDEST SWAP1 DUP2 PUSH2 0x256 JUMPI JUMPDEST POP POP ADD SSTORE STOP JUMPDEST DUP2 PUSH1 0x1F DUP7 SWAP4 GT PUSH1 0x1 EQ PUSH2 0x26D JUMPI POP SSTORE JUMPDEST DUP4 DUP1 PUSH2 0x250 JUMP JUMPDEST DUP2 DUP4 MSTORE PUSH1 0x20 DUP4 KECCAK256 PUSH2 0x289 SWAP2 PUSH1 0x1F ADD PUSH1 0x5 SHR DUP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1080 JUMP JUMPDEST DUP1 DUP3 MSTORE DUP2 PUSH1 0x20 DUP2 KECCAK256 SWAP2 SSTORE SSTORE PUSH2 0x266 JUMP JUMPDEST CALLVALUE PUSH2 0x14C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x14C JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x2 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x14C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x14C JUMPI PUSH1 0x20 PUSH2 0x2EB PUSH1 0x4 CALLDATALOAD PUSH2 0x1168 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x14C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x14C JUMPI PUSH1 0x4 CALLDATALOAD DUP1 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH2 0x324 PUSH1 0xFF PUSH1 0x2 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND PUSH2 0xF8D JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x350 DUP2 SLOAD SWAP2 PUSH2 0x349 PUSH1 0x40 MLOAD DUP1 SWAP6 DUP2 SWAP4 ADD PUSH2 0x10E5 JUMP JUMPDEST SUB DUP4 PUSH2 0xEA2 JUMP JUMPDEST PUSH2 0x378 PUSH2 0x35C DUP3 PUSH2 0x12C2 JUMP JUMPDEST SWAP3 SWAP4 SWAP1 SWAP2 SWAP6 PUSH1 0x40 MLOAD SWAP6 DUP7 MSTORE PUSH1 0xC0 PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0xC0 DUP7 ADD SWAP1 PUSH2 0xE67 JUMP JUMPDEST SWAP5 DUP5 DUP7 SUB PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x20 DUP1 DUP6 MLOAD SWAP8 DUP9 DUP2 MSTORE ADD SWAP5 ADD PUSH1 0x0 SWAP7 JUMPDEST DUP1 DUP9 LT PUSH2 0x3B2 JUMPI POP POP DUP5 SWAP6 POP ISZERO ISZERO PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST SWAP1 SWAP5 PUSH1 0x20 DUP1 PUSH1 0x1 SWAP3 DUP9 MLOAD DUP2 MSTORE ADD SWAP7 ADD SWAP8 ADD SWAP7 SWAP1 PUSH2 0x391 JUMP JUMPDEST CALLVALUE PUSH2 0x14C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x14C JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x7F PUSH1 0x4 CALLDATALOAD PUSH1 0x65 SHR AND DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x14C JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x14C JUMPI PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x14C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x14C JUMPI PUSH1 0x4 CALLDATALOAD DUP1 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH2 0x447 PUSH1 0xFF PUSH1 0x2 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND PUSH2 0xF8D JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH2 0x487 PUSH2 0x46C PUSH2 0x473 PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH2 0x10E5 JUMP JUMPDEST SUB DUP3 PUSH2 0xEA2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0xE67 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x14C JUMPI PUSH1 0xC0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x14C JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x14C JUMPI PUSH2 0x4BE SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xF25 JUMP JUMPDEST SWAP1 PUSH1 0x44 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x14C JUMPI PUSH1 0xA4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x14C JUMPI PUSH2 0x4EE PUSH2 0x504 SWAP3 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xEDE JUMP JUMPDEST SWAP4 PUSH2 0x4F7 PUSH2 0x14D1 JUMP JUMPDEST PUSH1 0x84 CALLDATALOAD SWAP2 PUSH1 0x64 CALLDATALOAD SWAP2 PUSH2 0x1339 JUMP JUMPDEST SWAP2 PUSH1 0x40 MLOAD SWAP3 PUSH1 0x60 DUP5 ADD DUP5 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x6A2 JUMPI PUSH1 0x40 MSTORE DUP1 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 DUP3 DUP6 MSTORE PUSH1 0x40 DUP2 ADD SWAP1 PUSH1 0x1 DUP3 MSTORE DUP5 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 MLOAD DUP2 SSTORE PUSH1 0x1 DUP2 ADD SWAP6 MLOAD SWAP6 DUP7 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x6A2 JUMPI PUSH2 0x569 DUP3 SLOAD PUSH2 0x1046 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x665 JUMPI JUMPDEST POP PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x5EB JUMPI DUP2 PUSH1 0x2 SWAP5 SWAP4 SWAP3 PUSH2 0x5B8 SWAP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x14FB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP11 SWAP12 PUSH1 0x0 SWAP3 PUSH2 0x5E0 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 JUMP JUMPDEST SWAP1 SSTORE JUMPDEST ADD SWAP1 MLOAD ISZERO ISZERO PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 AND OR SWAP1 SSTORE PUSH2 0x5DB PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 DUP4 PUSH2 0x1097 JUMP JUMPDEST SUB SWAP1 LOG2 STOP JUMPDEST ADD MLOAD SWAP1 POP DUP12 DUP1 PUSH2 0x5A3 JUMP JUMPDEST PUSH1 0x1F NOT DUP3 AND SWAP9 DUP4 PUSH1 0x0 MSTORE DUP2 PUSH1 0x0 KECCAK256 SWAP10 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x64D JUMPI POP SWAP10 PUSH1 0x1 SWAP3 DUP5 SWAP3 PUSH1 0x2 SWAP8 SWAP7 SWAP6 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x14FB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP13 SWAP14 LT PUSH2 0x634 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x5BB JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP11 DUP1 DUP1 PUSH2 0x627 JUMP JUMPDEST DUP4 DUP4 ADD MLOAD DUP13 SSTORE PUSH1 0x1 SWAP1 SWAP12 ADD SWAP11 PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 ADD PUSH2 0x5FD JUMP JUMPDEST PUSH2 0x692 SWAP1 DUP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP6 LT PUSH2 0x698 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x1080 JUMP JUMPDEST DUP9 PUSH2 0x572 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x685 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x14C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x14C JUMPI PUSH1 0x20 PUSH1 0x4 CALLDATALOAD PUSH1 0x6C SHR PUSH1 0x7F PUSH1 0x40 MLOAD SWAP2 AND DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x14C JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x14C JUMPI PUSH2 0x6F5 PUSH2 0x14D1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x14C JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x14C JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x14C JUMPI PUSH2 0x777 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x14FB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xF25 JUMP JUMPDEST DUP3 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH2 0x794 PUSH1 0xFF PUSH1 0x2 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND PUSH2 0xF8D JUMP JUMPDEST DUP3 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH2 0x7B9 PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 PUSH2 0x7B0 DUP4 SLOAD PUSH2 0x12C2 JUMP JUMPDEST SWAP4 SWAP1 SWAP3 POP PUSH2 0x1339 JUMP JUMPDEST DUP1 DUP3 SSTORE PUSH2 0x5DB PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 DUP4 MSTORE PUSH1 0x40 PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x40 DUP5 ADD SWAP2 ADD PUSH2 0x10E5 JUMP JUMPDEST CALLVALUE PUSH2 0x14C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x14C JUMPI PUSH1 0x4 CALLDATALOAD DUP1 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH2 0x80C PUSH1 0xFF PUSH1 0x2 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND PUSH2 0xF8D JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x1 DUP1 PUSH1 0x40 MLOAD SWAP3 PUSH1 0x64 SHR AND EQ DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x14C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x14C JUMPI PUSH1 0x20 PUSH2 0x2EB PUSH1 0x4 CALLDATALOAD PUSH2 0x10B1 JUMP JUMPDEST CALLVALUE PUSH2 0x14C JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x14C JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x14C JUMPI PUSH2 0x87D SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xEDE JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH2 0x89B PUSH1 0xFF PUSH1 0x2 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND PUSH2 0xF8D JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x1 DUP4 ADD SWAP3 DUP2 MLOAD SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP6 GT PUSH2 0x6A2 JUMPI PUSH2 0x8CA DUP2 SLOAD PUSH2 0x1046 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x9A5 JUMPI JUMPDEST POP PUSH1 0x20 PUSH1 0x1F DUP7 GT PUSH1 0x1 EQ PUSH2 0x931 JUMPI DUP6 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x14FB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP6 SWAP7 PUSH2 0x913 SWAP3 PUSH1 0x0 SWAP2 PUSH2 0x926 JUMPI JUMPDEST POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 JUMP JUMPDEST SWAP1 SSTORE JUMPDEST SLOAD PUSH2 0x5DB PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 DUP4 PUSH2 0x1097 JUMP JUMPDEST SWAP1 POP DUP6 ADD MLOAD DUP9 PUSH2 0x8FF JUMP JUMPDEST PUSH1 0x1F NOT DUP7 AND SWAP1 DUP3 PUSH1 0x0 MSTORE DUP1 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x98D JUMPI POP SWAP2 DUP8 SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x14FB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP8 SWAP9 PUSH1 0x1 SWAP5 LT PUSH2 0x974 JUMPI JUMPDEST POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x916 JUMP JUMPDEST DUP7 ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP8 DUP1 PUSH2 0x968 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP11 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x943 JUMP JUMPDEST PUSH2 0x9D1 SWAP1 DUP3 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP9 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP10 LT PUSH2 0x698 JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x1080 JUMP JUMPDEST DUP6 PUSH2 0x8D3 JUMP JUMPDEST CALLVALUE PUSH2 0x14C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x14C JUMPI PUSH1 0x4 CALLDATALOAD DUP1 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH2 0xA08 PUSH1 0xFF PUSH1 0x2 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND PUSH2 0xF8D JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH2 0xA35 PUSH1 0xFF PUSH1 0x2 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND PUSH2 0xF8D JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP2 PUSH2 0xA4D DUP2 PUSH2 0x10B1 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH2 0xA62 PUSH2 0xA5C DUP4 PUSH2 0x1168 JUMP JUMPDEST SWAP3 PUSH2 0x11C9 JUMP JUMPDEST SWAP4 ADD SWAP4 PUSH1 0x1 DUP1 PUSH1 0x0 SWAP3 PUSH1 0x64 SHR AND EQ PUSH1 0x0 EQ PUSH2 0xD64 JUMPI POP PUSH1 0x40 MLOAD PUSH2 0xA86 PUSH1 0x40 DUP3 PUSH2 0xEA2 JUMP JUMPDEST PUSH1 0x4 DUP2 MSTORE PUSH4 0x74727565 PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE JUMPDEST PUSH1 0x4C PUSH1 0x40 MLOAD SWAP5 PUSH32 0x646174613A6170706C69636174696F6E2F6A736F6E3B757466382C7B226E616D PUSH1 0x20 DUP8 ADD MSTORE PUSH12 0x65223A22536B796275642023 PUSH1 0xA0 SHL PUSH1 0x40 DUP8 ADD MSTORE DUP1 MLOAD SWAP1 PUSH2 0xB45 PUSH1 0x20 DUP3 ADD SWAP3 PUSH2 0xAF1 DUP2 DUP7 DUP12 ADD DUP7 PUSH2 0xE44 JUMP JUMPDEST DUP9 ADD SWAP2 PUSH2 0x88B PUSH1 0xF2 SHL DUP6 DUP5 ADD MSTORE PUSH32 0x226465736372697074696F6E223A226D79206C6974746C652064756465222C00 PUSH1 0x4E DUP5 ADD MSTORE PUSH11 0x113A37B5B2B724B2111D11 PUSH1 0xA9 SHL PUSH1 0x6D DUP5 ADD MSTORE MLOAD DUP1 SWAP4 PUSH1 0x78 DUP5 ADD SWAP1 PUSH2 0xE44 JUMP JUMPDEST ADD ADD PUSH2 0x88B PUSH1 0xF2 SHL PUSH1 0x2C DUP3 ADD MSTORE PUSH32 0x22696D616765223A22646174613A696D6167652F7376672B786D6C3B62617365 PUSH1 0x2E DUP3 ADD MSTORE PUSH3 0xD8D0B PUSH1 0xEA SHL PUSH1 0x4E DUP3 ADD MSTORE PUSH1 0x0 SWAP6 DUP1 SLOAD SWAP1 PUSH2 0xB93 DUP3 PUSH2 0x1046 JUMP JUMPDEST SWAP2 PUSH1 0x1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0xD3C JUMPI POP PUSH1 0x1 EQ PUSH2 0xCFC JUMPI JUMPDEST POP PUSH2 0x487 DUP7 PUSH2 0x473 PUSH1 0x86 PUSH1 0x68 DUP4 DUP11 DUP11 DUP11 DUP16 PUSH2 0x88B PUSH1 0xF2 SHL DUP2 MSTORE PUSH32 0x2265787465726E616C5F75726C223A2268747470733A2F2F736B79627564732E PUSH1 0x2 DUP3 ADD MSTORE PUSH19 0x18995B9A9E5B185C98DA195C8B98DBDB4BC88B PUSH1 0x6A SHL PUSH1 0x22 DUP3 ADD MSTORE PUSH14 0x2261747472696275746573223A5B PUSH1 0x90 SHL PUSH1 0x35 DUP3 ADD MSTORE PUSH32 0x7B2274726169745F74797065223A2269735F74616C6B6174697665222C227661 PUSH1 0x43 DUP3 ADD MSTORE PUSH5 0x363AB2911D PUSH1 0xD9 SHL PUSH1 0x63 DUP3 ADD MSTORE PUSH2 0xC61 DUP3 MLOAD DUP1 SWAP4 PUSH1 0x20 DUP10 DUP6 ADD SWAP2 ADD PUSH2 0xE44 JUMP JUMPDEST ADD SWAP2 PUSH2 0x1F4B PUSH1 0xF2 SHL DUP6 DUP5 ADD MSTORE PUSH32 0x7B2274726169745F74797065223A227370656564222C2276616C7565223A0000 PUSH1 0x6A DUP5 ADD MSTORE PUSH1 0x88 DUP4 ADD MSTORE PUSH2 0x1F4B PUSH1 0xF2 SHL PUSH1 0xA8 DUP4 ADD MSTORE PUSH32 0x7B2274726169745F74797065223A226C617A696E657373222C2276616C756522 PUSH1 0xAA DUP4 ADD MSTORE PUSH1 0x1D PUSH1 0xF9 SHL PUSH1 0xCA DUP4 ADD MSTORE PUSH1 0xCB DUP3 ADD MSTORE PUSH1 0x7D PUSH1 0xF8 SHL PUSH1 0xEB DUP3 ADD MSTORE PUSH2 0x5D7D PUSH1 0xF0 SHL PUSH1 0xEC DUP3 ADD MSTORE SUB ADD PUSH1 0x66 DUP2 ADD DUP5 MSTORE ADD DUP3 PUSH2 0xEA2 JUMP JUMPDEST SWAP1 SWAP2 SWAP7 POP PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0xD25 JUMPI POP POP SWAP1 SWAP5 ADD PUSH1 0x51 ADD SWAP4 DUP4 DUP4 PUSH1 0x86 PUSH2 0xBA8 JUMP JUMPDEST DUP1 SLOAD DUP3 DUP10 ADD PUSH1 0x51 ADD MSTORE PUSH1 0x20 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xD0C JUMP JUMPDEST PUSH1 0xFF NOT AND PUSH1 0x51 DUP1 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP4 ISZERO ISZERO SWAP1 SWAP4 MUL SWAP1 SWAP4 ADD SWAP1 SWAP2 ADD SWAP7 POP DUP6 SWAP2 POP DUP5 SWAP1 POP PUSH1 0x86 PUSH2 0xBA8 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xD73 PUSH1 0x40 DUP3 PUSH2 0xEA2 JUMP JUMPDEST PUSH1 0x5 DUP2 MSTORE PUSH5 0x66616C7365 PUSH1 0xD8 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0xA98 JUMP JUMPDEST CALLVALUE PUSH2 0x14C JUMPI PUSH2 0xD98 CALLDATASIZE PUSH2 0xE8C JUMP JUMPDEST SWAP1 PUSH1 0x0 PUSH2 0x101C JUMP JUMPDEST CALLVALUE PUSH2 0x14C JUMPI PUSH2 0xDAE CALLDATASIZE PUSH2 0xE8C JUMP JUMPDEST PUSH1 0xA DUP2 LT ISZERO PUSH2 0xDF1 JUMPI PUSH1 0xA DUP2 MUL SWAP1 DUP1 DUP3 DIV PUSH1 0xA EQ SWAP1 ISZERO OR ISZERO PUSH2 0xDDB JUMPI PUSH1 0x20 SWAP2 PUSH2 0x3FF SWAP1 PUSH1 0x40 MLOAD SWAP3 SHR AND DUP2 MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x496E646578206F7574206F662072616E6765 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x14C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x14C JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0xFE5 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0xE57 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xE47 JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0xE80 DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0xE44 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x14C JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x6A2 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x6A2 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x14C JUMPI DUP1 CALLDATALOAD SWAP1 PUSH2 0xEF5 DUP3 PUSH2 0xEC3 JUMP JUMPDEST SWAP3 PUSH2 0xF03 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0xEA2 JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x14C JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x14C JUMPI DUP2 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x6A2 JUMPI DUP3 PUSH1 0x5 SHL SWAP1 PUSH1 0x20 DUP3 ADD SWAP4 PUSH2 0xF59 PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0xEA2 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP3 DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x14C JUMPI PUSH1 0x20 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0xF7D JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0xF70 JUMP JUMPDEST ISZERO PUSH2 0xF94 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x536B794275644D657461646174613A20546F6B656E20646F6573206E6F742065 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x1E1A5CDD PUSH1 0xE2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH2 0x1016 SWAP1 DUP1 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH2 0x1006 PUSH1 0xFF PUSH1 0x2 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND PUSH2 0xF8D JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD PUSH2 0xFE5 JUMP JUMPDEST POP PUSH2 0x103E SWAP1 DUP1 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH2 0x1006 PUSH1 0xFF PUSH1 0x2 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND PUSH2 0xF8D JUMP JUMPDEST SLOAD PUSH1 0x0 PUSH2 0x101C JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x1076 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x1060 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x1055 JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0x108B JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1080 JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH2 0x10AE SWAP4 SWAP3 DUP2 MSTORE DUP2 PUSH1 0x20 DUP3 ADD MSTORE ADD SWAP1 PUSH2 0xE67 JUMP JUMPDEST SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH2 0x10CE PUSH1 0xFF PUSH1 0x2 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND PUSH2 0xF8D JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x7F PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x65 SHR AND SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP3 SWAP2 DUP2 SLOAD SWAP2 PUSH2 0x10F5 DUP4 PUSH2 0x1046 JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP3 PUSH1 0x1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x114B JUMPI POP PUSH1 0x1 EQ PUSH2 0x1111 JUMPI POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 SWAP4 SWAP5 POP SWAP2 SWAP3 JUMPDEST DUP4 DUP4 LT PUSH2 0x1131 JUMPI POP PUSH1 0x20 SWAP3 POP ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SWAP5 SWAP4 SWAP5 SLOAD DUP4 DUP6 DUP8 ADD ADD MSTORE ADD SWAP2 ADD SWAP2 SWAP1 PUSH2 0x1120 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x20 SWAP4 SWAP5 POP PUSH1 0xFF SWAP3 SWAP2 SWAP3 NOT AND DUP4 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH2 0x1185 PUSH1 0xFF PUSH1 0x2 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND PUSH2 0xF8D JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x7F PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x119D PUSH1 0x6C SWAP1 JUMP JUMPDEST SHR AND SWAP1 JUMP JUMPDEST PUSH2 0x11C3 SWAP1 DUP1 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH2 0x1006 PUSH1 0xFF PUSH1 0x2 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND PUSH2 0xF8D JUMP JUMPDEST SLOAD PUSH2 0x11A2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x128E JUMPI PUSH1 0x0 DUP2 DUP1 JUMPDEST PUSH2 0x1276 JUMPI POP PUSH2 0x11E2 DUP2 PUSH2 0xEC3 JUMP JUMPDEST SWAP1 PUSH2 0x11F0 PUSH1 0x40 MLOAD SWAP3 DUP4 PUSH2 0xEA2 JUMP JUMPDEST DUP1 DUP3 MSTORE PUSH1 0x1F NOT PUSH2 0x11FF DUP3 PUSH2 0xEC3 JUMP JUMPDEST ADD CALLDATASIZE PUSH1 0x20 DUP5 ADD CALLDATACOPY JUMPDEST DUP1 SWAP3 DUP1 ISZERO PUSH2 0x126F JUMPI PUSH1 0x0 NOT DUP3 ADD SWAP2 DUP3 GT PUSH2 0xDDB JUMPI DUP2 SWAP4 PUSH1 0xFF PUSH1 0xA DUP4 MOD AND PUSH1 0x30 ADD SWAP3 PUSH1 0xFF DUP5 GT PUSH2 0xDDB JUMPI DUP5 MLOAD GT ISZERO PUSH2 0x1259 JUMPI PUSH1 0xA SWAP3 PUSH1 0xF8 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND PUSH1 0x0 BYTE SWAP1 DUP5 ADD PUSH1 0x1F ADD MSTORE8 DIV SWAP2 PUSH2 0x1207 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP POP SWAP1 POP SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 NOT DUP2 EQ PUSH2 0xDDB JUMPI PUSH1 0x1 PUSH1 0xA SWAP2 ADD SWAP2 DIV DUP1 PUSH2 0x11D4 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x129D PUSH1 0x40 DUP3 PUSH2 0xEA2 JUMP JUMPDEST PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x1259 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 SWAP1 PUSH2 0x160 PUSH2 0x12D4 DUP2 DUP6 PUSH2 0xEA2 JUMP JUMPDEST PUSH1 0xA DUP5 MSTORE PUSH1 0x1F NOT ADD CALLDATASIZE PUSH1 0x20 DUP6 ADD CALLDATACOPY DUP3 PUSH1 0x0 JUMPDEST PUSH1 0xA DUP2 LT PUSH2 0x130B JUMPI POP POP PUSH1 0x1 DUP1 DUP3 PUSH1 0x64 SHR AND EQ SWAP2 PUSH1 0x7F DUP1 DUP4 PUSH1 0x65 SHR AND SWAP3 PUSH2 0x119D PUSH1 0x6C SWAP1 JUMP JUMPDEST PUSH1 0xA DUP2 MUL SWAP1 DUP1 DUP3 DIV PUSH1 0xA EQ DUP2 ISZERO OR ISZERO PUSH2 0xDDB JUMPI PUSH1 0x1 SWAP2 DUP5 PUSH2 0x3FF SWAP2 SHR AND PUSH2 0x1332 DUP3 DUP6 PUSH2 0x12AE JUMP JUMPDEST MSTORE ADD PUSH2 0x12E6 JUMP JUMPDEST SWAP3 SWAP2 SWAP4 PUSH1 0xA DUP5 MLOAD GT PUSH2 0x1497 JUMPI PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x13AC JUMPI PUSH2 0x3E8 PUSH2 0x135E DUP3 DUP8 PUSH2 0x12AE JUMP JUMPDEST MLOAD GT PUSH2 0x136C JUMPI PUSH1 0x1 ADD PUSH2 0x1348 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x5765617261626C65204944206F7574206F662072616E6765 PUSH1 0x40 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP SWAP1 SWAP3 SWAP2 SWAP4 PUSH1 0x64 DUP2 GT PUSH2 0x145D JUMPI PUSH1 0x64 DUP6 GT PUSH2 0x1420 JUMPI PUSH1 0x0 SWAP5 DUP6 JUMPDEST DUP5 MLOAD DUP8 LT ISZERO PUSH2 0x13FB JUMPI PUSH2 0x13D9 DUP8 DUP7 PUSH2 0x12AE JUMP JUMPDEST MLOAD SWAP1 PUSH1 0xA DUP9 MUL SWAP2 DUP9 DUP4 DIV PUSH1 0xA EQ DUP10 ISZERO OR ISZERO PUSH2 0xDDB JUMPI PUSH1 0x1 SWAP3 SHL OR SWAP7 ADD SWAP6 PUSH2 0x13C6 JUMP JUMPDEST SWAP4 POP SWAP2 SWAP5 POP SWAP3 PUSH2 0x1412 JUMPI JUMPDEST PUSH1 0x6C SHL SWAP2 PUSH1 0x65 SHL OR OR SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x64 SHL SWAP1 SWAP2 OR SWAP1 PUSH2 0x1406 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x4C617A696E657373206F7574206F662072616E6765 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x5370656564206F7574206F662072616E6765 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x546F6F206D616E79207765617261626C6573 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x14E5 JUMPI JUMP JUMPDEST PUSH4 0x118CDAA7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID DUP11 SWAP4 SMOD 0xE5 0xE4 STATICCALL 0xBA 0xE0 0xD 0xE1 0xB4 MOD 0xAE 0xBE 0xEF DUP8 0xDE PUSH14 0x231E52FE8251C01FF274B8F79BBC LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG4 MUL 0xA8 0xC0 0x27 0x26 SWAP5 SDIV BYTE LOG4 SLOAD 0x2C GASPRICE EQ 0xD SWAP5 PUSH0 XOR 0xAE 0xAF DUP1 0xE9 DUP9 PUSH10 0x6DD883FBE6A78116473 PUSH16 0x6C634300081C00330000000000000000 ","sourceMap":"181:7203:19:-:0;;;;;;;;;;;;;-1:-1:-1;;181:7203:19;;;;-1:-1:-1;;;;;181:7203:19;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;181:7203:19;;;;;;;;1273:26:0;;1269:95;;-1:-1:-1;181:7203:19;;-1:-1:-1;;;;;;181:7203:19;;;;;;;;;;-1:-1:-1;;;;;181:7203:19;;;;3052:40:0;;-1:-1:-1;3052:40:0;181:7203:19;;;;;;;1269:95:0;1322:31;;;-1:-1:-1;1322:31:0;-1:-1:-1;1322:31:0;181:7203:19;;-1:-1:-1;1322:31:0;181:7203:19;-1:-1:-1;181:7203:19;;;;;;-1:-1:-1;181:7203:19;;;;;-1:-1:-1;181:7203:19"},"deployedBytecode":{"functionDebugData":{"abi_decode_array_uint256_dyn":{"entryPoint":3877,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_string":{"entryPoint":3806,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_uint256t_uint256":{"entryPoint":3724,"id":null,"parameterSlots":1,"returnSlots":2},"abi_encode_string":{"entryPoint":3687,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string_storage":{"entryPoint":4325,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_uint256_string":{"entryPoint":4247,"id":null,"parameterSlots":3,"returnSlots":1},"array_allocation_size_string":{"entryPoint":3779,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_bytes1":{"entryPoint":4224,"id":null,"parameterSlots":2,"returnSlots":0},"constant_POSITION_LAZINESS":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":3652,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":4166,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":3746,"id":null,"parameterSlots":2,"returnSlots":0},"fun_checkOwner":{"entryPoint":5329,"id":84,"parameterSlots":0,"returnSlots":0},"fun_decodeMetadata":{"entryPoint":4802,"id":6945,"parameterSlots":1,"returnSlots":4},"fun_encodeMetadata":{"entryPoint":4921,"id":6864,"parameterSlots":4,"returnSlots":1},"fun_uint2str":{"entryPoint":4553,"id":7095,"parameterSlots":1,"returnSlots":1},"mapping_index_access_mapping_uint256_struct_SkyBudData_storage_of_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"memory_array_index_access_uint256_dyn":{"entryPoint":4782,"id":null,"parameterSlots":2,"returnSlots":1},"modifier_tokenExists":{"entryPoint":4069,"id":7563,"parameterSlots":1,"returnSlots":1},"modifier_tokenExists_17153":{"entryPoint":4273,"id":7563,"parameterSlots":1,"returnSlots":1},"modifier_tokenExists_17154":{"entryPoint":4456,"id":7563,"parameterSlots":1,"returnSlots":1},"modifier_tokenExists_17164":{"entryPoint":4514,"id":7563,"parameterSlots":1,"returnSlots":1},"modifier_tokenExists_7800":{"entryPoint":4124,"id":7563,"parameterSlots":3,"returnSlots":1},"require_helper_stringliteral_ad00":{"entryPoint":3981,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604052600436101561001257600080fd5b60003560e01c806309c88b2414610e2b5780630a02c9ac14610da05780631b21e52c14610d8a578063210fa96b146109d757806332d236a61461084a5780634b93f7531461082c57806354e35a42146107db5780636ae83f7914610735578063715018a6146106dc578063722f7412146106b8578063775861261461048b5780638b6f1ae6146104165780638da5cb5b146103ed5780639f7c43cd146103ca578063a574cea4146102f3578063cf544bfc146102cd578063d938eb2314610299578063db5c339b146101f7578063ee0dbd66146101de578063f2fde38b146101515763ff4102061461010357600080fd5b3461014c57602036600319011261014c5760043580600052600160205261013460ff60026040600020015416610f8d565b60005260016020526020604060002054604051908152f35b600080fd5b3461014c57602036600319011261014c576004356001600160a01b0381169081900361014c5761017f6114d1565b80156101c857600080546001600160a01b03198116831782556001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a3005b631e4fbdf760e01b600052600060045260246000fd5b3461014c57602036600319011261014c576004356111a2565b3461014c57602036600319011261014c5760043580600052600160205261022860ff60026040600020015416610f8d565b60005260016020526000600260408220828155600181016102498154611046565b9081610256575b50500155005b81601f86931160011461026d5750555b8380610250565b8183526020832061028991601f0160051c810190600101611080565b8082528160208120915555610266565b3461014c57602036600319011261014c576004356000526001602052602060ff600260406000200154166040519015158152f35b3461014c57602036600319011261014c5760206102eb600435611168565b604051908152f35b3461014c57602036600319011261014c5760043580600052600160205261032460ff60026040600020015416610f8d565b60005260016020526001604060002061035081549161034960405180958193016110e5565b0383610ea2565b61037861035c826112c2565b929390919560405195865260c0602087015260c0860190610e67565b9484860360408601526020808551978881520194016000965b8088106103b257505084955015156060850152608084015260a08301520390f35b90946020806001928851815201960197019690610391565b3461014c57602036600319011261014c576020604051607f60043560651c168152f35b3461014c57600036600319011261014c576000546040516001600160a01b039091168152602090f35b3461014c57602036600319011261014c5760043580600052600160205261044760ff60026040600020015416610f8d565b600052600160205261048761046c6104736001604060002001604051928380926110e5565b0382610ea2565b604051918291602083526020830190610e67565b0390f35b3461014c5760c036600319011261014c576004356024356001600160401b03811161014c576104be903690600401610f25565b90604435801515810361014c5760a435906001600160401b03821161014c576104ee610504923690600401610ede565b936104f76114d1565b6084359160643591611339565b9160405192606084018481106001600160401b038211176106a25760405280845260208401938285526040810190600182528460005260016020526040600020905181556001810195519586516001600160401b0381116106a2576105698254611046565b601f8111610665575b506020601f82116001146105eb578160029493926105b8926000805160206114fb8339815191529a9b6000926105e0575b50508160011b916000199060031b1c19161790565b90555b019051151560ff801983541691161790556105db60405192839283611097565b0390a2005b015190508b806105a3565b601f1982169883600052816000209960005b81811061064d575099600192849260029796956000805160206114fb8339815191529c9d10610634575b505050811b0190556105bb565b015160001960f88460031b161c191690558a8080610627565b838301518c556001909b019a602093840193016105fd565b61069290836000526020600020601f840160051c81019160208510610698575b601f0160051c0190611080565b88610572565b9091508190610685565b634e487b7160e01b600052604160045260246000fd5b3461014c57602036600319011261014c576020600435606c1c607f60405191168152f35b3461014c57600036600319011261014c576106f56114d1565b600080546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b3461014c57604036600319011261014c576004356024356001600160401b03811161014c576107776000805160206114fb833981519152913690600401610f25565b82600052600160205261079460ff60026040600020015416610f8d565b8260005260016020526107b96040600020916107b083546112c2565b93909250611339565b8082556105db60405192839283526040602084015260016040840191016110e5565b3461014c57602036600319011261014c5760043580600052600160205261080c60ff60026040600020015416610f8d565b600052600160205260206040600020546001806040519260641c16148152f35b3461014c57602036600319011261014c5760206102eb6004356110b1565b3461014c57604036600319011261014c576004356024356001600160401b03811161014c5761087d903690600401610ede565b9080600052600160205261089b60ff60026040600020015416610f8d565b80600052600160205260406000209160018301928151936001600160401b0385116106a2576108ca8154611046565b601f81116109a5575b506020601f861160011461093157856000805160206114fb833981519152959661091392600091610926575b508160011b916000199060031b1c19161790565b90555b546105db60405192839283611097565b9050850151886108ff565b601f1986169082600052806000209160005b81811061098d57509187916000805160206114fb833981519152979860019410610974575b5050811b019055610916565b86015160001960f88460031b161c191690558780610968565b9192602060018192868a015181550194019201610943565b6109d190826000526020600020601f880160051c8101916020891061069857601f0160051c0190611080565b856108d3565b3461014c57602036600319011261014c57600435806000526001602052610a0860ff60026040600020015416610f8d565b80600052600160205260406000208054806000526001602052610a3560ff60026040600020015416610f8d565b600052600160205260406000205491610a4d816110b1565b906001610a62610a5c83611168565b926111c9565b93019360018060009260641c1614600014610d645750604051610a86604082610ea2565b60048152637472756560e01b60208201525b604c604051947f646174613a6170706c69636174696f6e2f6a736f6e3b757466382c7b226e616d60208701526b65223a22536b79627564202360a01b6040870152805190610b456020820192610af181868b0186610e44565b88019161088b60f21b858401527f226465736372697074696f6e223a226d79206c6974746c652064756465222c00604e8401526a113a37b5b2b724b2111d1160a91b606d8401525180936078840190610e44565b010161088b60f21b602c8201527f22696d616765223a22646174613a696d6167652f7376672b786d6c3b62617365602e820152620d8d0b60ea1b604e820152600095805490610b9382611046565b9160018116908115610d3c5750600114610cfc575b506104878661047360866068838a8a8a8f61088b60f21b81527f2265787465726e616c5f75726c223a2268747470733a2f2f736b79627564732e60028201527218995b9a9e5b185c98da195c8b98dbdb4bc88b606a1b60228201526d2261747472696275746573223a5b60901b60358201527f7b2274726169745f74797065223a2269735f74616c6b6174697665222c227661604382015264363ab2911d60d91b6063820152610c618251809360208985019101610e44565b0191611f4b60f21b858401527f7b2274726169745f74797065223a227370656564222c2276616c7565223a0000606a8401526088830152611f4b60f21b60a88301527f7b2274726169745f74797065223a226c617a696e657373222c2276616c75652260aa830152601d60f91b60ca83015260cb820152607d60f81b60eb820152615d7d60f01b60ec82015203016066810184520182610ea2565b9091965060005260206000206000905b828210610d255750509094016051019383836086610ba8565b805482890160510152602090910190600101610d0c565b60ff191660518086019190915283151590930290930190910196508591508490506086610ba8565b50604051610d73604082610ea2565b600581526466616c736560d81b6020820152610a98565b3461014c57610d9836610e8c565b90600061101c565b3461014c57610dae36610e8c565b600a811015610df157600a810290808204600a1490151715610ddb576020916103ff90604051921c168152f35b634e487b7160e01b600052601160045260246000fd5b60405162461bcd60e51b8152602060048201526012602482015271496e646578206f7574206f662072616e676560701b6044820152606490fd5b3461014c57602036600319011261014c57600435610fe5565b60005b838110610e575750506000910152565b8181015183820152602001610e47565b90602091610e8081518092818552858086019101610e44565b601f01601f1916010190565b604090600319011261014c576004359060243590565b90601f801991011681019081106001600160401b038211176106a257604052565b6001600160401b0381116106a257601f01601f191660200190565b81601f8201121561014c57803590610ef582610ec3565b92610f036040519485610ea2565b8284526020838301011161014c57816000926020809301838601378301015290565b9080601f8301121561014c578135916001600160401b0383116106a2578260051b906020820193610f596040519586610ea2565b845260208085019282010192831161014c57602001905b828210610f7d5750505090565b8135815260209182019101610f70565b15610f9457565b60405162461bcd60e51b8152602060048201526024808201527f536b794275644d657461646174613a20546f6b656e20646f6573206e6f7420656044820152631e1a5cdd60e21b6064820152608490fd5b6110169080600052600160205261100660ff60026040600020015416610f8d565b6000526001602052604060002090565b54610fe5565b5061103e9080600052600160205261100660ff60026040600020015416610f8d565b54600061101c565b90600182811c92168015611076575b602083101461106057565b634e487b7160e01b600052602260045260246000fd5b91607f1691611055565b81811061108b575050565b60008155600101611080565b6040906110ae939281528160208201520190610e67565b90565b8060005260016020526110ce60ff60026040600020015416610f8d565b6000526001602052607f60406000205460651c1690565b600092918154916110f583611046565b808352926001811690811561114b575060011461111157505050565b60009081526020812093945091925b838310611131575060209250010190565b600181602092949394548385870101520191019190611120565b915050602093945060ff929192191683830152151560051b010190565b80600052600160205261118560ff60026040600020015416610f8d565b6000526001602052607f60406000205461119d606c90565b1c1690565b6111c39080600052600160205261100660ff60026040600020015416610f8d565b546111a2565b801561128e57600081805b61127657506111e281610ec3565b906111f06040519283610ea2565b808252601f196111ff82610ec3565b013660208401375b8092801561126f576000198201918211610ddb57819360ff600a8306166030019260ff8411610ddb578451111561125957600a9260f81b6001600160f81b03191660001a908401601f01530491611207565b634e487b7160e01b600052603260045260246000fd5b5050905090565b906000198114610ddb576001600a91019104806111d4565b5060405161129d604082610ea2565b60018152600360fc1b602082015290565b80518210156112595760209160051b010190565b60405191906101606112d48185610ea2565b600a8452601f19013660208501378260005b600a811061130b5750506001808260641c161491607f808360651c169261119d606c90565b600a810290808204600a1481151715610ddb57600191846103ff911c1661133282856112ae565b52016112e6565b929193600a8451116114975760005b84518110156113ac576103e861135e82876112ae565b511161136c57600101611348565b60405162461bcd60e51b81526020600482015260186024820152775765617261626c65204944206f7574206f662072616e676560401b6044820152606490fd5b50909291936064811161145d576064851161142057600094855b84518710156113fb576113d987866112ae565b5190600a880291888304600a1489151715610ddb576001921b179601956113c6565b935091945092611412575b606c1b9160651b171790565b600160641b90911790611406565b60405162461bcd60e51b81526020600482015260156024820152744c617a696e657373206f7574206f662072616e676560581b6044820152606490fd5b60405162461bcd60e51b81526020600482015260126024820152715370656564206f7574206f662072616e676560701b6044820152606490fd5b60405162461bcd60e51b8152602060048201526012602482015271546f6f206d616e79207765617261626c657360701b6044820152606490fd5b6000546001600160a01b031633036114e557565b63118cdaa760e01b6000523360045260246000fdfe8a9307e5e4fabae00de1b406aebeef87de6d231e52fe8251c01ff274b8f79bbca2646970667358221220a402a8c0272694051aa4542c3a140d945f18aeaf80e9886906dd883fbe6a781164736f6c634300081c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9C88B24 EQ PUSH2 0xE2B JUMPI DUP1 PUSH4 0xA02C9AC EQ PUSH2 0xDA0 JUMPI DUP1 PUSH4 0x1B21E52C EQ PUSH2 0xD8A JUMPI DUP1 PUSH4 0x210FA96B EQ PUSH2 0x9D7 JUMPI DUP1 PUSH4 0x32D236A6 EQ PUSH2 0x84A JUMPI DUP1 PUSH4 0x4B93F753 EQ PUSH2 0x82C JUMPI DUP1 PUSH4 0x54E35A42 EQ PUSH2 0x7DB JUMPI DUP1 PUSH4 0x6AE83F79 EQ PUSH2 0x735 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x6DC JUMPI DUP1 PUSH4 0x722F7412 EQ PUSH2 0x6B8 JUMPI DUP1 PUSH4 0x77586126 EQ PUSH2 0x48B JUMPI DUP1 PUSH4 0x8B6F1AE6 EQ PUSH2 0x416 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3ED JUMPI DUP1 PUSH4 0x9F7C43CD EQ PUSH2 0x3CA JUMPI DUP1 PUSH4 0xA574CEA4 EQ PUSH2 0x2F3 JUMPI DUP1 PUSH4 0xCF544BFC EQ PUSH2 0x2CD JUMPI DUP1 PUSH4 0xD938EB23 EQ PUSH2 0x299 JUMPI DUP1 PUSH4 0xDB5C339B EQ PUSH2 0x1F7 JUMPI DUP1 PUSH4 0xEE0DBD66 EQ PUSH2 0x1DE JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x151 JUMPI PUSH4 0xFF410206 EQ PUSH2 0x103 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x14C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x14C JUMPI PUSH1 0x4 CALLDATALOAD DUP1 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH2 0x134 PUSH1 0xFF PUSH1 0x2 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND PUSH2 0xF8D JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x14C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x14C JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x14C JUMPI PUSH2 0x17F PUSH2 0x14D1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1C8 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR DUP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP1 LOG3 STOP JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x14C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x14C JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x11A2 JUMP JUMPDEST CALLVALUE PUSH2 0x14C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x14C JUMPI PUSH1 0x4 CALLDATALOAD DUP1 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH2 0x228 PUSH1 0xFF PUSH1 0x2 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND PUSH2 0xF8D JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 PUSH1 0x2 PUSH1 0x40 DUP3 KECCAK256 DUP3 DUP2 SSTORE PUSH1 0x1 DUP2 ADD PUSH2 0x249 DUP2 SLOAD PUSH2 0x1046 JUMP JUMPDEST SWAP1 DUP2 PUSH2 0x256 JUMPI JUMPDEST POP POP ADD SSTORE STOP JUMPDEST DUP2 PUSH1 0x1F DUP7 SWAP4 GT PUSH1 0x1 EQ PUSH2 0x26D JUMPI POP SSTORE JUMPDEST DUP4 DUP1 PUSH2 0x250 JUMP JUMPDEST DUP2 DUP4 MSTORE PUSH1 0x20 DUP4 KECCAK256 PUSH2 0x289 SWAP2 PUSH1 0x1F ADD PUSH1 0x5 SHR DUP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1080 JUMP JUMPDEST DUP1 DUP3 MSTORE DUP2 PUSH1 0x20 DUP2 KECCAK256 SWAP2 SSTORE SSTORE PUSH2 0x266 JUMP JUMPDEST CALLVALUE PUSH2 0x14C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x14C JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x2 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x14C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x14C JUMPI PUSH1 0x20 PUSH2 0x2EB PUSH1 0x4 CALLDATALOAD PUSH2 0x1168 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x14C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x14C JUMPI PUSH1 0x4 CALLDATALOAD DUP1 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH2 0x324 PUSH1 0xFF PUSH1 0x2 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND PUSH2 0xF8D JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x350 DUP2 SLOAD SWAP2 PUSH2 0x349 PUSH1 0x40 MLOAD DUP1 SWAP6 DUP2 SWAP4 ADD PUSH2 0x10E5 JUMP JUMPDEST SUB DUP4 PUSH2 0xEA2 JUMP JUMPDEST PUSH2 0x378 PUSH2 0x35C DUP3 PUSH2 0x12C2 JUMP JUMPDEST SWAP3 SWAP4 SWAP1 SWAP2 SWAP6 PUSH1 0x40 MLOAD SWAP6 DUP7 MSTORE PUSH1 0xC0 PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0xC0 DUP7 ADD SWAP1 PUSH2 0xE67 JUMP JUMPDEST SWAP5 DUP5 DUP7 SUB PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x20 DUP1 DUP6 MLOAD SWAP8 DUP9 DUP2 MSTORE ADD SWAP5 ADD PUSH1 0x0 SWAP7 JUMPDEST DUP1 DUP9 LT PUSH2 0x3B2 JUMPI POP POP DUP5 SWAP6 POP ISZERO ISZERO PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST SWAP1 SWAP5 PUSH1 0x20 DUP1 PUSH1 0x1 SWAP3 DUP9 MLOAD DUP2 MSTORE ADD SWAP7 ADD SWAP8 ADD SWAP7 SWAP1 PUSH2 0x391 JUMP JUMPDEST CALLVALUE PUSH2 0x14C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x14C JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x7F PUSH1 0x4 CALLDATALOAD PUSH1 0x65 SHR AND DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x14C JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x14C JUMPI PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x14C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x14C JUMPI PUSH1 0x4 CALLDATALOAD DUP1 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH2 0x447 PUSH1 0xFF PUSH1 0x2 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND PUSH2 0xF8D JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH2 0x487 PUSH2 0x46C PUSH2 0x473 PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH2 0x10E5 JUMP JUMPDEST SUB DUP3 PUSH2 0xEA2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0xE67 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x14C JUMPI PUSH1 0xC0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x14C JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x14C JUMPI PUSH2 0x4BE SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xF25 JUMP JUMPDEST SWAP1 PUSH1 0x44 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x14C JUMPI PUSH1 0xA4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x14C JUMPI PUSH2 0x4EE PUSH2 0x504 SWAP3 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xEDE JUMP JUMPDEST SWAP4 PUSH2 0x4F7 PUSH2 0x14D1 JUMP JUMPDEST PUSH1 0x84 CALLDATALOAD SWAP2 PUSH1 0x64 CALLDATALOAD SWAP2 PUSH2 0x1339 JUMP JUMPDEST SWAP2 PUSH1 0x40 MLOAD SWAP3 PUSH1 0x60 DUP5 ADD DUP5 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x6A2 JUMPI PUSH1 0x40 MSTORE DUP1 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 DUP3 DUP6 MSTORE PUSH1 0x40 DUP2 ADD SWAP1 PUSH1 0x1 DUP3 MSTORE DUP5 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 MLOAD DUP2 SSTORE PUSH1 0x1 DUP2 ADD SWAP6 MLOAD SWAP6 DUP7 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x6A2 JUMPI PUSH2 0x569 DUP3 SLOAD PUSH2 0x1046 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x665 JUMPI JUMPDEST POP PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x5EB JUMPI DUP2 PUSH1 0x2 SWAP5 SWAP4 SWAP3 PUSH2 0x5B8 SWAP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x14FB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP11 SWAP12 PUSH1 0x0 SWAP3 PUSH2 0x5E0 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 JUMP JUMPDEST SWAP1 SSTORE JUMPDEST ADD SWAP1 MLOAD ISZERO ISZERO PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 AND OR SWAP1 SSTORE PUSH2 0x5DB PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 DUP4 PUSH2 0x1097 JUMP JUMPDEST SUB SWAP1 LOG2 STOP JUMPDEST ADD MLOAD SWAP1 POP DUP12 DUP1 PUSH2 0x5A3 JUMP JUMPDEST PUSH1 0x1F NOT DUP3 AND SWAP9 DUP4 PUSH1 0x0 MSTORE DUP2 PUSH1 0x0 KECCAK256 SWAP10 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x64D JUMPI POP SWAP10 PUSH1 0x1 SWAP3 DUP5 SWAP3 PUSH1 0x2 SWAP8 SWAP7 SWAP6 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x14FB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP13 SWAP14 LT PUSH2 0x634 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x5BB JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP11 DUP1 DUP1 PUSH2 0x627 JUMP JUMPDEST DUP4 DUP4 ADD MLOAD DUP13 SSTORE PUSH1 0x1 SWAP1 SWAP12 ADD SWAP11 PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 ADD PUSH2 0x5FD JUMP JUMPDEST PUSH2 0x692 SWAP1 DUP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP6 LT PUSH2 0x698 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x1080 JUMP JUMPDEST DUP9 PUSH2 0x572 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x685 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x14C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x14C JUMPI PUSH1 0x20 PUSH1 0x4 CALLDATALOAD PUSH1 0x6C SHR PUSH1 0x7F PUSH1 0x40 MLOAD SWAP2 AND DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x14C JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x14C JUMPI PUSH2 0x6F5 PUSH2 0x14D1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x14C JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x14C JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x14C JUMPI PUSH2 0x777 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x14FB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xF25 JUMP JUMPDEST DUP3 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH2 0x794 PUSH1 0xFF PUSH1 0x2 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND PUSH2 0xF8D JUMP JUMPDEST DUP3 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH2 0x7B9 PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 PUSH2 0x7B0 DUP4 SLOAD PUSH2 0x12C2 JUMP JUMPDEST SWAP4 SWAP1 SWAP3 POP PUSH2 0x1339 JUMP JUMPDEST DUP1 DUP3 SSTORE PUSH2 0x5DB PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 DUP4 MSTORE PUSH1 0x40 PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x40 DUP5 ADD SWAP2 ADD PUSH2 0x10E5 JUMP JUMPDEST CALLVALUE PUSH2 0x14C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x14C JUMPI PUSH1 0x4 CALLDATALOAD DUP1 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH2 0x80C PUSH1 0xFF PUSH1 0x2 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND PUSH2 0xF8D JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x1 DUP1 PUSH1 0x40 MLOAD SWAP3 PUSH1 0x64 SHR AND EQ DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x14C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x14C JUMPI PUSH1 0x20 PUSH2 0x2EB PUSH1 0x4 CALLDATALOAD PUSH2 0x10B1 JUMP JUMPDEST CALLVALUE PUSH2 0x14C JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x14C JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x14C JUMPI PUSH2 0x87D SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xEDE JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH2 0x89B PUSH1 0xFF PUSH1 0x2 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND PUSH2 0xF8D JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x1 DUP4 ADD SWAP3 DUP2 MLOAD SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP6 GT PUSH2 0x6A2 JUMPI PUSH2 0x8CA DUP2 SLOAD PUSH2 0x1046 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x9A5 JUMPI JUMPDEST POP PUSH1 0x20 PUSH1 0x1F DUP7 GT PUSH1 0x1 EQ PUSH2 0x931 JUMPI DUP6 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x14FB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP6 SWAP7 PUSH2 0x913 SWAP3 PUSH1 0x0 SWAP2 PUSH2 0x926 JUMPI JUMPDEST POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 JUMP JUMPDEST SWAP1 SSTORE JUMPDEST SLOAD PUSH2 0x5DB PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 DUP4 PUSH2 0x1097 JUMP JUMPDEST SWAP1 POP DUP6 ADD MLOAD DUP9 PUSH2 0x8FF JUMP JUMPDEST PUSH1 0x1F NOT DUP7 AND SWAP1 DUP3 PUSH1 0x0 MSTORE DUP1 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x98D JUMPI POP SWAP2 DUP8 SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x14FB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP8 SWAP9 PUSH1 0x1 SWAP5 LT PUSH2 0x974 JUMPI JUMPDEST POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x916 JUMP JUMPDEST DUP7 ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP8 DUP1 PUSH2 0x968 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP11 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x943 JUMP JUMPDEST PUSH2 0x9D1 SWAP1 DUP3 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP9 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP10 LT PUSH2 0x698 JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x1080 JUMP JUMPDEST DUP6 PUSH2 0x8D3 JUMP JUMPDEST CALLVALUE PUSH2 0x14C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x14C JUMPI PUSH1 0x4 CALLDATALOAD DUP1 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH2 0xA08 PUSH1 0xFF PUSH1 0x2 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND PUSH2 0xF8D JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH2 0xA35 PUSH1 0xFF PUSH1 0x2 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND PUSH2 0xF8D JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP2 PUSH2 0xA4D DUP2 PUSH2 0x10B1 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH2 0xA62 PUSH2 0xA5C DUP4 PUSH2 0x1168 JUMP JUMPDEST SWAP3 PUSH2 0x11C9 JUMP JUMPDEST SWAP4 ADD SWAP4 PUSH1 0x1 DUP1 PUSH1 0x0 SWAP3 PUSH1 0x64 SHR AND EQ PUSH1 0x0 EQ PUSH2 0xD64 JUMPI POP PUSH1 0x40 MLOAD PUSH2 0xA86 PUSH1 0x40 DUP3 PUSH2 0xEA2 JUMP JUMPDEST PUSH1 0x4 DUP2 MSTORE PUSH4 0x74727565 PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE JUMPDEST PUSH1 0x4C PUSH1 0x40 MLOAD SWAP5 PUSH32 0x646174613A6170706C69636174696F6E2F6A736F6E3B757466382C7B226E616D PUSH1 0x20 DUP8 ADD MSTORE PUSH12 0x65223A22536B796275642023 PUSH1 0xA0 SHL PUSH1 0x40 DUP8 ADD MSTORE DUP1 MLOAD SWAP1 PUSH2 0xB45 PUSH1 0x20 DUP3 ADD SWAP3 PUSH2 0xAF1 DUP2 DUP7 DUP12 ADD DUP7 PUSH2 0xE44 JUMP JUMPDEST DUP9 ADD SWAP2 PUSH2 0x88B PUSH1 0xF2 SHL DUP6 DUP5 ADD MSTORE PUSH32 0x226465736372697074696F6E223A226D79206C6974746C652064756465222C00 PUSH1 0x4E DUP5 ADD MSTORE PUSH11 0x113A37B5B2B724B2111D11 PUSH1 0xA9 SHL PUSH1 0x6D DUP5 ADD MSTORE MLOAD DUP1 SWAP4 PUSH1 0x78 DUP5 ADD SWAP1 PUSH2 0xE44 JUMP JUMPDEST ADD ADD PUSH2 0x88B PUSH1 0xF2 SHL PUSH1 0x2C DUP3 ADD MSTORE PUSH32 0x22696D616765223A22646174613A696D6167652F7376672B786D6C3B62617365 PUSH1 0x2E DUP3 ADD MSTORE PUSH3 0xD8D0B PUSH1 0xEA SHL PUSH1 0x4E DUP3 ADD MSTORE PUSH1 0x0 SWAP6 DUP1 SLOAD SWAP1 PUSH2 0xB93 DUP3 PUSH2 0x1046 JUMP JUMPDEST SWAP2 PUSH1 0x1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0xD3C JUMPI POP PUSH1 0x1 EQ PUSH2 0xCFC JUMPI JUMPDEST POP PUSH2 0x487 DUP7 PUSH2 0x473 PUSH1 0x86 PUSH1 0x68 DUP4 DUP11 DUP11 DUP11 DUP16 PUSH2 0x88B PUSH1 0xF2 SHL DUP2 MSTORE PUSH32 0x2265787465726E616C5F75726C223A2268747470733A2F2F736B79627564732E PUSH1 0x2 DUP3 ADD MSTORE PUSH19 0x18995B9A9E5B185C98DA195C8B98DBDB4BC88B PUSH1 0x6A SHL PUSH1 0x22 DUP3 ADD MSTORE PUSH14 0x2261747472696275746573223A5B PUSH1 0x90 SHL PUSH1 0x35 DUP3 ADD MSTORE PUSH32 0x7B2274726169745F74797065223A2269735F74616C6B6174697665222C227661 PUSH1 0x43 DUP3 ADD MSTORE PUSH5 0x363AB2911D PUSH1 0xD9 SHL PUSH1 0x63 DUP3 ADD MSTORE PUSH2 0xC61 DUP3 MLOAD DUP1 SWAP4 PUSH1 0x20 DUP10 DUP6 ADD SWAP2 ADD PUSH2 0xE44 JUMP JUMPDEST ADD SWAP2 PUSH2 0x1F4B PUSH1 0xF2 SHL DUP6 DUP5 ADD MSTORE PUSH32 0x7B2274726169745F74797065223A227370656564222C2276616C7565223A0000 PUSH1 0x6A DUP5 ADD MSTORE PUSH1 0x88 DUP4 ADD MSTORE PUSH2 0x1F4B PUSH1 0xF2 SHL PUSH1 0xA8 DUP4 ADD MSTORE PUSH32 0x7B2274726169745F74797065223A226C617A696E657373222C2276616C756522 PUSH1 0xAA DUP4 ADD MSTORE PUSH1 0x1D PUSH1 0xF9 SHL PUSH1 0xCA DUP4 ADD MSTORE PUSH1 0xCB DUP3 ADD MSTORE PUSH1 0x7D PUSH1 0xF8 SHL PUSH1 0xEB DUP3 ADD MSTORE PUSH2 0x5D7D PUSH1 0xF0 SHL PUSH1 0xEC DUP3 ADD MSTORE SUB ADD PUSH1 0x66 DUP2 ADD DUP5 MSTORE ADD DUP3 PUSH2 0xEA2 JUMP JUMPDEST SWAP1 SWAP2 SWAP7 POP PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0xD25 JUMPI POP POP SWAP1 SWAP5 ADD PUSH1 0x51 ADD SWAP4 DUP4 DUP4 PUSH1 0x86 PUSH2 0xBA8 JUMP JUMPDEST DUP1 SLOAD DUP3 DUP10 ADD PUSH1 0x51 ADD MSTORE PUSH1 0x20 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xD0C JUMP JUMPDEST PUSH1 0xFF NOT AND PUSH1 0x51 DUP1 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP4 ISZERO ISZERO SWAP1 SWAP4 MUL SWAP1 SWAP4 ADD SWAP1 SWAP2 ADD SWAP7 POP DUP6 SWAP2 POP DUP5 SWAP1 POP PUSH1 0x86 PUSH2 0xBA8 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xD73 PUSH1 0x40 DUP3 PUSH2 0xEA2 JUMP JUMPDEST PUSH1 0x5 DUP2 MSTORE PUSH5 0x66616C7365 PUSH1 0xD8 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0xA98 JUMP JUMPDEST CALLVALUE PUSH2 0x14C JUMPI PUSH2 0xD98 CALLDATASIZE PUSH2 0xE8C JUMP JUMPDEST SWAP1 PUSH1 0x0 PUSH2 0x101C JUMP JUMPDEST CALLVALUE PUSH2 0x14C JUMPI PUSH2 0xDAE CALLDATASIZE PUSH2 0xE8C JUMP JUMPDEST PUSH1 0xA DUP2 LT ISZERO PUSH2 0xDF1 JUMPI PUSH1 0xA DUP2 MUL SWAP1 DUP1 DUP3 DIV PUSH1 0xA EQ SWAP1 ISZERO OR ISZERO PUSH2 0xDDB JUMPI PUSH1 0x20 SWAP2 PUSH2 0x3FF SWAP1 PUSH1 0x40 MLOAD SWAP3 SHR AND DUP2 MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x496E646578206F7574206F662072616E6765 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x14C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x14C JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0xFE5 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0xE57 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xE47 JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0xE80 DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0xE44 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x14C JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x6A2 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x6A2 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x14C JUMPI DUP1 CALLDATALOAD SWAP1 PUSH2 0xEF5 DUP3 PUSH2 0xEC3 JUMP JUMPDEST SWAP3 PUSH2 0xF03 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0xEA2 JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x14C JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x14C JUMPI DUP2 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x6A2 JUMPI DUP3 PUSH1 0x5 SHL SWAP1 PUSH1 0x20 DUP3 ADD SWAP4 PUSH2 0xF59 PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0xEA2 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP3 DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x14C JUMPI PUSH1 0x20 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0xF7D JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0xF70 JUMP JUMPDEST ISZERO PUSH2 0xF94 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x536B794275644D657461646174613A20546F6B656E20646F6573206E6F742065 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x1E1A5CDD PUSH1 0xE2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH2 0x1016 SWAP1 DUP1 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH2 0x1006 PUSH1 0xFF PUSH1 0x2 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND PUSH2 0xF8D JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD PUSH2 0xFE5 JUMP JUMPDEST POP PUSH2 0x103E SWAP1 DUP1 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH2 0x1006 PUSH1 0xFF PUSH1 0x2 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND PUSH2 0xF8D JUMP JUMPDEST SLOAD PUSH1 0x0 PUSH2 0x101C JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x1076 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x1060 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x1055 JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0x108B JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1080 JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH2 0x10AE SWAP4 SWAP3 DUP2 MSTORE DUP2 PUSH1 0x20 DUP3 ADD MSTORE ADD SWAP1 PUSH2 0xE67 JUMP JUMPDEST SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH2 0x10CE PUSH1 0xFF PUSH1 0x2 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND PUSH2 0xF8D JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x7F PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x65 SHR AND SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP3 SWAP2 DUP2 SLOAD SWAP2 PUSH2 0x10F5 DUP4 PUSH2 0x1046 JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP3 PUSH1 0x1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x114B JUMPI POP PUSH1 0x1 EQ PUSH2 0x1111 JUMPI POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 SWAP4 SWAP5 POP SWAP2 SWAP3 JUMPDEST DUP4 DUP4 LT PUSH2 0x1131 JUMPI POP PUSH1 0x20 SWAP3 POP ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SWAP5 SWAP4 SWAP5 SLOAD DUP4 DUP6 DUP8 ADD ADD MSTORE ADD SWAP2 ADD SWAP2 SWAP1 PUSH2 0x1120 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x20 SWAP4 SWAP5 POP PUSH1 0xFF SWAP3 SWAP2 SWAP3 NOT AND DUP4 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH2 0x1185 PUSH1 0xFF PUSH1 0x2 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND PUSH2 0xF8D JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x7F PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x119D PUSH1 0x6C SWAP1 JUMP JUMPDEST SHR AND SWAP1 JUMP JUMPDEST PUSH2 0x11C3 SWAP1 DUP1 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH2 0x1006 PUSH1 0xFF PUSH1 0x2 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND PUSH2 0xF8D JUMP JUMPDEST SLOAD PUSH2 0x11A2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x128E JUMPI PUSH1 0x0 DUP2 DUP1 JUMPDEST PUSH2 0x1276 JUMPI POP PUSH2 0x11E2 DUP2 PUSH2 0xEC3 JUMP JUMPDEST SWAP1 PUSH2 0x11F0 PUSH1 0x40 MLOAD SWAP3 DUP4 PUSH2 0xEA2 JUMP JUMPDEST DUP1 DUP3 MSTORE PUSH1 0x1F NOT PUSH2 0x11FF DUP3 PUSH2 0xEC3 JUMP JUMPDEST ADD CALLDATASIZE PUSH1 0x20 DUP5 ADD CALLDATACOPY JUMPDEST DUP1 SWAP3 DUP1 ISZERO PUSH2 0x126F JUMPI PUSH1 0x0 NOT DUP3 ADD SWAP2 DUP3 GT PUSH2 0xDDB JUMPI DUP2 SWAP4 PUSH1 0xFF PUSH1 0xA DUP4 MOD AND PUSH1 0x30 ADD SWAP3 PUSH1 0xFF DUP5 GT PUSH2 0xDDB JUMPI DUP5 MLOAD GT ISZERO PUSH2 0x1259 JUMPI PUSH1 0xA SWAP3 PUSH1 0xF8 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND PUSH1 0x0 BYTE SWAP1 DUP5 ADD PUSH1 0x1F ADD MSTORE8 DIV SWAP2 PUSH2 0x1207 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP POP SWAP1 POP SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x0 NOT DUP2 EQ PUSH2 0xDDB JUMPI PUSH1 0x1 PUSH1 0xA SWAP2 ADD SWAP2 DIV DUP1 PUSH2 0x11D4 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x129D PUSH1 0x40 DUP3 PUSH2 0xEA2 JUMP JUMPDEST PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x1259 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 SWAP1 PUSH2 0x160 PUSH2 0x12D4 DUP2 DUP6 PUSH2 0xEA2 JUMP JUMPDEST PUSH1 0xA DUP5 MSTORE PUSH1 0x1F NOT ADD CALLDATASIZE PUSH1 0x20 DUP6 ADD CALLDATACOPY DUP3 PUSH1 0x0 JUMPDEST PUSH1 0xA DUP2 LT PUSH2 0x130B JUMPI POP POP PUSH1 0x1 DUP1 DUP3 PUSH1 0x64 SHR AND EQ SWAP2 PUSH1 0x7F DUP1 DUP4 PUSH1 0x65 SHR AND SWAP3 PUSH2 0x119D PUSH1 0x6C SWAP1 JUMP JUMPDEST PUSH1 0xA DUP2 MUL SWAP1 DUP1 DUP3 DIV PUSH1 0xA EQ DUP2 ISZERO OR ISZERO PUSH2 0xDDB JUMPI PUSH1 0x1 SWAP2 DUP5 PUSH2 0x3FF SWAP2 SHR AND PUSH2 0x1332 DUP3 DUP6 PUSH2 0x12AE JUMP JUMPDEST MSTORE ADD PUSH2 0x12E6 JUMP JUMPDEST SWAP3 SWAP2 SWAP4 PUSH1 0xA DUP5 MLOAD GT PUSH2 0x1497 JUMPI PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x13AC JUMPI PUSH2 0x3E8 PUSH2 0x135E DUP3 DUP8 PUSH2 0x12AE JUMP JUMPDEST MLOAD GT PUSH2 0x136C JUMPI PUSH1 0x1 ADD PUSH2 0x1348 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x5765617261626C65204944206F7574206F662072616E6765 PUSH1 0x40 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP SWAP1 SWAP3 SWAP2 SWAP4 PUSH1 0x64 DUP2 GT PUSH2 0x145D JUMPI PUSH1 0x64 DUP6 GT PUSH2 0x1420 JUMPI PUSH1 0x0 SWAP5 DUP6 JUMPDEST DUP5 MLOAD DUP8 LT ISZERO PUSH2 0x13FB JUMPI PUSH2 0x13D9 DUP8 DUP7 PUSH2 0x12AE JUMP JUMPDEST MLOAD SWAP1 PUSH1 0xA DUP9 MUL SWAP2 DUP9 DUP4 DIV PUSH1 0xA EQ DUP10 ISZERO OR ISZERO PUSH2 0xDDB JUMPI PUSH1 0x1 SWAP3 SHL OR SWAP7 ADD SWAP6 PUSH2 0x13C6 JUMP JUMPDEST SWAP4 POP SWAP2 SWAP5 POP SWAP3 PUSH2 0x1412 JUMPI JUMPDEST PUSH1 0x6C SHL SWAP2 PUSH1 0x65 SHL OR OR SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x64 SHL SWAP1 SWAP2 OR SWAP1 PUSH2 0x1406 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x4C617A696E657373206F7574206F662072616E6765 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x5370656564206F7574206F662072616E6765 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x546F6F206D616E79207765617261626C6573 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x14E5 JUMPI JUMP JUMPDEST PUSH4 0x118CDAA7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID DUP11 SWAP4 SMOD 0xE5 0xE4 STATICCALL 0xBA 0xE0 0xD 0xE1 0xB4 MOD 0xAE 0xBE 0xEF DUP8 0xDE PUSH14 0x231E52FE8251C01FF274B8F79BBC LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG4 MUL 0xA8 0xC0 0x27 0x26 SWAP5 SDIV BYTE LOG4 SLOAD 0x2C GASPRICE EQ 0xD SWAP5 PUSH0 XOR 0xAE 0xAF DUP1 0xE9 DUP9 PUSH10 0x6DD883FBE6A78116473 PUSH16 0x6C634300081C00330000000000000000 ","sourceMap":"181:7203:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;181:7203:19;;;;;;;;;;;;828:79;181:7203;836:30;181:7203;;;836:30;181:7203;;828:79;:::i;:::-;181:7203;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;181:7203:19;;;;;;-1:-1:-1;;;;;181:7203:19;;;;;;;;1500:62:0;;:::i;:::-;2627:22;;2623:91;;181:7203:19;;;-1:-1:-1;;;;;;181:7203:19;;;;;;-1:-1:-1;;;;;181:7203:19;;3052:40:0;;181:7203:19;3052:40:0;181:7203:19;2623:91:0;2672:31;;;181:7203:19;2672:31:0;181:7203:19;;;;;2672:31:0;181:7203:19;;;;;;-1:-1:-1;;181:7203:19;;;;;;5414:13;:::i;181:7203::-;;;;;;-1:-1:-1;;181:7203:19;;;;;;;;;;;;828:79;181:7203;836:30;181:7203;;;836:30;181:7203;;828:79;:::i;:::-;181:7203;;;;;;836:30;181:7203;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;181:7203:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;181:7203:19;;;;;;;;;;;;;7174:30;181:7203;;;7174:30;181:7203;;;;;;;;;;;;;;;;-1:-1:-1;;181:7203:19;;;;;5651:7;181:7203;;5651:7;:::i;:::-;181:7203;;;;;;;;;;;;-1:-1:-1;;181:7203:19;;;;;;;;;;;;828:79;181:7203;836:30;181:7203;;;836:30;181:7203;;828:79;:::i;:::-;181:7203;;;;;;;;;;;;;;;;3954:14;;;;;181:7203;:::i;:::-;;;;:::i;:::-;;4096:31;;;:::i;:::-;181:7203;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;181:7203:19;;;;;;;242:2:17;181:7203:19;;242:2:17;;5838:43;181:7203:19;;;;;;;;;-1:-1:-1;;181:7203:19;;;;;;;;-1:-1:-1;;;;;181:7203:19;;;;;;;;;;;;;;-1:-1:-1;;181:7203:19;;;;;;;;;;;;828:79;181:7203;836:30;181:7203;;;836:30;181:7203;;828:79;:::i;:::-;181:7203;;;;;;;;;;;;4504:33;181:7203;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;181:7203:19;;;;;;;;-1:-1:-1;;;;;181:7203:19;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;-1:-1:-1;;;;;181:7203:19;;;;;1294:57;181:7203;;;;;;:::i;:::-;1500:62:0;;;:::i;:::-;181:7203:19;;;;;1294:57;;:::i;:::-;181:7203;;;;;;;;;;-1:-1:-1;;;;;181:7203:19;;;;;;;;;;;1437:132;;181:7203;;;;;1437:132;;181:7203;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;181:7203:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;181:7203:19;;;;;;;;;;;;;;;;;;242:2:17;181:7203:19;;;;;;;;;;;;;;;;;;;;;;;;;1595:52;181:7203;;1595:52;;;;;:::i;:::-;;;;181:7203;;;;;-1:-1:-1;181:7203:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;181:7203:19;;;;;;;;;;;;;;;;;;;;;;;;;;242:2:17;181:7203:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;181:7203:19;;;;;242:2:17;;;181:7203:19;;;;;;;;;;;;;;-1:-1:-1;;181:7203:19;;;;;;;242:2:17;;;181:7203:19;;5991:46:17;;181:7203:19;;;;;;;;;-1:-1:-1;;181:7203:19;;;;1500:62:0;;:::i;:::-;181:7203:19;;;-1:-1:-1;;;;;;181:7203:19;;;;-1:-1:-1;;;;;181:7203:19;3052:40:0;181:7203:19;;3052:40:0;181:7203:19;;;;;;;-1:-1:-1;;181:7203:19;;;;;;;;-1:-1:-1;;;;;181:7203:19;;;;;-1:-1:-1;;;;;;;;;;;181:7203:19;;;;;;:::i;:::-;;;;;;;828:79;181:7203;836:30;181:7203;;;836:30;181:7203;;828:79;:::i;:::-;181:7203;;;;;;6467:58;181:7203;;;;6340:36;181:7203;;6340:36;:::i;:::-;6467:58;;;;;:::i;:::-;181:7203;;;;;;;;;;;;;;;;;;;;6685:14;;181:7203;:::i;:::-;;;;;;-1:-1:-1;;181:7203:19;;;;;;;;;;;;828:79;181:7203;836:30;181:7203;;;836:30;181:7203;;828:79;:::i;:::-;181:7203;;;;;;;;;;;;;;242:2:17;;;5678:49;5677:56;181:7203:19;;;;;;;;;-1:-1:-1;;181:7203:19;;;;;5163:7;181:7203;;5163:7;:::i;181:7203::-;;;;;;-1:-1:-1;;181:7203:19;;;;;;;;-1:-1:-1;;;;;181:7203:19;;;;;;;;;;;:::i;:::-;;;;;;;;828:79;181:7203;836:30;181:7203;;;836:30;181:7203;;828:79;:::i;:::-;181:7203;;;;;;;;;6926:14;181:7203;6926:14;;181:7203;;;;-1:-1:-1;;;;;181:7203:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;181:7203:19;;;;;;;;;;;;;;;;;;;242:2:17;181:7203:19;;;;;;;;;;6978:57;181:7203;;6978:57;;;;;:::i;181:7203::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;181:7203:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;242:2:17;181:7203:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;181:7203:19;;;;;;;;;;;;828:79;181:7203;836:30;181:7203;;;836:30;181:7203;;828:79;:::i;:::-;181:7203;;;;;;;;;;;;;;;;;828:79;181:7203;836:30;181:7203;;;836:30;181:7203;;828:79;:::i;:::-;181:7203;;;;;;;;;5691:18:17;5163:7:19;;;:::i;:::-;5651;181:7203;2171:17;5651:7;;;:::i;:::-;2171:17;;:::i;:::-;2559:14;;2750:31;181:7203;2750:31;181:7203;242:2:17;;;5678:49;5677:56;2750:31:19;181:7203;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;181:7203:19;;;;2750:31;181:7203;;;2294:682;181:7203;;2294:682;;181:7203;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;;181:7203:19;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2294:682;181:7203;;;;;;;;;;;;;836:30;181:7203;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;181:7203:19;;;;;;;;;;;;;-1:-1:-1;;;181:7203:19;;;;;;;;;-1:-1:-1;;;181:7203:19;;;;;;;;-1:-1:-1;;;181:7203:19;;;;-1:-1:-1;;;181:7203:19;;;;2294:682;;;;;;;;;;:::i;181:7203::-;;;;;;;;;;;;;;;;;;-1:-1:-1;;181:7203:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;181:7203:19;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;181:7203:19;;-1:-1:-1;181:7203:19;;-1:-1:-1;181:7203:19;;;2750:31;181:7203;;;;;;;:::i;:::-;;;;-1:-1:-1;;;181:7203:19;;;;2750:31;;181:7203;;;;;;;:::i;:::-;4706:4;181:7203;4706:4;:::i;181:7203::-;;;;;;;:::i;:::-;188:2:17;5417:21;;188:2;;;;242;;;;;;188;242;;;;;;;181:7203:19;5554:13:17;242:2;181:7203:19;;;242:2:17;;5489:78;181:7203:19;;;242:2:17;;;;181:7203:19;242:2:17;;181:7203:19;242:2:17;;181:7203:19;242:2:17;188;181:7203:19;;-1:-1:-1;;;188:2:17;;;181:7203:19;188:2:17;;;;;;;181:7203:19;-1:-1:-1;;;181:7203:19;;;188:2:17;;;;181:7203:19;;;;;;-1:-1:-1;;181:7203:19;;;;;;5911:13;:::i;181:7203::-;;;;;;;;-1:-1:-1;;181:7203:19;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;181:7203:19;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;181:7203:19;;;;;;;:::o;:::-;-1:-1:-1;;;;;181:7203:19;;;;;;-1:-1:-1;;181:7203:19;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;181:7203:19;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;181:7203:19;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;181:7203:19;;;;;;;;;;;;;;;;;-1:-1:-1;;;181:7203:19;;;;;;;779:148;5965:23;779:148;181:7203;-1:-1:-1;181:7203:19;836:14;181:7203;;828:79;181:7203;836:30;181:7203;-1:-1:-1;181:7203:19;836:30;181:7203;;828:79;:::i;:::-;181:7203;;836:14;181:7203;;;;;;;5965:23;181:7203;5944:61;:::i;779:148::-;;4742:23;779:148;181:7203;-1:-1:-1;181:7203:19;836:14;181:7203;;828:79;181:7203;836:30;181:7203;-1:-1:-1;181:7203:19;836:30;181:7203;;828:79;:::i;4742:23::-;181:7203;-1:-1:-1;4706:4:19;:::i;181:7203::-;;;;;;;;;;;;;;;;;;;:::o;:::-;242:2:17;;;181:7203:19;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;779:148::-;181:7203;;;836:14;181:7203;;828:79;181:7203;836:30;181:7203;;;836:30;181:7203;;828:79;:::i;:::-;181:7203;;836:14;181:7203;;242:2:17;181:7203:19;;;;242:2:17;;5838:43;779:148:19;:::o;181:7203::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;181:7203:19;;;;;;;;-1:-1:-1;181:7203:19;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;779:148::-;181:7203;;;836:14;181:7203;;828:79;181:7203;836:30;181:7203;;;836:30;181:7203;;828:79;:::i;:::-;181:7203;;836:14;181:7203;;242:2:17;181:7203:19;;;;6004:17:17;242:2;745:78;;6004:17;242:2;5991:46;779:148:19;:::o;:::-;5465:23;779:148;181:7203;-1:-1:-1;181:7203:19;836:14;181:7203;;828:79;181:7203;836:30;181:7203;-1:-1:-1;181:7203:19;836:30;181:7203;;828:79;:::i;5465:23::-;181:7203;5447:58;:::i;4157:611:17:-;4240:7;;4236:50;;4246:1;4306:14;;4370:6;;;181:7203:19;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;-1:-1:-1;;181:7203:19;;;:::i;:::-;;;;;;;4533:188:17;4540:7;;;;;;-1:-1:-1;;242:2:17;;;;;;;4564:7;181:7203:19;;4418:2:17;181:7203:19;;;4600:2:17;181:7203:19;;;;;;;;;-1:-1:-1;181:7203:19;;;4418:2:17;;181:7203:19;;-1:-1:-1;;;;;;181:7203:19;4246:1:17;4674:12;;181:7203:19;;;;4674:12:17;181:7203:19;4533:188:17;;;181:7203:19;242:2:17;;;4246:1;181:7203:19;;;;;4246:1:17;181:7203:19;4540:7:17;;;;;4157:611;:::o;4363:69::-;181:7203:19;-1:-1:-1;;181:7203:19;;;;;4418:2:17;181:7203:19;;;;4363:69:17;;;4236:50;181:7203:19;;;;;;;:::i;:::-;;;;-1:-1:-1;;;181:7203:19;;;;4264:10:17;:::o;181:7203:19:-;;;;;;;;;;;;;;;:::o;2482:851:17:-;181:7203:19;;;2482:851:17;181:7203:19;;;;;:::i;:::-;188:2:17;181:7203:19;;-1:-1:-1;;181:7203:19;;;;;;2682:42:17;-1:-1:-1;2797:17:17;188:2;2797:17;;;;3018:18;;181:7203:19;242:2:17;;;;3005:49;3004:56;3158:14;242:2;;;;;3145:43;3292:17;;242:2;745:78;;2816:3;188:2;242;;;;;;188;242;;;;;;;181:7203:19;2914:13:17;913:28;242:2;;;2853:74;2836:91;;;;:::i;:::-;181:7203:19;;2782:13:17;;1078:1392;;;;188:2;181:7203:19;;1277:35:17;181:7203:19;;1428:1:17;1455:3;181:7203:19;;1431:22:17;;;;;136:4;1483:14;;;;:::i;:::-;181:7203:19;1483:33:17;136:4;;181:7203:19;;1416:13:17;;136:4;181:7203:19;;-1:-1:-1;;;136:4:17;;;;;;;;;;;181:7203:19;-1:-1:-1;;;181:7203:19;;;136:4:17;;;;1431:22;;;;;;1685:3;1676:12;;136:4;;1685:3;1744:15;;136:4;;1428:1;1898:13;;1937:3;181:7203:19;;1913:22:17;;;;;1969:14;;;;:::i;:::-;181:7203:19;242:2:17;188;242;;;;;;188;242;;;;;;;181:7203:19;242:2:17;;1957:74;1937:3;181:7203:19;1898:13:17;;;1913:22;;;;;;;2094:88;;1893:150;242:2;;;;;2264:35;2385:41;1078:1392;:::o;2094:88::-;-1:-1:-1;;;2126:44:17;;;;2094:88;;136:4;181:7203:19;;-1:-1:-1;;;136:4:17;;;;;;;;;;;181:7203:19;-1:-1:-1;;;181:7203:19;;;136:4:17;1685:3;;136:4;;181:7203:19;;-1:-1:-1;;;136:4:17;;;;;;;;;;;181:7203:19;-1:-1:-1;;;181:7203:19;;;136:4:17;1685:3;;136:4;181:7203:19;;;-1:-1:-1;;;181:7203:19;;;;;;;;;;;;-1:-1:-1;;;181:7203:19;;;;;;;1796:162:0;1710:6;181:7203:19;-1:-1:-1;;;;;181:7203:19;735:10:8;1855:23:0;1851:101;;1796:162::o;1851:101::-;1901:40;;;1710:6;1901:40;735:10:8;1901:40:0;181:7203:19;;1710:6:0;1901:40"},"methodIdentifiers":{"_getLaziness(uint256)":"722f7412","_getSpeed(uint256)":"9f7c43cd","deleteTokenMetadata(uint256)":"db5c339b","generateTokenURI(uint256)":"210fa96b","getBase64Uri(uint256)":"8b6f1ae6","getEncodedMetadata(uint256)":"ff410206","getLaziness(uint256)":"cf544bfc","getLazinessFormatted(uint256)":"09c88b24","getMetadata(uint256)":"a574cea4","getSpeed(uint256)":"4b93f753","getSpeedFormatted(uint256)":"ee0dbd66","getWearableAt(uint256,uint256)":"0a02c9ac","hasWearable(uint256,uint256)":"1b21e52c","isTalkative(uint256)":"54e35a42","owner()":"8da5cb5b","renounceOwnership()":"715018a6","setMetadata(uint256,uint256[],bool,uint256,uint256,string)":"77586126","tokenDataExists(uint256)":"d938eb23","transferOwnership(address)":"f2fde38b","updateBase64Uri(uint256,string)":"32d236a6","updateWearables(uint256,uint256[])":"6ae83f79"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"skyBudContract\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"encodedMetadata\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"base64Uri\",\"type\":\"string\"}],\"name\":\"MetadataUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"metadata\",\"type\":\"uint256\"}],\"name\":\"_getLaziness\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"metadata\",\"type\":\"uint256\"}],\"name\":\"_getSpeed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"deleteTokenMetadata\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"generateTokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getBase64Uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getEncodedMetadata\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getLaziness\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getLazinessFormatted\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getMetadata\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"encodedMetadata\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"base64Uri\",\"type\":\"string\"},{\"internalType\":\"uint256[]\",\"name\":\"wearableIds\",\"type\":\"uint256[]\"},{\"internalType\":\"bool\",\"name\":\"isTalkative\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"speed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"laziness\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getSpeed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getSpeedFormatted\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"metadata\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getWearableAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"wearableId\",\"type\":\"uint256\"}],\"name\":\"hasWearable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"isTalkative\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"wearableIds\",\"type\":\"uint256[]\"},{\"internalType\":\"bool\",\"name\":\"isTalkative\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"speed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"laziness\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"base64Uri\",\"type\":\"string\"}],\"name\":\"setMetadata\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenDataExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"base64Uri\",\"type\":\"string\"}],\"name\":\"updateBase64Uri\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"wearableIds\",\"type\":\"uint256[]\"}],\"name\":\"updateWearables\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SkybudsMetadata.sol\":\"SkyBudsMetadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/MetadataEncoding.sol\":{\"keccak256\":\"0xa6baf29250bb24de07fe0f5572e5645846250387991ac328772b51d868782221\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0558dfb3dcf8177ffcbb3678ce5309fd0720329ef3c45fa06f598d9ca70fdac2\",\"dweb:/ipfs/QmbixhhuBx34UWVTvkCDADxJhQfhBx99mrNzXv65h573pm\"]},\"contracts/SkybudsMetadata.sol\":{\"keccak256\":\"0xc94c478d1df5a7d3e7ea393dbb7b7e4e6679fe1da2868a91e21eb6055389743a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7e66cfe304de57498fe05d2e7673ea527aff2a3f38d59d4944f4f1a098c81ab\",\"dweb:/ipfs/QmVCuPBxUwUvNLYxnKb2dwgCNfxi3WgPSUGsFGskYKU5nV\"]}},\"version\":1}"}}}}}